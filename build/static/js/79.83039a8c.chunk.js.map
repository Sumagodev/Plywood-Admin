{"version":3,"sources":["views/apps/email/MailCard.js","views/apps/email/MailDetails.js","views/apps/email/ComposePopup.js","views/apps/email/Mails.js","views/apps/email/Sidebar.js","views/apps/email/index.js"],"names":["MailCard","props","mail","dispatch","selectMail","labelColors","updateMails","selectedMails","handleMailClick","handleMailReadUpdate","formatDateToMonthShort","onClick","id","className","classnames","isRead","img","from","avatar","type","name","onChange","e","stopPropagation","checked","includes","for","emailIds","dataToUpdate","isStarred","size","favorite","subject","attachments","length","arr","map","label","renderLabels","labels","time","htmlToString","message","MailDetails","openMail","setOpenMail","paginateMail","handleMailToTrash","handleFolderUpdate","handleLabelsUpdate","showReplies","setShowReplies","useState","renderMessage","obj","imgHeight","imgWidth","tag","caret","email","borderless","to","formatDate","end","dangerouslySetInnerHTML","__html","item","index","href","preventDefault","src","thumbnail","alt","fileName","width","handleGoBack","handleFolderClick","folder","show","undefined","hasPreviousMail","dir","emailId","hasNextMail","options","wheelPropagation","sm","color","pill","replies","renderReplies","ComposePopup","composeOpen","toggleCompose","ccOpen","setCCOpen","bccOpen","setBCCOpen","selectOptions","value","img1","img2","img3","img4","img5","img6","SelectComponent","data","Option","toggleCC","toggleBCC","togglePopUp","scrollable","fade","keyboard","backdrop","container","isOpen","contentClassName","toggle","modalClassName","onSubmit","isMulti","isClearable","theme","selectThemeColors","classNamePrefix","components","placeholder","toolbarClassName","wrapperClassName","editorClassName","toolbar","inline","inDropdown","direction","hidden","divider","Mails","query","store","setQuery","selectAllMail","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","personal","company","important","private","ids","bool","then","target","renderMails","currentMail","Sidebar","sidebarOpen","getMails","params","useParams","handleFolder","handleLabel","handleActiveItem","block","Link","action","active","Object","keys","emailsMeta","inbox","draft","spam","EmailApp","setComposeOpen","useDispatch","useSelector","state","useEffect","q"],"mappings":"2QA2GeA,MA9FEC,IAEf,MAAM,KACJC,EAAI,SACJC,EAAQ,WACRC,EAAU,YACVC,EAAW,YACXC,EAAW,cACXC,EAAa,gBACbC,EAAe,qBACfC,EAAoB,uBACpBC,GACET,EAiBJ,OACE,qBAAIU,QAAS,KAAkBT,EAAKU,GALpCJ,EAAgBN,EAAKU,SACrBH,EAAqB,CAACP,EAAKU,KAAK,IAISC,UAAWC,IAAW,mBAAoB,CAAE,YAAaZ,EAAKa,SAAU,UAC/G,sBAAKF,UAAU,kBAAiB,UAC9B,cAAC,IAAM,CAACG,IAAKd,EAAKe,KAAKC,SACvB,sBAAKL,UAAU,cAAa,UAY1B,sBAAKA,UAAU,aAAY,UACzB,cAAC,IAAK,CACJM,KAAK,WACLP,GAAK,GAAEV,EAAKe,KAAKG,QAAQlB,EAAKU,KAC9BS,SAAUC,GAAKA,EAAEC,kBACjBC,QAASjB,EAAckB,SAASvB,EAAKU,IACrCD,QAASW,IACPnB,EAASC,EAAWF,EAAKU,KACzBU,EAAEC,iBAAiB,IAGvB,cAAC,IAAK,CAACZ,QAASW,GAAKA,EAAEC,kBAAmBG,IAAM,GAAExB,EAAKe,KAAKG,QAAQlB,EAAKU,UAE3E,qBACEC,UAAU,iBACVF,QAASW,IACPA,EAAEC,kBACFpB,EAASG,EAAY,CAAEqB,SAAU,CAACzB,EAAKU,IAAKgB,aAAc,CAAEC,WAAY3B,EAAK2B,aAAe,EAC5F,SAEF,cAAC,IAAI,CACHC,KAAM,GACNjB,UAAWC,IAAW,CACpBiB,SAAU7B,EAAK2B,sBAMzB,sBAAKhB,UAAU,YAAW,UACxB,sBAAKA,UAAU,eAAc,UAC3B,sBAAKA,UAAU,aAAY,UACzB,oBAAIA,UAAU,QAAO,SAAEX,EAAKe,KAAKG,OACjC,sBAAMP,UAAU,gBAAe,SAAEX,EAAK8B,aAExC,sBAAKnB,UAAU,iBAAgB,UAC5BX,EAAK+B,aAAe/B,EAAK+B,YAAYC,OAAS,cAAC,IAAS,CAACJ,KAAM,KAAS,KAlE9DK,KACnB,GAAIA,GAAOA,EAAID,OACb,OAAOC,EAAIC,KAAIC,GACb,sBAAkBxB,UAAY,iBAAgBR,EAAYgC,sBAA/CA,IAEf,EA8DSC,CAAapC,EAAKqC,QACnB,sBAAM1B,UAAU,YAAW,SAAEH,EAAuBR,EAAKsC,cAG7D,qBAAK3B,UAAU,eAAc,SAC3B,mBAAGA,UAAU,qBAAoB,SAAE4B,YAAavC,EAAKwC,kBAGtD,E,gIC6TMC,MAtXK1C,IAElB,MAAM,KACJC,EAAI,SACJ0C,EAAQ,SACRzC,EAAQ,YACRE,EAAW,YACXwC,EAAW,YACXvC,EAAW,aACXwC,EAAY,kBACZC,EAAiB,mBACjBC,EAAkB,mBAClBC,EAAkB,qBAClBxC,EAAoB,uBACpBC,GACET,GAGGiD,EAAaC,GAAkBC,oBAAS,GAkCzCC,EAAgBC,IACpB,OACE,eAAC,IAAI,WACH,eAAC,IAAU,CAACzC,UAAU,oBAAmB,UACvC,sBAAKA,UAAU,2EAA0E,UACvF,cAAC,IAAM,CAACG,IAAKsC,EAAIrC,KAAKC,OAAQL,UAAU,QAAQ0C,UAAU,KAAKC,SAAS,OACxE,sBAAK3C,UAAU,aAAY,UACzB,oBAAIA,UAAU,OAAM,SAAEyC,EAAIrC,KAAKG,OAC/B,eAAC,KAAoB,CAACP,UAAU,oBAAmB,UACjD,cAAC,IAAc,CAACA,UAAU,yCAAyC4C,IAAI,OAAOC,OAAK,WACjF,sBAAM7C,UAAU,QAAO,SAAEyC,EAAIrC,KAAK0C,UAEpC,cAAC,IAAY,UACX,cAAC,KAAK,CAAC9C,UAAU,eAAeiB,KAAK,KAAK8B,YAAU,WAClD,kCACE,+BACE,oBAAI/C,UAAU,gCAA+B,SAAC,UAC9C,6BAAKyC,EAAIrC,KAAK0C,WAEhB,+BACE,oBAAI9C,UAAU,gCAA+B,SAAC,QAC9C,6BAAKyC,EAAIO,GAAG,GAAGF,WAEjB,+BACE,oBAAI9C,UAAU,gCAA+B,SAAC,UAC9C,+BACGH,EAAuB4C,EAAId,MAAM,KAAG9B,EAAuB4C,EAAId,MAAM,yBAStF,sBAAK3B,UAAU,2CAA0C,UACvD,uBAAOA,UAAU,4BAA2B,SAAEiD,YAAWR,EAAId,QAC7D,eAAC,KAAoB,CAAC3B,UAAU,QAAO,UACrC,cAAC,IAAc,CAACA,UAAU,iBAAiB4C,IAAI,OAAM,SACnD,cAAC,IAAY,CAAC3B,KAAM,OAEtB,eAAC,IAAY,CAACiC,KAAG,YACf,eAAC,IAAY,CAAClD,UAAU,kCAAiC,UACvD,cAAC,IAAY,CAACA,UAAU,QAAQiB,KAAM,KAAM,WAG9C,eAAC,IAAY,CAACjB,UAAU,kCAAiC,UACvD,cAAC,IAAa,CAACA,UAAU,QAAQiB,KAAM,KAAM,aAG/C,eAAC,IAAY,CAACjB,UAAU,kCAAiC,UACvD,cAAC,IAAM,CAACA,UAAU,QAAQiB,KAAM,KAAM,wBAOhD,cAAC,IAAQ,CAACjB,UAAU,4BAA2B,SAC7C,qBAAKA,UAAU,eAAemD,wBAAyB,CAAEC,OAAQX,EAAIZ,aAEtEY,EAAIrB,aAAeqB,EAAIrB,YAAYC,OAClC,cAAC,IAAU,UACT,sBAAKrB,UAAU,mBAAkB,UAC/B,sBAAKA,UAAU,iCAAgC,UAC7C,cAAC,IAAS,CAACiB,KAAM,KACjB,qBAAIjB,UAAU,iCAAgC,UAAEyC,EAAIrB,YAAYC,OAAO,oBAEzE,qBAAKrB,UAAU,qBAAoB,UAxFrBsB,EAwFyCmB,EAAIrB,YAvF9DE,EAAIC,KAAI,CAAC8B,EAAMC,IAElB,oBAEEC,KAAK,IACLzD,QAASW,GAAKA,EAAE+C,iBAChBxD,UAAWC,IAAW,CACpB,QAASqD,EAAQ,IAAMhC,EAAID,SAC1B,UAEH,qBAAKoC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,SAAUC,MAAM,KAAK7D,UAAU,UACnE,sBAAMA,UAAU,sCAAqC,SAAEqD,EAAKO,WAC5D,sBAAM5D,UAAU,gCAA+B,SAAG,IAAGqD,EAAKpC,YATrDoC,EAAKO,oBAuFR,QA3FgBtC,KA4Ff,EAqBLwC,EAAe,KACnB9B,GAAY,EAAM,EAGd+B,EAAoB,CAACtD,EAAGuD,EAAQjE,KACpCoC,EAAmB1B,EAAGuD,EAAQ,CAACjE,IAC/B+D,GAAc,EAQhB,OACE,qBACE9D,UAAWC,IAAW,oBAAqB,CACzCgE,KAAMlC,IACL,SAEO,OAAT1C,QAA0B6E,IAAT7E,EAChB,eAAC,WAAQ,WACP,sBAAKW,UAAU,sBAAqB,UAClC,sBAAKA,UAAU,8CAA6C,UAC1D,sBAAMA,UAAU,eAAeF,QAASgE,EAAa,SACnD,cAAC,IAAW,CAAC7C,KAAM,OAErB,oBAAIjB,UAAU,qBAAoB,SAAEX,EAAK8B,aAE3C,qBAAKnB,UAAU,+BAA8B,SAC3C,qBAAIA,UAAU,kBAAiB,UAC7B,oBAAIA,UAAU,wBAAuB,SACnC,sBACEA,UAAU,uBACVF,QAAS,KACPR,EAASG,EAAY,CAAEqB,SAAU,CAACzB,EAAKU,IAAKgB,aAAc,CAAEC,WAAY3B,EAAK2B,aAAe,EAC5F,SAEF,cAAC,IAAI,CACHC,KAAM,GACNjB,UAAWC,IAAW,CACpB,4BAA6BZ,EAAK2B,kBAK1C,oBAAIhB,UAAU,wBAAuB,SACnC,eAAC,KAAoB,WACnB,cAAC,IAAc,CAAC4C,IAAI,OAAM,SACxB,cAAC,IAAM,CAAC3B,KAAM,OAEhB,eAAC,IAAY,CAACiC,KAAG,YACf,eAAC,IAAY,CACXN,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAKsD,EAAkBtD,EAAG,QAASpB,EAAKU,IACjDC,UAAU,4BAA2B,UAErC,cAAC,IAAK,CAACA,UAAU,QAAQiB,KAAM,KAC/B,+BAAM,aAER,eAAC,IAAY,CACX2B,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAKsD,EAAkBtD,EAAG,OAAQpB,EAAKU,IAChDC,UAAU,4BAA2B,UAErC,cAAC,IAAI,CAACA,UAAU,QAAQiB,KAAM,KAC9B,+BAAM,YAER,eAAC,IAAY,CACX2B,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAKsD,EAAkBtD,EAAG,QAASpB,EAAKU,IACjDC,UAAU,4BAA2B,UAErC,cAAC,IAAK,CAACA,UAAU,QAAQiB,KAAM,KAC/B,+BAAM,qBAKd,oBAAIjB,UAAU,wBAAuB,SACnC,eAAC,KAAoB,WACnB,cAAC,IAAc,CAAC4C,IAAI,OAAM,SACxB,cAAC,IAAG,CAAC3B,KAAM,OAEb,eAAC,IAAY,CAACiC,KAAG,YACf,eAAC,IAAY,CACXN,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,WAAY,CAACpB,EAAKU,KACtDC,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,0CAChB,+BAAM,gBAER,eAAC,IAAY,CACX4C,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,UAAW,CAACpB,EAAKU,KACrDC,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,0CAChB,+BAAM,eAER,eAAC,IAAY,CACX4C,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,YAAa,CAACpB,EAAKU,KACvDC,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,0CAChB,+BAAM,iBAER,eAAC,IAAY,CACX4C,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,UAAW,CAACpB,EAAKU,KACrDC,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,yCAChB,+BAAM,uBAKd,oBAAIA,UAAU,wBAAuB,SACnC,sBAAMA,UAAU,cAAcF,QAvHtB,KACtBF,EAAqB,CAACP,EAAKU,KAAK,GAChC+D,GAAc,EAqHuD,SACrD,cAAC,IAAI,CAAC7C,KAAM,SAGhB,oBAAIjB,UAAU,wBAAuB,SACnC,sBACEA,UAAU,cACVF,QAAS,KACPoC,EAAkB,CAAC7C,EAAKU,KACxB+D,GAAc,EACd,SAEF,cAAC,IAAK,CAAC7C,KAAM,SAGjB,oBAAIjB,UAAU,8BAA6B,SACzC,sBACEA,UAAWC,IAAW,CACpB,cAAeZ,EAAK8E,kBAEtBrE,QAAS,IACAT,EAAK8E,gBAAkB7E,EAAS2C,EAAa,CAAEmC,IAAK,OAAQC,QAAShF,EAAKU,MAAS,KAC1F,SAEF,cAAC,IAAW,CACVkB,KAAM,GACNjB,UAAWC,IAAW,CACpB,cAAeZ,EAAK8E,wBAK5B,oBAAInE,UAAU,8BAA6B,SACzC,sBACEA,UAAWC,IAAW,CACpB,cAAeZ,EAAKiF,cAEtBxE,QAAS,IACAT,EAAKiF,YAAchF,EAAS2C,EAAa,CAAEmC,IAAK,WAAYC,QAAShF,EAAKU,MAAS,KAC1F,SAEF,cAAC,IAAY,CACXkB,KAAM,GACNjB,UAAWC,IAAW,CACpB,cAAeZ,EAAKiF,4BAQlC,eAAC,IAAgB,CAACtE,UAAU,oBAAoBuE,QAAS,CAAEC,kBAAkB,GAAQ,UACnF,cAAC,KAAG,UACF,cAAC,IAAG,CAACC,GAAG,KAAI,SACV,qBAAKzE,UAAU,cAAa,SAnTrBsB,KACnB,GAAIA,GAAOA,EAAID,OACb,OAAOC,EAAIC,KAAIC,GACb,cAAC,IAAK,CAAakD,MAAQ,SAAQlF,EAAYgC,KAAUxB,UAAU,wBAAwB2E,MAAI,WAC5FnD,GADSA,IAIhB,EA4S0CC,CAAapC,EAAKqC,cAGnDrC,EAAKuF,SAAWvF,EAAKuF,QAAQvD,OAC5B,eAAC,WAAQ,YACU,IAAhBgB,EACC,cAAC,KAAG,CAACrC,UAAU,OAAM,SACnB,cAAC,IAAG,CAACyE,GAAG,KAAI,SACV,oBAAGzE,UAAU,UAAUuD,KAAK,IAAIzD,QApM1BW,IACxBA,EAAE+C,iBACFlB,GAAe,EAAK,EAkMyD,UAAC,QACpDjD,EAAKuF,QAAQvD,OAAO,2BAI9B,KApNIC,KACpB,GAAIA,EAAID,SAA0B,IAAhBgB,EAChB,OAAOf,EAAIC,KAAI,CAACkB,EAAKa,IACnB,cAAC,KAAG,UACF,cAAC,IAAG,CAACmB,GAAG,KAAI,SAAEjC,EAAcC,MADpBa,IAId,EA+MauB,CAAcxF,EAAKuF,YAEpB,KACJ,cAAC,KAAG,UACF,cAAC,IAAG,CAACH,GAAG,KAAI,SAAEjC,EAAcnD,OAE9B,cAAC,KAAG,UACF,cAAC,IAAG,CAACoF,GAAG,KAAI,SACV,cAAC,IAAI,UACH,cAAC,IAAQ,UACP,qBAAIzE,UAAU,OAAM,UAAC,gBACL,IACd,mBAAGuD,KAAK,IAAIzD,QAASW,GAAKA,EAAE+C,iBAAiB,SAAC,UAEzC,IAAI,KACN,IACH,mBAAGD,KAAK,IAAIzD,QAASW,GAAKA,EAAE+C,iBAAiB,SAAC,6BAU1D,MACA,E,oHC1JKsB,MA7NM1F,IAEnB,MAAM,YAAE2F,EAAW,cAAEC,GAAkB5F,GAGhC6F,EAAQC,GAAa3C,oBAAS,IAC9B4C,EAASC,GAAc7C,oBAAS,GAGjC8C,EAAgB,CACpB,CAAEC,MAAO,SAAU9D,MAAO,gBAAiBrB,IAAKoF,WAChD,CAAED,MAAO,WAAY9D,MAAO,gBAAiBrB,IAAKqF,WAClD,CAAEF,MAAO,OAAQ9D,MAAO,cAAerB,IAAKsF,WAC5C,CAAEH,MAAO,SAAU9D,MAAO,gBAAiBrB,IAAKuF,WAChD,CAAEJ,MAAO,OAAQ9D,MAAO,iBAAkBrB,IAAKwF,WAC/C,CAAEL,MAAO,SAAU9D,MAAO,eAAgBrB,IAAKyF,YAG3CC,EAAkB,IAAyB,IAAxB,KAAEC,KAAS1G,GAAO,EACzC,OACE,cAAC,IAAW2G,OAAM,IAAK3G,EAAK,SAC1B,sBAAKY,UAAU,sCAAqC,UAClD,cAAC,IAAM,CAACA,UAAU,aAAaiB,KAAK,KAAKd,IAAK2F,EAAK3F,MAClD2F,EAAKtE,UAEU,EAKlBwE,EAAWvF,IACfA,EAAE+C,iBACF0B,GAAWD,EAAO,EAIdgB,EAAYxF,IAChBA,EAAE+C,iBACF4B,GAAYD,EAAQ,EAIhBe,EAAczF,IAClBA,EAAE+C,iBACFwB,GAAe,EAGjB,OACE,eAAC,IAAK,CACJmB,YAAU,EACVC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVvG,GAAG,eACHwG,UAAU,gBACVvG,UAAU,WACVwG,OAAQzB,EACR0B,iBAAiB,MACjBC,OAAQ1B,EACR2B,eAAe,eAAc,UAE7B,sBAAK3G,UAAU,eAAc,UAC3B,oBAAIA,UAAU,cAAa,SAAC,iBAC5B,sBAAKA,UAAU,gBAAe,UAC5B,mBAAGuD,KAAK,IAAIvD,UAAU,kBAAkBF,QAASoG,EAAY,SAC3D,cAAC,IAAK,CAACjF,KAAM,OAEf,mBAAGsC,KAAK,IAAIvD,UAAU,kBAAkBF,QAASW,GAAKA,EAAE+C,iBAAiB,SACvE,cAAC,IAAS,CAACvC,KAAM,OAEnB,mBAAGsC,KAAK,IAAIvD,UAAU,YAAYF,QAASoG,EAAY,SACrD,cAAC,IAAC,CAACjF,KAAM,aAIf,cAAC,IAAS,CAACjB,UAAU,kBAAiB,SACpC,eAAC,IAAI,CAACA,UAAU,eAAe4G,SAAUnG,GAAKA,EAAE+C,iBAAiB,UAC/D,sBAAKxD,UAAU,0BAAyB,UACtC,cAAC,IAAK,CAACa,IAAI,WAAWb,UAAU,aAAY,SAAC,QAG7C,qBAAKA,UAAU,cAAa,SAC1B,cAAC,IAAM,CACL6G,SAAO,EACP9G,GAAG,WACH+G,aAAa,EACbC,MAAOC,IACPzC,QAASc,EACTrF,UAAU,iCACViH,gBAAgB,SAChBC,WAAY,CAAEnB,OAAQF,OAG1B,gCACE,mBAAGtC,KAAK,IAAIvD,UAAU,2BAA2BF,QAASkG,EAAS,SAAC,OAGpE,mBAAGzC,KAAK,IAAIvD,UAAU,sBAAsBF,QAASmG,EAAU,SAAC,eAKxD,IAAXhB,EACC,sBAAKjF,UAAU,qCAAoC,UACjD,cAAC,IAAK,CAACa,IAAI,WAAWb,UAAU,aAAY,SAAC,QAG7C,qBAAKA,UAAU,cAAa,SAC1B,cAAC,IAAM,CACL6G,SAAO,EACP9G,GAAG,WACH+G,aAAa,EACbC,MAAOC,IACPzC,QAASc,EACTrF,UAAU,iCACViH,gBAAgB,SAChBC,WAAY,CAAEnB,OAAQF,OAG1B,8BACE,mBAAGtC,KAAK,IAAIvD,UAAU,sBAAsBF,QAASkG,EAAS,SAC5D,cAAC,IAAC,CAAC/E,KAAM,YAIb,MACS,IAAZkE,EACC,sBAAKnF,UAAU,qCAAoC,UACjD,cAAC,IAAK,CAACa,IAAI,YAAYb,UAAU,aAAY,SAAC,SAG9C,qBAAKA,UAAU,cAAa,SAC1B,cAAC,IAAM,CACL6G,SAAO,EACP9G,GAAG,YACH+G,aAAa,EACbC,MAAOC,IACPzC,QAASc,EACTrF,UAAU,iCACViH,gBAAgB,SAChBC,WAAY,CAAEnB,OAAQF,OAG1B,8BACE,mBAAGtC,KAAK,IAAIvD,UAAU,sBAAsBF,QAASmG,EAAU,SAC7D,cAAC,IAAC,CAAChF,KAAM,YAIb,KACJ,sBAAKjB,UAAU,0BAAyB,UACtC,cAAC,IAAK,CAACa,IAAI,gBAAgBb,UAAU,aAAY,SAAC,aAGlD,cAAC,IAAK,CAACD,GAAG,gBAAgBoH,YAAY,eAExC,qBAAKpH,GAAG,iBAAgB,SACtB,cAAC,SAAM,CACLoH,YAAY,UACZC,iBAAiB,YACjBC,iBAAiB,iBACjBC,gBAAgB,qBAChBC,QAAS,CACPhD,QAAS,CAAC,SAAU,aACpBiD,OAAQ,CACNC,YAAY,EACZlD,QAAS,CAAC,OAAQ,SAAU,YAAa,uBAKjD,sBAAKvE,UAAU,yBAAwB,UACrC,sBAAKA,UAAU,wCAAuC,UACpD,eAAC,KAA0B,CAAC0H,UAAU,KAAK1H,UAAU,OAAM,UACzD,cAAC,IAAM,CAAC0E,MAAM,UAAU5E,QAASkF,EAAc,SAAC,SAGhD,cAAC,IAAc,CAAChF,UAAU,wBAAwB0E,MAAM,UAAU7B,OAAK,IACvE,cAAC,IAAY,CAACK,KAAG,WACf,cAAC,IAAY,CAACK,KAAK,IAAIX,IAAI,IAAI9C,QAASoG,EAAY,SAAC,uBAKzD,qBAAKlG,UAAU,oBAAmB,SAChC,eAAC,IAAK,CAACA,UAAU,OAAOa,IAAI,oBAAmB,UAC7C,cAAC,IAAS,CAACb,UAAU,uBAAuBiB,KAAM,KAClD,uBAAOX,KAAK,OAAOC,KAAK,oBAAoBR,GAAG,oBAAoB4H,QAAM,YAI/E,sBAAK3H,UAAU,0CAAyC,UACtD,eAAC,KAAoB,CAACA,UAAU,QAAQ0H,UAAU,KAAI,UACpD,cAAC,IAAc,CAAC9E,IAAI,OAAM,SACxB,cAAC,IAAY,CAAC5C,UAAU,iBAAiBiB,KAAM,OAEjD,eAAC,IAAY,CAACiC,KAAG,YACf,cAAC,IAAY,CAACK,KAAK,IAAIX,IAAI,IAAI9C,QAASW,GAAKA,EAAE+C,iBAAiB,SAAC,cAGjE,cAAC,IAAY,CAACD,KAAK,IAAIX,IAAI,IAAI9C,QAASW,GAAKA,EAAE+C,iBAAiB,SAAC,oBAGjE,cAAC,IAAY,CAACoE,SAAO,IACrB,cAAC,IAAY,CAACrE,KAAK,IAAIX,IAAI,IAAI9C,QAASW,GAAKA,EAAE+C,iBAAiB,SAAC,UAGjE,cAAC,IAAY,CAACD,KAAK,IAAIX,IAAI,IAAI9C,QAASW,GAAKA,EAAE+C,iBAAiB,SAAC,yBAKrE,cAAC,IAAK,CAACxD,UAAU,iBAAiBiB,KAAM,GAAInB,QAASkF,iBAKvD,E,kBC0BG6C,MAjQDzI,IAEZ,MAAM,MACJ0I,EAAK,MACLC,EAAK,SACLhG,EAAQ,SACRiG,EAAQ,SACR1I,EAAQ,WACRC,EAAU,YACVwF,EAAW,YACXtF,EAAW,YACXuC,EAAW,aACXC,EAAY,cACZgG,EAAa,cACbjD,EAAa,eACbkD,EAAc,gBACdC,EAAe,kBACfC,EAAiB,kBACjBC,GACEjJ,GAEE,MAAEkJ,EAAK,cAAE5I,GAAkBqI,EAK3BvI,EAAc,CAClB+I,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,QAAS,UAIL/I,EAAkBI,IACtBT,EAAS+I,EAAkBtI,IAC3BiC,GAAY,EAAK,EAWbG,EAAqB,SAAC1B,EAAGuD,GAAiC,IAAzB2E,EAAG,uDAAGjJ,EAC3Ce,EAAE+C,iBACFlE,EAASG,EAAY,CAAEqB,SAAU6H,EAAK5H,aAAc,CAAEiD,aACtD1E,EAAS8I,IACX,EAGMhG,EAAqB,SAAC3B,EAAGe,GAAgC,IAAzBmH,EAAG,uDAAGjJ,EAC1Ce,EAAE+C,iBACFlE,EAAS6I,EAAgB,CAAErH,SAAU6H,EAAKnH,WAC1ClC,EAAS8I,IACX,EAGMxI,EAAuB,CAAC0B,EAAKsH,KACjCtJ,EAASG,EAAY,CAAEqB,SAAUQ,EAAKP,aAAc,CAAEb,OAAQ0I,MAAWC,MAAK,IAAMvJ,EAAS8I,OAC7F9I,EAAS2I,GAAc,GAAO,EAI1B/F,EAAoByG,IACxBrJ,EAASG,EAAY,CAAEqB,SAAU6H,EAAK5H,aAAc,CAAEiD,OAAQ,YAC9D1E,EAAS8I,IAAoB,EA0B/B,OACE,eAAC,WAAQ,WACP,sBAAKpI,UAAU,iBAAgB,UAC7B,sBAAKA,UAAU,6CAA4C,UACzD,qBAAKA,UAAU,wCAAwCF,QAAS,IAAMoI,GAAe,GAAM,SACzF,cAAC,IAAI,CAACjH,KAAK,SAEb,qBAAKjB,UAAU,4DAA2D,SACxE,eAAC,IAAU,CAACA,UAAU,oBAAmB,UACvC,cAAC,IAAc,UACb,cAAC,IAAM,CAACA,UAAU,aAAaiB,KAAM,OAEvC,cAAC,IAAK,CACJlB,GAAG,eACHoH,YAAY,eACZ7B,MAAOwC,EACPtH,SAAUC,GAAKuH,EAASvH,EAAEqI,OAAOxD,iBAKzC,sBAAKtF,UAAU,aAAY,UACzB,sBAAKA,UAAU,yBAAwB,UACrC,cAAC,IAAK,CACJM,KAAK,WACLP,GAAG,aACHS,SAjFYC,IACtBnB,EAAS2I,EAAcxH,EAAEqI,OAAOnI,SAAS,EAiF/BA,QAASjB,EAAc2B,QAAU3B,EAAc2B,SAAWiH,EAAMjH,SAElE,cAAC,IAAK,CAACrB,UAAU,wCAAwCa,IAAI,aAAY,SAAC,kBAI3EnB,EAAc2B,OACb,qBAAKrB,UAAU,eAAc,SAC3B,qBAAIA,UAAU,kBAAiB,UAC7B,oBAAIA,UAAU,wBAAuB,SACnC,eAAC,KAAoB,WACnB,cAAC,IAAc,CAAC4C,IAAI,OAAM,SACxB,cAAC,IAAM,CAAC3B,KAAM,OAEhB,eAAC,IAAY,CAACiC,KAAG,YACf,eAAC,IAAY,CACXN,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK0B,EAAmB1B,EAAG,SACpCT,UAAU,4BAA2B,UAErC,cAAC,IAAK,CAACA,UAAU,QAAQiB,KAAM,KAC/B,+BAAM,aAER,eAAC,IAAY,CACX2B,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK0B,EAAmB1B,EAAG,QACpCT,UAAU,4BAA2B,UAErC,cAAC,IAAI,CAACA,UAAU,QAAQiB,KAAM,KAC9B,+BAAM,YAER,eAAC,IAAY,CACX2B,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK0B,EAAmB1B,EAAG,SACpCT,UAAU,4BAA2B,UAErC,cAAC,IAAK,CAACA,UAAU,QAAQiB,KAAM,KAC/B,+BAAM,qBAKd,oBAAIjB,UAAU,wBAAuB,SACnC,eAAC,KAAoB,WACnB,cAAC,IAAc,CAAC4C,IAAI,OAAM,SACxB,cAAC,IAAG,CAAC3B,KAAM,OAEb,eAAC,IAAY,CAACiC,KAAG,YACf,eAAC,IAAY,CACXN,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,YACpCT,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,0CAChB,+BAAM,gBAER,eAAC,IAAY,CACX4C,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,WACpCT,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,0CAChB,+BAAM,eAER,eAAC,IAAY,CACX4C,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,aACpCT,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,0CAChB,+BAAM,iBAER,eAAC,IAAY,CACX4C,IAAI,IACJW,KAAK,IACLzD,QAASW,GAAK2B,EAAmB3B,EAAG,WACpCT,UAAU,4BAA2B,UAErC,sBAAMA,UAAU,yCAChB,+BAAM,uBAKd,oBAAIA,UAAU,wBAAuB,SACnC,sBAAMA,UAAU,cAAcF,QAAS,IAAMF,EAAqBF,GAAe,GAAO,SACtF,cAAC,IAAI,CAACuB,KAAM,SAGhB,oBAAIjB,UAAU,mBAAkB,SAC9B,sBAAMA,UAAU,cAAcF,QAAS,IAAMoC,EAAkBxC,GAAe,SAC5E,cAAC,IAAK,CAACuB,KAAM,cAKnB,QAGN,cAAC,IAAgB,CAACjB,UAAU,kBAAkBuE,QAAS,CAAEC,kBAAkB,GAAQ,SAChF8D,EAAMjH,OACL,oBAAIrB,UAAU,mBAAkB,SA3JtB,MAClB,GAAIsI,EAAMjH,OACR,OAAOiH,EAAM/G,KAAI,CAAClC,EAAMiE,IAEpB,cAAC,EAAQ,CACPjE,KAAMA,EAENC,SAAUA,EACVC,WAAYA,EACZE,YAAaA,EACbD,YAAaA,EACbE,cAAeA,EACfC,gBAAiBA,EACjBC,qBAAsBA,EACtBC,uBAAwBA,KARnByD,IAYb,EAyI0CyF,KAElC,qBAAK/I,UAAU,qBAAoB,SACjC,6BAAI,0BAKZ,cAAC,EAAW,CACV+B,SAAUA,EACVzC,SAAUA,EACVD,KAAM0I,EAAMiB,YACZxJ,YAAaA,EACbwC,YAAaA,EACbvC,YAAaA,EACbwC,aAAcA,EACdkG,gBAAiBA,EACjBjG,kBAAmBA,EACnBC,mBAAoBA,EACpBC,mBAAoBA,EACpBxC,qBAAsBA,EACtBC,uBAAwBA,MAE1B,cAAC,EAAY,CAACkF,YAAaA,EAAaC,cAAeA,MAC9C,E,mBC3FAiE,MAlLC7J,IAEd,MAAM,MAAE2I,EAAK,YAAEmB,EAAW,cAAElE,EAAa,SAAE1F,EAAQ,SAAE6J,EAAQ,kBAAEf,EAAiB,eAAEF,EAAc,YAAElG,GAChG5C,EAGIgK,EAASC,cAGTC,EAAetF,IACnBhC,GAAY,GACZ1C,EAAS6J,EAAS,IAAKpB,EAAMqB,OAAQpF,YACrC1E,EAAS8I,IAAoB,EAGzBmB,EAAc/H,IAClBQ,GAAY,GACZ1C,EAAS6J,EAAS,IAAKpB,EAAMqB,OAAQ5H,WACrClC,EAAS8I,IAAoB,EASzBoB,EAAmBlE,MAClB8D,EAAOpF,QAAUoF,EAAOpF,SAAWsB,GAAW8D,EAAO5H,OAAS4H,EAAO5H,QAAU8D,GAOtF,OACE,qBACEtF,UAAWC,IAAW,eAAgB,CACpCgE,KAAMiF,IACL,SAEH,qBAAKlJ,UAAU,UAAS,SACtB,qBAAKA,UAAU,oCAAmC,SAChD,sBAAKA,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,6CAA4C,SACzD,cAAC,IAAM,CAACA,UAAU,gBAAgB0E,MAAM,UAAU+E,OAAK,EAAC3J,QAxBzC,KACzBkF,IACAkD,GAAe,EAAM,EAsByE,SAAC,cAIvF,eAAC,IAAgB,CAAClI,UAAU,oBAAoBuE,QAAS,CAAEC,kBAAkB,GAAQ,UACnF,eAAC,IAAS,CAAC5B,IAAI,MAAM5C,UAAU,sBAAqB,UAClD,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,oBACHlD,QAAS,IAAMwJ,EAAa,SAC5BK,QAAM,EACNC,QAASC,OAAOC,KAAKV,GAAQ/H,QAAUmI,EAAiB,SAAS,UAEjE,cAAC,IAAI,CAACvI,KAAM,GAAIjB,UAAU,UAC1B,sBAAMA,UAAU,eAAc,SAAC,UAC9B+H,EAAMgC,WAAWC,MAChB,cAAC,IAAK,CAAChK,UAAU,YAAY0E,MAAM,gBAAgBC,MAAI,WACpDoD,EAAMgC,WAAWC,QAElB,QAEN,eAAC,IAAa,CACZpH,IAAK8G,IACL1G,GAAG,mBACHlD,QAAS,IAAMwJ,EAAa,QAC5BK,QAAM,EACNC,OAAQJ,EAAiB,QAAQ,UAEjC,cAAC,IAAI,CAACvI,KAAM,GAAIjB,UAAU,UAC1B,sBAAMA,UAAU,eAAc,SAAC,YAEjC,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,oBACHlD,QAAS,IAAMwJ,EAAa,SAC5BK,QAAM,EACNC,OAAQJ,EAAiB,SAAS,UAElC,cAAC,IAAK,CAACvI,KAAM,GAAIjB,UAAU,UAC3B,sBAAMA,UAAU,eAAc,SAAC,UAC9B+H,EAAMgC,WAAWE,MAChB,cAAC,IAAK,CAACjK,UAAU,YAAY0E,MAAM,gBAAgBC,MAAI,WACpDoD,EAAMgC,WAAWE,QAElB,QAEN,eAAC,IAAa,CACZrH,IAAK8G,IACL1G,GAAG,sBACHlD,QAAS,IAAMwJ,EAAa,WAC5BK,QAAM,EACNC,OAAQJ,EAAiB,WAAW,UAEpC,cAAC,IAAI,CAACvI,KAAM,GAAIjB,UAAU,UAC1B,sBAAMA,UAAU,eAAc,SAAC,eAEjC,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,mBACHlD,QAAS,IAAMwJ,EAAa,QAC5BK,QAAM,EACNC,OAAQJ,EAAiB,QAAQ,UAEjC,cAAC,IAAI,CAACvI,KAAM,GAAIjB,UAAU,UAC1B,sBAAMA,UAAU,eAAc,SAAC,SAC9B+H,EAAMgC,WAAWG,KAChB,cAAC,IAAK,CAAClK,UAAU,YAAY0E,MAAM,eAAeC,MAAI,WACnDoD,EAAMgC,WAAWG,OAElB,QAEN,eAAC,IAAa,CACZtH,IAAK8G,IACL1G,GAAG,oBACHlD,QAAS,IAAMwJ,EAAa,SAC5BK,QAAM,EACNC,OAAQJ,EAAiB,SAAS,UAElC,cAAC,IAAK,CAACvI,KAAM,GAAIjB,UAAU,UAC3B,sBAAMA,UAAU,eAAc,SAAC,gBAGnC,oBAAIA,UAAU,+BAA8B,SAAC,WAC7C,eAAC,IAAS,CAAC4C,IAAI,MAAM5C,UAAU,oBAAmB,UAChD,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,6BACHlD,QAAS,IAAMyJ,EAAY,YAC3BK,OAAQJ,EAAiB,YACzBG,QAAM,YAEN,sBAAM3J,UAAU,yCAA8C,cAGhE,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,4BACHlD,QAAS,IAAMyJ,EAAY,WAC3BK,OAAQJ,EAAiB,WACzBG,QAAM,YAEN,sBAAM3J,UAAU,yCAA8C,aAGhE,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,8BACHlD,QAAS,IAAMyJ,EAAY,aAC3BK,OAAQJ,EAAiB,aACzBG,QAAM,YAEN,sBAAM3J,UAAU,yCAA8C,eAGhE,eAAC,IAAa,CACZ4C,IAAK8G,IACL1G,GAAG,4BACHlD,QAAS,IAAMyJ,EAAY,WAC3BK,OAAQJ,EAAiB,WACzBG,QAAM,YAEN,sBAAM3J,UAAU,wCAA6C,2BAQrE,E,0BC3FKmK,UAnEE,KAEf,MAAOrC,EAAOE,GAAYzF,mBAAS,KAC5BR,EAAUC,GAAeO,oBAAS,IAClC2G,EAAahB,GAAkB3F,oBAAS,IACxCwC,EAAaqF,GAAkB7H,oBAAS,GAGzCyC,EAAgB,IAAMoF,GAAgBrF,GAGtCzF,EAAW+K,cACXtC,EAAQuC,aAAYC,GAASA,EAAMzH,QAGnCsG,EAASC,cAOf,OAJAmB,qBAAU,KACRlL,EAAS6J,YAAS,CAAEsB,EAAG3C,GAAS,GAAI9D,OAAQoF,EAAOpF,QAAU,QAASxC,MAAO4H,EAAO5H,OAAS,KAAM,GAClG,CAACsG,EAAOsB,EAAOpF,OAAQoF,EAAO5H,QAG/B,eAAC,WAAQ,WACP,cAAC,EAAO,CACNuG,MAAOA,EACPzI,SAAUA,EACV6J,SAAUA,IACVnH,YAAaA,EACbkH,YAAaA,EACblE,cAAeA,EACfkD,eAAgBA,EAChBE,kBAAmBA,MAErB,qBAAKpI,UAAU,gBAAe,SAC5B,sBAAKA,UAAU,eAAc,UAC3B,qBACEA,UAAWC,IAAW,uBAAwB,CAC5CgE,KAAMiF,IAERpJ,QAAS,IAAMoI,GAAe,KAEhC,cAAC,EAAK,CACJH,MAAOA,EACPD,MAAOA,EACPE,SAAUA,EACV1I,SAAUA,EACV6J,SAAUA,IACVpH,SAAUA,EACVxC,WAAYA,IACZyC,YAAaA,EACbvC,YAAaA,IACbsF,YAAaA,EACb9C,aAAcA,IACdgG,cAAeA,IACfjD,cAAeA,EACfkD,eAAgBA,EAChBC,gBAAiBA,IACjBE,kBAAmBA,IACnBD,kBAAmBA,aAIhB,C","file":"static/js/79.83039a8c.chunk.js","sourcesContent":["// ** Custom Components & Plugins\nimport classnames from 'classnames'\nimport { Star, Paperclip } from 'react-feather'\n\n// ** Custom Component Import\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { htmlToString } from '@utils'\n\n// ** Reactstrap Imports\nimport { Input, Label } from 'reactstrap'\n\nconst MailCard = props => {\n  // ** Props\n  const {\n    mail,\n    dispatch,\n    selectMail,\n    labelColors,\n    updateMails,\n    selectedMails,\n    handleMailClick,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** Function to render labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <span key={label} className={`bullet bullet-${labelColors[label]} bullet-sm mx-50`}></span>\n      ))\n    }\n  }\n\n  // ** Function to handle read & mail click\n  const onMailClick = () => {\n    handleMailClick(mail.id)\n    handleMailReadUpdate([mail.id], true)\n  }\n\n  return (\n    <li onClick={() => onMailClick(mail.id)} className={classnames('d-flex user-mail', { 'mail-read': mail.isRead })}>\n      <div className='mail-left pe-50'>\n        <Avatar img={mail.from.avatar} />\n        <div className='user-action'>\n          {/* <Input\n            label=''\n            type='checkbox'\n            checked={selectedMails.includes(mail.id)}\n            id={`${mail.from.name}-${mail.id}`}\n            onChange={e => e.stopPropagation()}\n            onClick={e => {\n              dispatch(selectMail(mail.id))\n              e.stopPropagation()\n            }}\n          /> */}\n          <div className='form-check'>\n            <Input\n              type='checkbox'\n              id={`${mail.from.name}-${mail.id}`}\n              onChange={e => e.stopPropagation()}\n              checked={selectedMails.includes(mail.id)}\n              onClick={e => {\n                dispatch(selectMail(mail.id))\n                e.stopPropagation()\n              }}\n            />\n            <Label onClick={e => e.stopPropagation()} for={`${mail.from.name}-${mail.id}`}></Label>\n          </div>\n          <div\n            className='email-favorite'\n            onClick={e => {\n              e.stopPropagation()\n              dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\n            }}\n          >\n            <Star\n              size={14}\n              className={classnames({\n                favorite: mail.isStarred\n              })}\n            />\n          </div>\n        </div>\n      </div>\n      <div className='mail-body'>\n        <div className='mail-details'>\n          <div className='mail-items'>\n            <h5 className='mb-25'>{mail.from.name}</h5>\n            <span className='text-truncate'>{mail.subject}</span>\n          </div>\n          <div className='mail-meta-item'>\n            {mail.attachments && mail.attachments.length ? <Paperclip size={14} /> : null}\n            {renderLabels(mail.labels)}\n            <span className='mail-date'>{formatDateToMonthShort(mail.time)}</span>\n          </div>\n        </div>\n        <div className='mail-message'>\n          <p className='text-truncate mb-0'>{htmlToString(mail.message)}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default MailCard\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Utils\nimport { formatDate } from '@utils'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\nimport {\n  Star,\n  Tag,\n  Mail,\n  Info,\n  Trash,\n  Edit2,\n  Folder,\n  Trash2,\n  Paperclip,\n  ChevronLeft,\n  ChevronRight,\n  MoreVertical,\n  CornerUpLeft,\n  CornerUpRight\n} from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Badge,\n  Card,\n  Table,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst MailDetails = props => {\n  // ** Props\n  const {\n    mail,\n    openMail,\n    dispatch,\n    labelColors,\n    setOpenMail,\n    updateMails,\n    paginateMail,\n    handleMailToTrash,\n    handleFolderUpdate,\n    handleLabelsUpdate,\n    handleMailReadUpdate,\n    formatDateToMonthShort\n  } = props\n\n  // ** States\n  const [showReplies, setShowReplies] = useState(false)\n\n  // ** Renders Labels\n  const renderLabels = arr => {\n    if (arr && arr.length) {\n      return arr.map(label => (\n        <Badge key={label} color={`light-${labelColors[label]}`} className='me-50 text-capitalize' pill>\n          {label}\n        </Badge>\n      ))\n    }\n  }\n\n  // ** Renders Attachments\n  const renderAttachments = arr => {\n    return arr.map((item, index) => {\n      return (\n        <a\n          key={item.fileName}\n          href='/'\n          onClick={e => e.preventDefault()}\n          className={classnames({\n            'mb-50': index + 1 !== arr.length\n          })}\n        >\n          <img src={item.thumbnail} alt={item.fileName} width='16' className='me-50' />\n          <span className='text-muted fw-bolder align-text-top'>{item.fileName}</span>\n          <span className='text-muted font-small-2 ms-25'>{`(${item.size})`}</span>\n        </a>\n      )\n    })\n  }\n\n  // ** Renders Messages\n  const renderMessage = obj => {\n    return (\n      <Card>\n        <CardHeader className='email-detail-head'>\n          <div className='user-details d-flex justify-content-between align-items-center flex-wrap'>\n            <Avatar img={obj.from.avatar} className='me-75' imgHeight='48' imgWidth='48' />\n            <div className='mail-items'>\n              <h5 className='mb-0'>{obj.from.name}</h5>\n              <UncontrolledDropdown className='email-info-dropup'>\n                <DropdownToggle className='font-small-3 text-muted cursor-pointer' tag='span' caret>\n                  <span className='me-25'>{obj.from.email}</span>\n                </DropdownToggle>\n                <DropdownMenu>\n                  <Table className='font-small-3' size='sm' borderless>\n                    <tbody>\n                      <tr>\n                        <td className='text-end text-muted align-top'>From:</td>\n                        <td>{obj.from.email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-end text-muted align-top'>To:</td>\n                        <td>{obj.to[0].email}</td>\n                      </tr>\n                      <tr>\n                        <td className='text-end text-muted align-top'>Date:</td>\n                        <td>\n                          {formatDateToMonthShort(obj.time)}, {formatDateToMonthShort(obj.time, false)}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className='mail-meta-item d-flex align-items-center'>\n            <small className='mail-date-time text-muted'>{formatDate(obj.time)}</small>\n            <UncontrolledDropdown className='ms-50'>\n              <DropdownToggle className='cursor-pointer' tag='span'>\n                <MoreVertical size={14} />\n              </DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpLeft className='me-50' size={14} />\n                  Reply\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <CornerUpRight className='me-50' size={14} />\n                  Forward\n                </DropdownItem>\n                <DropdownItem className='d-flex align-items-center w-100'>\n                  <Trash2 className='me-50' size={14} />\n                  Delete\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        </CardHeader>\n        <CardBody className='mail-message-wrapper pt-2'>\n          <div className='mail-message' dangerouslySetInnerHTML={{ __html: obj.message }}></div>\n        </CardBody>\n        {obj.attachments && obj.attachments.length ? (\n          <CardFooter>\n            <div className='mail-attachments'>\n              <div className='d-flex align-items-center mb-1'>\n                <Paperclip size={16} />\n                <h5 className='fw-bolder text-body mb-0 ms-50'>{obj.attachments.length} Attachment</h5>\n              </div>\n              <div className='d-flex flex-column'>{renderAttachments(obj.attachments)}</div>\n            </div>\n          </CardFooter>\n        ) : null}\n      </Card>\n    )\n  }\n\n  // ** Renders Replies\n  const renderReplies = arr => {\n    if (arr.length && showReplies === true) {\n      return arr.map((obj, index) => (\n        <Row key={index}>\n          <Col sm='12'>{renderMessage(obj)}</Col>\n        </Row>\n      ))\n    }\n  }\n\n  // ** Handle show replies, go back, folder & read click functions\n  const handleShowReplies = e => {\n    e.preventDefault()\n    setShowReplies(true)\n  }\n\n  const handleGoBack = () => {\n    setOpenMail(false)\n  }\n\n  const handleFolderClick = (e, folder, id) => {\n    handleFolderUpdate(e, folder, [id])\n    handleGoBack()\n  }\n\n  const handleReadClick = () => {\n    handleMailReadUpdate([mail.id], false)\n    handleGoBack()\n  }\n\n  return (\n    <div\n      className={classnames('email-app-details', {\n        show: openMail\n      })}\n    >\n      {mail !== null && mail !== undefined ? (\n        <Fragment>\n          <div className='email-detail-header'>\n            <div className='email-header-left d-flex align-items-center'>\n              <span className='go-back me-1' onClick={handleGoBack}>\n                <ChevronLeft size={20} />\n              </span>\n              <h4 className='email-subject mb-0'>{mail.subject}</h4>\n            </div>\n            <div className='email-header-right ms-2 ps-1'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item me-1'>\n                  <span\n                    className='action-icon favorite'\n                    onClick={() => {\n                      dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\n                    }}\n                  >\n                    <Star\n                      size={18}\n                      className={classnames({\n                        'text-warning fill-current': mail.isStarred\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'draft', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='me-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'spam', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='me-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderClick(e, 'trash', mail.id)}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='me-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm me-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm me-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm me-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private', [mail.id])}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm me-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <span className='action-icon' onClick={handleReadClick}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <span\n                    className='action-icon'\n                    onClick={() => {\n                      handleMailToTrash([mail.id])\n                      handleGoBack()\n                    }}\n                  >\n                    <Trash size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item email-prev'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasPreviousMail\n                    })}\n                    onClick={() => {\n                      return mail.hasPreviousMail ? dispatch(paginateMail({ dir: 'next', emailId: mail.id })) : null\n                    }}\n                  >\n                    <ChevronLeft\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasPreviousMail\n                      })}\n                    />\n                  </span>\n                </li>\n                <li className='list-inline-item email-next'>\n                  <span\n                    className={classnames({\n                      'action-icon': mail.hasNextMail\n                    })}\n                    onClick={() => {\n                      return mail.hasNextMail ? dispatch(paginateMail({ dir: 'previous', emailId: mail.id })) : null\n                    }}\n                  >\n                    <ChevronRight\n                      size={18}\n                      className={classnames({\n                        'text-muted': !mail.hasNextMail\n                      })}\n                    />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n          <PerfectScrollbar className='email-scroll-area' options={{ wheelPropagation: false }}>\n            <Row>\n              <Col sm='12'>\n                <div className='email-label'>{renderLabels(mail.labels)}</div>\n              </Col>\n            </Row>\n            {mail.replies && mail.replies.length ? (\n              <Fragment>\n                {showReplies === false ? (\n                  <Row className='mb-1'>\n                    <Col sm='12'>\n                      <a className='fw-bold' href='/' onClick={handleShowReplies}>\n                        View {mail.replies.length} Earlier Messages\n                      </a>\n                    </Col>\n                  </Row>\n                ) : null}\n\n                {renderReplies(mail.replies)}\n              </Fragment>\n            ) : null}\n            <Row>\n              <Col sm='12'>{renderMessage(mail)}</Col>\n            </Row>\n            <Row>\n              <Col sm='12'>\n                <Card>\n                  <CardBody>\n                    <h5 className='mb-0'>\n                      Click here to{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Reply\n                      </a>{' '}\n                      or{' '}\n                      <a href='/' onClick={e => e.preventDefault()}>\n                        Forward\n                      </a>\n                    </h5>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </PerfectScrollbar>\n        </Fragment>\n      ) : null}\n    </div>\n  )\n}\n\nexport default MailDetails\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { Editor } from 'react-draft-wysiwyg'\nimport Select, { components } from 'react-select'\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Modal,\n  Button,\n  ModalBody,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** User Avatars\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\n// ** Styles\nimport '@styles/react/libs/editor/editor.scss'\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst ComposePopup = props => {\n  // ** Props & Custom Hooks\n  const { composeOpen, toggleCompose } = props\n\n  // ** States\n  const [ccOpen, setCCOpen] = useState(false)\n  const [bccOpen, setBCCOpen] = useState(false)\n\n  // ** User Select Options & Components\n  const selectOptions = [\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\n    { value: 'ross', label: 'Ross Geller', img: img3 },\n    { value: 'monica', label: 'Monica Geller', img: img4 },\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\n  ]\n\n  const SelectComponent = ({ data, ...props }) => {\n    return (\n      <components.Option {...props}>\n        <div className='d-flex flex-wrap align-items-center'>\n          <Avatar className='my-0 me-50' size='sm' img={data.img} />\n          {data.label}\n        </div>\n      </components.Option>\n    )\n  }\n\n  // ** CC Toggle Function\n  const toggleCC = e => {\n    e.preventDefault()\n    setCCOpen(!ccOpen)\n  }\n\n  // ** BCC Toggle Function\n  const toggleBCC = e => {\n    e.preventDefault()\n    setBCCOpen(!bccOpen)\n  }\n\n  // ** Toggles Compose POPUP\n  const togglePopUp = e => {\n    e.preventDefault()\n    toggleCompose()\n  }\n\n  return (\n    <Modal\n      scrollable\n      fade={false}\n      keyboard={false}\n      backdrop={false}\n      id='compose-mail'\n      container='.content-body'\n      className='modal-lg'\n      isOpen={composeOpen}\n      contentClassName='p-0'\n      toggle={toggleCompose}\n      modalClassName='modal-sticky'\n    >\n      <div className='modal-header'>\n        <h5 className='modal-title'>Compose Mail</h5>\n        <div className='modal-actions'>\n          <a href='/' className='text-body me-75' onClick={togglePopUp}>\n            <Minus size={14} />\n          </a>\n          <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\n            <Maximize2 size={14} />\n          </a>\n          <a href='/' className='text-body' onClick={togglePopUp}>\n            <X size={14} />\n          </a>\n        </div>\n      </div>\n      <ModalBody className='flex-grow-1 p-0'>\n        <Form className='compose-form' onSubmit={e => e.preventDefault()}>\n          <div className='compose-mail-form-field'>\n            <Label for='email-to' className='form-label'>\n              To:\n            </Label>\n            <div className='flex-grow-1'>\n              <Select\n                isMulti\n                id='email-to'\n                isClearable={false}\n                theme={selectThemeColors}\n                options={selectOptions}\n                className='react-select select-borderless'\n                classNamePrefix='select'\n                components={{ Option: SelectComponent }}\n              />\n            </div>\n            <div>\n              <a href='/' className='toggle-cc text-body me-1' onClick={toggleCC}>\n                Cc\n              </a>\n              <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                Bcc\n              </a>\n            </div>\n          </div>\n          {ccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-cc' className='form-label'>\n                Cc:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-cc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          {bccOpen === true ? (\n            <div className='compose-mail-form-field cc-wrapper'>\n              <Label for='email-bcc' className='form-label'>\n                Bcc:\n              </Label>\n              <div className='flex-grow-1'>\n                <Select\n                  isMulti\n                  id='email-bcc'\n                  isClearable={false}\n                  theme={selectThemeColors}\n                  options={selectOptions}\n                  className='react-select select-borderless'\n                  classNamePrefix='select'\n                  components={{ Option: SelectComponent }}\n                />\n              </div>\n              <div>\n                <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\n                  <X size={14} />\n                </a>\n              </div>\n            </div>\n          ) : null}\n          <div className='compose-mail-form-field'>\n            <Label for='email-subject' className='form-label'>\n              Subject:\n            </Label>\n            <Input id='email-subject' placeholder='Subject' />\n          </div>\n          <div id='message-editor'>\n            <Editor\n              placeholder='Message'\n              toolbarClassName='rounded-0'\n              wrapperClassName='toolbar-bottom'\n              editorClassName='rounded-0 border-0'\n              toolbar={{\n                options: ['inline', 'textAlign'],\n                inline: {\n                  inDropdown: false,\n                  options: ['bold', 'italic', 'underline', 'strikethrough']\n                }\n              }}\n            />\n          </div>\n          <div className='compose-footer-wrapper'>\n            <div className='btn-wrapper d-flex align-items-center'>\n              <UncontrolledButtonDropdown direction='up' className='me-1'>\n                <Button color='primary' onClick={toggleCompose}>\n                  Send\n                </Button>\n                <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n                <DropdownMenu end>\n                  <DropdownItem href='/' tag='a' onClick={togglePopUp}>\n                    Schedule Send\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledButtonDropdown>\n              <div className='email-attachement'>\n                <Label className='mb-0' for='attach-email-item'>\n                  <Paperclip className='cursor-pointer ms-50' size={18} />\n                  <input type='file' name='attach-email-item' id='attach-email-item' hidden />\n                </Label>\n              </div>\n            </div>\n            <div className='footer-action d-flex align-items-center'>\n              <UncontrolledDropdown className='me-50' direction='up'>\n                <DropdownToggle tag='span'>\n                  <MoreVertical className='cursor-pointer' size={18} />\n                </DropdownToggle>\n                <DropdownMenu end>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Add Label\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Plain text mode\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Print\n                  </DropdownItem>\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                    Check Spelling\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <Trash className='cursor-pointer' size={18} onClick={toggleCompose} />\n            </div>\n          </div>\n        </Form>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ComposePopup\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Mail Components Imports\nimport MailCard from './MailCard'\nimport MailDetails from './MailDetails'\nimport ComposePopUp from './ComposePopup'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Input,\n  Label,\n  InputGroup,\n  DropdownMenu,\n  DropdownItem,\n  InputGroupText,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Mails = props => {\n  // ** Props\n  const {\n    query,\n    store,\n    openMail,\n    setQuery,\n    dispatch,\n    selectMail,\n    composeOpen,\n    updateMails,\n    setOpenMail,\n    paginateMail,\n    selectAllMail,\n    toggleCompose,\n    setSidebarOpen,\n    updateMailLabel,\n    resetSelectedMail,\n    selectCurrentMail\n  } = props\n\n  const { mails, selectedMails } = store\n\n  // ** States\n\n  // ** Variables\n  const labelColors = {\n    personal: 'success',\n    company: 'primary',\n    important: 'warning',\n    private: 'danger'\n  }\n\n  // ** Handles Update Functions\n  const handleMailClick = id => {\n    dispatch(selectCurrentMail(id))\n    setOpenMail(true)\n  }\n\n  // ** Handles SelectAll\n  const handleSelectAll = e => {\n    dispatch(selectAllMail(e.target.checked))\n  }\n\n  /*eslint-disable */\n\n  // ** Handles Folder Update\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMails({ emailIds: ids, dataToUpdate: { folder } }))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Label Update\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\n    e.preventDefault()\n    dispatch(updateMailLabel({ emailIds: ids, label }))\n    dispatch(resetSelectedMail())\n  }\n\n  // ** Handles Mail Read Update\n  const handleMailReadUpdate = (arr, bool) => {\n    dispatch(updateMails({ emailIds: arr, dataToUpdate: { isRead: bool } })).then(() => dispatch(resetSelectedMail()))\n    dispatch(selectAllMail(false))\n  }\n\n  // ** Handles Move to Trash\n  const handleMailToTrash = ids => {\n    dispatch(updateMails({ emailIds: ids, dataToUpdate: { folder: 'trash' } }))\n    dispatch(resetSelectedMail())\n  }\n  /*eslint-enable */\n\n  // ** Renders Mail\n  const renderMails = () => {\n    if (mails.length) {\n      return mails.map((mail, index) => {\n        return (\n          <MailCard\n            mail={mail}\n            key={index}\n            dispatch={dispatch}\n            selectMail={selectMail}\n            updateMails={updateMails}\n            labelColors={labelColors}\n            selectedMails={selectedMails}\n            handleMailClick={handleMailClick}\n            handleMailReadUpdate={handleMailReadUpdate}\n            formatDateToMonthShort={formatDateToMonthShort}\n          />\n        )\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='email-app-list'>\n        <div className='app-fixed-search d-flex align-items-center'>\n          <div className='sidebar-toggle d-block d-lg-none ms-1' onClick={() => setSidebarOpen(true)}>\n            <Menu size='21' />\n          </div>\n          <div className='d-flex align-content-center justify-content-between w-100'>\n            <InputGroup className='input-group-merge'>\n              <InputGroupText>\n                <Search className='text-muted' size={14} />\n              </InputGroupText>\n              <Input\n                id='email-search'\n                placeholder='Search email'\n                value={query}\n                onChange={e => setQuery(e.target.value)}\n              />\n            </InputGroup>\n          </div>\n        </div>\n        <div className='app-action'>\n          <div className='action-left form-check'>\n            <Input\n              type='checkbox'\n              id='select-all'\n              onChange={handleSelectAll}\n              checked={selectedMails.length && selectedMails.length === mails.length}\n            />\n            <Label className='form-check-label fw-bolder ps-25 mb-0' for='select-all'>\n              Select All\n            </Label>\n          </div>\n          {selectedMails.length ? (\n            <div className='action-right'>\n              <ul className='list-inline m-0'>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Folder size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'draft')}\n                        className='d-flex align-items-center'\n                      >\n                        <Edit2 className='me-50' size={18} />\n                        <span>Draft</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'spam')}\n                        className='d-flex align-items-center'\n                      >\n                        <Info className='me-50' size={18} />\n                        <span>Spam</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleFolderUpdate(e, 'trash')}\n                        className='d-flex align-items-center'\n                      >\n                        <Trash className='me-50' size={18} />\n                        <span>Trash</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <UncontrolledDropdown>\n                    <DropdownToggle tag='span'>\n                      <Tag size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu end>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'personal')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-success bullet-sm me-50' />\n                        <span>Personal</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'company')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-primary bullet-sm me-50' />\n                        <span>Company</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'important')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-warning bullet-sm me-50' />\n                        <span>Important</span>\n                      </DropdownItem>\n                      <DropdownItem\n                        tag='a'\n                        href='/'\n                        onClick={e => handleLabelsUpdate(e, 'private')}\n                        className='d-flex align-items-center'\n                      >\n                        <span className='bullet bullet-danger bullet-sm me-50' />\n                        <span>Private</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                </li>\n                <li className='list-inline-item me-1'>\n                  <span className='action-icon' onClick={() => handleMailReadUpdate(selectedMails, false)}>\n                    <Mail size={18} />\n                  </span>\n                </li>\n                <li className='list-inline-item'>\n                  <span className='action-icon' onClick={() => handleMailToTrash(selectedMails)}>\n                    <Trash size={18} />\n                  </span>\n                </li>\n              </ul>\n            </div>\n          ) : null}\n        </div>\n\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\n          {mails.length ? (\n            <ul className='email-media-list'>{renderMails()}</ul>\n          ) : (\n            <div className='no-results d-block'>\n              <h5>No Items Found</h5>\n            </div>\n          )}\n        </PerfectScrollbar>\n      </div>\n      <MailDetails\n        openMail={openMail}\n        dispatch={dispatch}\n        mail={store.currentMail}\n        labelColors={labelColors}\n        setOpenMail={setOpenMail}\n        updateMails={updateMails}\n        paginateMail={paginateMail}\n        updateMailLabel={updateMailLabel}\n        handleMailToTrash={handleMailToTrash}\n        handleFolderUpdate={handleFolderUpdate}\n        handleLabelsUpdate={handleLabelsUpdate}\n        handleMailReadUpdate={handleMailReadUpdate}\n        formatDateToMonthShort={formatDateToMonthShort}\n      />\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\n    </Fragment>\n  )\n}\n\nexport default Mails\n","// ** React Imports\nimport { Link, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Mail, Send, Edit2, Star, Info, Trash } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Button, ListGroup, ListGroupItem, Badge } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const { store, sidebarOpen, toggleCompose, dispatch, getMails, resetSelectedMail, setSidebarOpen, setOpenMail } =\n    props\n\n  // ** Vars\n  const params = useParams()\n\n  // ** Functions To Handle Folder, Label & Compose\n  const handleFolder = folder => {\n    setOpenMail(false)\n    dispatch(getMails({ ...store.params, folder }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleLabel = label => {\n    setOpenMail(false)\n    dispatch(getMails({ ...store.params, label }))\n    dispatch(resetSelectedMail())\n  }\n\n  const handleComposeClick = () => {\n    toggleCompose()\n    setSidebarOpen(false)\n  }\n\n  // ** Functions To Active List Item\n  const handleActiveItem = value => {\n    if ((params.folder && params.folder === value) || (params.label && params.label === value)) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return (\n    <div\n      className={classnames('sidebar-left', {\n        show: sidebarOpen\n      })}\n    >\n      <div className='sidebar'>\n        <div className='sidebar-content email-app-sidebar'>\n          <div className='email-app-menu'>\n            <div className='form-group-compose text-center compose-btn'>\n              <Button className='compose-email' color='primary' block onClick={handleComposeClick}>\n                Compose\n              </Button>\n            </div>\n            <PerfectScrollbar className='sidebar-menu-list' options={{ wheelPropagation: false }}>\n              <ListGroup tag='div' className='list-group-messages'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/inbox'\n                  onClick={() => handleFolder('inbox')}\n                  action\n                  active={!Object.keys(params).length || handleActiveItem('inbox')}\n                >\n                  <Mail size={18} className='me-75' />\n                  <span className='align-middle'>Inbox</span>\n                  {store.emailsMeta.inbox ? (\n                    <Badge className='float-end' color='light-primary' pill>\n                      {store.emailsMeta.inbox}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/sent'\n                  onClick={() => handleFolder('sent')}\n                  action\n                  active={handleActiveItem('sent')}\n                >\n                  <Send size={18} className='me-75' />\n                  <span className='align-middle'>Sent</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/draft'\n                  onClick={() => handleFolder('draft')}\n                  action\n                  active={handleActiveItem('draft')}\n                >\n                  <Edit2 size={18} className='me-75' />\n                  <span className='align-middle'>Draft</span>\n                  {store.emailsMeta.draft ? (\n                    <Badge className='float-end' color='light-warning' pill>\n                      {store.emailsMeta.draft}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/starred'\n                  onClick={() => handleFolder('starred')}\n                  action\n                  active={handleActiveItem('starred')}\n                >\n                  <Star size={18} className='me-75' />\n                  <span className='align-middle'>Starred</span>\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/spam'\n                  onClick={() => handleFolder('spam')}\n                  action\n                  active={handleActiveItem('spam')}\n                >\n                  <Info size={18} className='me-75' />\n                  <span className='align-middle'>Spam</span>\n                  {store.emailsMeta.spam ? (\n                    <Badge className='float-end' color='light-danger' pill>\n                      {store.emailsMeta.spam}\n                    </Badge>\n                  ) : null}\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/trash'\n                  onClick={() => handleFolder('trash')}\n                  action\n                  active={handleActiveItem('trash')}\n                >\n                  <Trash size={18} className='me-75' />\n                  <span className='align-middle'>Trash</span>\n                </ListGroupItem>\n              </ListGroup>\n              <h6 className='section-label mt-3 mb-1 px-2'>Labels</h6>\n              <ListGroup tag='div' className='list-group-labels'>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/personal'\n                  onClick={() => handleLabel('personal')}\n                  active={handleActiveItem('personal')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-success me-1'></span>\n                  Personal\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/company'\n                  onClick={() => handleLabel('company')}\n                  active={handleActiveItem('company')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-primary me-1'></span>\n                  Company\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/important'\n                  onClick={() => handleLabel('important')}\n                  active={handleActiveItem('important')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-warning me-1'></span>\n                  Important\n                </ListGroupItem>\n                <ListGroupItem\n                  tag={Link}\n                  to='/apps/email/label/private'\n                  onClick={() => handleLabel('private')}\n                  active={handleActiveItem('private')}\n                  action\n                >\n                  <span className='bullet bullet-sm bullet-danger me-1'></span>\n                  Private\n                </ListGroupItem>\n              </ListGroup>\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","// ** React Imports\nimport { useParams } from 'react-router-dom'\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Email App Component Imports\nimport Mails from './Mails'\nimport Sidebar from './Sidebar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getMails,\n  selectMail,\n  updateMails,\n  paginateMail,\n  selectAllMail,\n  updateMailLabel,\n  resetSelectedMail,\n  selectCurrentMail\n} from './store'\n\n// ** Styles\nimport '@styles/react/apps/app-email.scss'\n\nconst EmailApp = () => {\n  // ** States\n  const [query, setQuery] = useState('')\n  const [openMail, setOpenMail] = useState(false)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [composeOpen, setComposeOpen] = useState(false)\n\n  // ** Toggle Compose Function\n  const toggleCompose = () => setComposeOpen(!composeOpen)\n\n  // ** Store Variables\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.email)\n\n  // ** Vars\n  const params = useParams()\n\n  // ** UseEffect: GET initial data on Mount\n  useEffect(() => {\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\n  }, [query, params.folder, params.label])\n\n  return (\n    <Fragment>\n      <Sidebar\n        store={store}\n        dispatch={dispatch}\n        getMails={getMails}\n        setOpenMail={setOpenMail}\n        sidebarOpen={sidebarOpen}\n        toggleCompose={toggleCompose}\n        setSidebarOpen={setSidebarOpen}\n        resetSelectedMail={resetSelectedMail}\n      />\n      <div className='content-right'>\n        <div className='content-body'>\n          <div\n            className={classnames('body-content-overlay', {\n              show: sidebarOpen\n            })}\n            onClick={() => setSidebarOpen(false)}\n          ></div>\n          <Mails\n            store={store}\n            query={query}\n            setQuery={setQuery}\n            dispatch={dispatch}\n            getMails={getMails}\n            openMail={openMail}\n            selectMail={selectMail}\n            setOpenMail={setOpenMail}\n            updateMails={updateMails}\n            composeOpen={composeOpen}\n            paginateMail={paginateMail}\n            selectAllMail={selectAllMail}\n            toggleCompose={toggleCompose}\n            setSidebarOpen={setSidebarOpen}\n            updateMailLabel={updateMailLabel}\n            selectCurrentMail={selectCurrentMail}\n            resetSelectedMail={resetSelectedMail}\n          />\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EmailApp\n"],"sourceRoot":""}