{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseCategory.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBaseCategory","data","setData","useState","filteredData","setFilteredData","searchTerm","setSearchTerm","useEffect","axios","get","then","res","params","useParams","Content","item","IconTag","Icon","icon","className","md","sm","size","classnames","iconColor","title","questions","length","map","listItem","tag","Link","to","category","slug","question","id","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj","BreadCrumbs","props","index","Wrapper","link","Fragment","isLastItem","active","color","end","FaqFilter","style","backgroundImage","require","default","onSubmit","preventDefault","onChange","placeholder"],"mappings":"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","file":"static/js/68.cca820c2.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-knowledge-base.scss'\r\n\r\nconst KnowledgeBaseCategory = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [filteredData, setFilteredData] = useState([]),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/category').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const params = useParams()\r\n\r\n  const Content = ({ item }) => {\r\n    const IconTag = Icon[item.icon]\r\n    return (\r\n      <Col className='kb-search-content' md='4' sm='6'>\r\n        <Card>\r\n          <CardBody>\r\n            <h6 className='kb-title'>\r\n              <IconTag\r\n                size={20}\r\n                className={classnames('me-50', {\r\n                  [item.iconColor]: item.iconColor\r\n                })}\r\n              />\r\n              <span>\r\n                {item.title} {`(${item.questions.length})`}\r\n              </span>\r\n            </h6>\r\n            <ListGroup className='list-group-circle mt-2'>\r\n              {item.questions.map(listItem => (\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\r\n                  className='text-body'\r\n                  key={listItem.id}\r\n                >\r\n                  {listItem.question}\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n\r\n  const renderContent = () => {\r\n    const dataToMap = searchTerm.length ? filteredData : data\r\n\r\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\r\n  }\r\n\r\n  const handleFilter = e => {\r\n    const value = e.target.value,\r\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\r\n\r\n    setSearchTerm(e.target.value)\r\n\r\n    let arr = []\r\n\r\n    if (value.length) {\r\n      arr = data.filter(item => {\r\n        return (\r\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\r\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\r\n        )\r\n      })\r\n    }\r\n\r\n    setFilteredData([...arr])\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs\r\n        title='Knowledge Base'\r\n        data={[{ title: 'Pages' }, { title: 'Knowledge Base' }, { title: 'Category' }]}\r\n      />\r\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-category'>\r\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBaseCategory\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\r\nimport { Search } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\r\n  const onChange = e => {\r\n    if (handleFilter) {\r\n      handleFilter(e)\r\n    } else {\r\n      setSearchTerm(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='knowledge-base-search'>\r\n      <Card\r\n        className='knowledge-base-bg'\r\n        style={{\r\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\r\n        }}\r\n      >\r\n        <CardBody className='text-center'>\r\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\r\n          <CardText className='mb-2'>\r\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\r\n          </CardText>\r\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText>\r\n                <Search size={14} />\r\n              </InputGroupText>\r\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\r\n            </InputGroup>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaqFilter\r\n"],"sourceRoot":""}