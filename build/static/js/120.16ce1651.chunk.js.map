{"version":3,"sources":["views/components/progress/ProgressBasic.js","views/components/progress/ProgressColored.js","views/components/progress/ProgressLabeled.js","views/components/progress/ProgressStriped.js","views/components/progress/ProgressAnimated.js","views/components/progress/ProgressMultipleStacked.js","views/components/progress/ProgressSourceCode.js","views/components/progress/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["ProgressBasic","className","value","ProgressColored","ProgressLabeled","ProgressStriped","striped","ProgressAnimated","animated","ProgressMultipleStacked","multi","bar","color","progressBasic","progressColored","progressMultipleStacked","progressLabeled","progressStriped","progressAnimated","Progress","useEffect","Prism","highlightAll","title","data","lg","code","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","size","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/120.16ce1651.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressBasic = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <div>\r\n        <span>Reticulating splines… 0%</span>\r\n        <Progress />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 25%</span>\r\n        <Progress value='25' />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 50%</span>\r\n        <Progress value={50} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 75%</span>\r\n        <Progress value={75} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 100%</span>\r\n        <Progress value='100' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressBasic\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressColored = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress value={25} />\r\n      <Progress className='progress-bar-secondary' value={35} />\r\n      <Progress className='progress-bar-success' value={45} />\r\n      <Progress className='progress-bar-danger' value={55} />\r\n      <Progress className='progress-bar-warning' value={65} />\r\n      <Progress className='progress-bar-info' value={75} />\r\n      <Progress className='progress-bar-dark' value={85} />\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressColored\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressLabeled = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress value='25'>25%</Progress>\r\n      <Progress value='35' className='progress-bar-secondary'>\r\n        35%\r\n      </Progress>\r\n      <Progress value='45' className='progress-bar-success'>\r\n        45%\r\n      </Progress>\r\n      <Progress value='55' className='progress-bar-danger'>\r\n        55%\r\n      </Progress>\r\n      <Progress className='progress-bar-warning' value='65'>\r\n        65%\r\n      </Progress>\r\n      <Progress className='progress-bar-info' value='75'>\r\n        75%\r\n      </Progress>\r\n      <Progress className='progress-bar-dark' value='85'>\r\n        85%\r\n      </Progress>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressLabeled\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressStriped = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress striped value={20} />\r\n      <Progress striped className='progress-bar-success' value={40} />\r\n      <Progress striped className='progress-bar-danger' value={60} />\r\n      <Progress striped className='progress-bar-warning' value={80} />\r\n      <Progress striped className='progress-bar-info' value={100} />\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressStriped\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressAnimated = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress animated striped value={20} />\r\n      <Progress animated striped className='progress-bar-success' value={40} />\r\n      <Progress animated striped className='progress-bar-danger' value={60} />\r\n      <Progress animated striped className='progress-bar-warning' value={80} />\r\n      <Progress animated striped className='progress-bar-info' value={100} />\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressAnimated\r\n","// ** Reactstrap Imports\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressMultipleStacked = () => {\r\n  return (\r\n    <Progress multi>\r\n      <Progress bar color='danger' value='15'>\r\n        15%\r\n      </Progress>\r\n      <Progress bar color='warning' value='50'>\r\n        50%\r\n      </Progress>\r\n      <Progress bar color='primary' value='10'>\r\n        10%\r\n      </Progress>\r\n    </Progress>\r\n  )\r\n}\r\nexport default ProgressMultipleStacked\r\n","export const progressBasic = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\nconst ProgressBasic = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <div>\r\n        <span>Reticulating splines… 0%</span>\r\n        <Progress />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 25%</span>\r\n        <Progress value='25' />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 50%</span>\r\n        <Progress value={50} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 75%</span>\r\n        <Progress value={75} />\r\n      </div>\r\n      <div>\r\n        <span>Reticulating splines… 100%</span>\r\n        <Progress value='100' />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressBasic\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressColored = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressColored = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Progress value={25} />\r\n      <Progress className='progress-bar-secondary' value={35} />\r\n      <Progress className='progress-bar-success' value={45} />\r\n      <Progress className='progress-bar-danger' value={55} />\r\n      <Progress className='progress-bar-warning' value={65} />\r\n      <Progress className='progress-bar-info' value={75} />\r\n      <Progress className='progress-bar-dark' value={85} />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ProgressColored\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressMultipleStacked = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressMultipleStacked = () => {\r\n  return (\r\n     <Progress multi>\r\n        <Progress bar color='danger' value='15'>\r\n          15%\r\n        </Progress>\r\n        <Progress bar color='warning' value='50'>\r\n          50%\r\n        </Progress>\r\n        <Progress bar color='primary' value='10'>\r\n          10%\r\n        </Progress>\r\n    </Progress>\r\n  )\r\n}\r\nexport default ProgressMultipleStacked\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressLabeled = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressLabeled = () => {\r\n  return (\r\n    <div className='demo-vertical-spacing'>\r\n      <Progress value='25'>25%</Progress>\r\n      <Progress value='35' className='progress-bar-secondary'>\r\n        35%\r\n      </Progress>\r\n      <Progress value='45' className='progress-bar-success'>\r\n        45%\r\n      </Progress>\r\n      <Progress value='55' className='progress-bar-danger'>\r\n        55%\r\n      </Progress>\r\n      <Progress className='progress-bar-warning' value='65'>\r\n        65%\r\n      </Progress>\r\n      <Progress className='progress-bar-info' value='75'>\r\n        75%\r\n      </Progress>\r\n      <Progress className='progress-bar-dark' value='85'>\r\n        85%\r\n      </Progress>\r\n    </div>\r\n  )\r\n}\r\nexport default ProgressLabeled\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressStriped = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\nconst ProgressStriped = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Progress striped value={20} />\r\n      <Progress striped className='progress-bar-success' value={40} />\r\n      <Progress striped className='progress-bar-danger' value={60} />\r\n      <Progress striped className='progress-bar-warning' value={80} />\r\n      <Progress striped className='progress-bar-info' value={100} />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ProgressStriped\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const progressAnimated = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Progress } from 'reactstrap'\r\n\r\nconst ProgressAnimated = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Progress striped value={20} />\r\n      <Progress striped className='progress-bar-success' value={40} />\r\n      <Progress striped className='progress-bar-danger' value={60} />\r\n      <Progress striped className='progress-bar-warning' value={80} />\r\n      <Progress striped className='progress-bar-info' value={100} />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default ProgressAnimated\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport ProgressBasic from './ProgressBasic'\r\nimport ProgressColored from './ProgressColored'\r\nimport ProgressLabeled from './ProgressLabeled'\r\nimport ProgressStriped from './ProgressStriped'\r\nimport ProgressAnimated from './ProgressAnimated'\r\nimport ProgressMultipleStacked from './ProgressMultipleStacked'\r\n\r\n// ** Source Code\r\nimport {\r\n  progressBasic,\r\n  progressColored,\r\n  progressLabeled,\r\n  progressStriped,\r\n  progressAnimated,\r\n  progressMultipleStacked\r\n} from './ProgressSourceCode'\r\n\r\nconst Progress = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs title='Progress' data={[{ title: 'Components' }, { title: 'Progress' }]} />\r\n      <Row>\r\n        <Col lg='12'>\r\n          <Card title='Basic Progress' code={progressBasic}>\r\n            <ProgressBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Colored Progress' code={progressColored}>\r\n            <CardText>\r\n              Use <code>progress-bar-[color]</code> class with progress to change progress color.\r\n            </CardText>\r\n            <ProgressColored />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Labeled Progress' code={progressLabeled}>\r\n            <CardText>Add text between progress tag to create a labeled progress bar.</CardText>\r\n            <ProgressLabeled />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Multiple Stacked' code={progressMultipleStacked}>\r\n            <CardText>\r\n              To create a multi colored progress wrap all of your progresses in with <code>multi</code> prop.\r\n            </CardText>\r\n            <ProgressMultipleStacked />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Striped Progress' code={progressStriped}>\r\n            <CardText>\r\n              Use <code>striped</code> prop with progress to create a striped progress bar.\r\n            </CardText>\r\n            <ProgressStriped />\r\n          </Card>\r\n        </Col>\r\n        <Col lg='12'>\r\n          <Card title='Animated Progress' code={progressAnimated}>\r\n            <CardText>\r\n              Use <code>animated</code> prop with progress to animate progress bar.\r\n            </CardText>\r\n            <ProgressAnimated />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Progress\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}