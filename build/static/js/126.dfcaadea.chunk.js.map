{"version":3,"sources":["views/pages/api-key/index.js","@core/components/breadcrumbs/index.js","assets/images/illustration/pricing-Illustration.svg"],"names":["data","type","name","key","date","keyOptions","value","label","defaultValues","apiKeyName","ApiKey","control","setError","handleSubmit","formState","errors","useForm","title","className","tag","md","size","order","xs","onSubmit","length","isClearable","options","classNamePrefix","theme","selectThemeColors","defaultValue","for","render","field","id","placeholder","invalid","block","color","src","illustration","alt","width","map","item","sm","BreadCrumbs","props","to","index","Wrapper","link","Link","Fragment","isLastItem","active","classnames","end"],"mappings":"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","file":"static/js/126.dfcaadea.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport { useForm, Controller } from 'react-hook-form'\nimport { Copy, MoreVertical, Edit2, Trash2 } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Label,\n  Input,\n  Badge,\n  Button,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  FormFeedback,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Illustrations\nimport illustration from '@src/assets/images/illustration/pricing-Illustration.svg'\n\nconst data = [\n  {\n    type: 'Full Access',\n    name: 'Server Key 1',\n    key: '23eaf7f0-f4f7-495e-8b86-fad3261282ac',\n    date: 'Created on 28 Apr 2020, 18:20 GTM+4:10'\n  },\n  {\n    type: 'Read Only',\n    name: 'Server Key 2',\n    key: 'bb98e571-a2e2-4de8-90a9-2e231b5e99',\n    date: 'Created on 12 Feb 2020, 10:30 GTM+2:30'\n  },\n  {\n    type: 'Full Access',\n    name: 'Server Key 3',\n    key: '2e915e59-3105-47f2-8838-6e46bf83b711',\n    date: 'Created on 28 Apr 2020, 12:21 GTM+4:10'\n  }\n]\n\nconst keyOptions = [\n  { value: 'full-control', label: 'Full Control' },\n  { value: 'modify', label: 'Modify' },\n  { value: 'read-execute', label: 'Read & Execute' },\n  { value: 'list-folder', label: 'List Folder Contents' },\n  { value: 'read-only', label: 'Read Only' },\n  { value: 'read-write', label: 'Read Write' }\n]\n\nconst defaultValues = {\n  apiKeyName: ''\n}\n\nconst ApiKey = () => {\n  // ** Hooks\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  const onSubmit = data => {\n    if (data.apiKeyName.length) {\n      return null\n    } else {\n      setError('apiKeyName', {\n        type: 'manual'\n      })\n    }\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Create an API Key' data={[{ title: 'Pages' }, { title: 'Create an API Key' }]} />\n      <Card>\n        <CardHeader className='pb-0'>\n          <CardTitle tag='h4'>Create an API Key</CardTitle>\n        </CardHeader>\n        <Row>\n          <Col md={{ size: 5, order: 0 }} xs={{ size: 12, order: 1 }}>\n            <CardBody>\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <div className='mb-2'>\n                  <Label className='form-label'>Choose the Api key type you want to create</Label>\n                  <Select\n                    isClearable={false}\n                    options={keyOptions}\n                    className='react-select'\n                    classNamePrefix='select'\n                    theme={selectThemeColors}\n                    defaultValue={keyOptions[0]}\n                  />\n                </div>\n                <div className='mb-2'>\n                  <Label className='form-label' for='apiKeyName'>\n                    Name the API key\n                  </Label>\n                  <Controller\n                    name='apiKeyName'\n                    control={control}\n                    render={({ field }) => (\n                      <Input id='apiKeyName' placeholder='Server Key' invalid={errors.apiKeyName && true} {...field} />\n                    )}\n                  />\n                  {errors && errors.apiKeyName && <FormFeedback>Please enter a valid API key name</FormFeedback>}\n                </div>\n                <div>\n                  <Button block type='submit' color='primary'>\n                    Create Key\n                  </Button>\n                </div>\n              </Form>\n            </CardBody>\n          </Col>\n          <Col md={{ size: 7, order: 1 }} xs={{ size: 12, order: 0 }}>\n            <div className='text-center'>\n              <img className='img-fluid text-center' src={illustration} alt='illustration' width='310' />\n            </div>\n          </Col>\n        </Row>\n      </Card>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>API Key List & Access</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <CardText>\n            An API key is a simple encrypted string that identifies an application without any principal. They are\n            useful for accessing public data anonymously, and are used to associate API requests with your project for\n            quota and billing.\n          </CardText>\n          <Row className='gy-2'>\n            {data.map(item => (\n              <Col sm={12} key={item.key}>\n                <div className='bg-light-secondary position-relative rounded p-2'>\n                  <UncontrolledDropdown className='btn-pinned'>\n                    <DropdownToggle tag='span' className='cursor-pointer'>\n                      <MoreVertical size={18} />\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      <DropdownItem className='d-flex align-items-center'>\n                        <Edit2 size={14} className='me-50' />\n                        <span>Edit</span>\n                      </DropdownItem>\n                      <DropdownItem className='d-flex align-items-center'>\n                        <Trash2 size={14} className='me-50' />\n                        <span>Delete</span>\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                  <div className='d-flex align-items-center flex-wrap'>\n                    <h4 className='mb-1 me-1'>{item.name}</h4>\n                    <Badge className='mb-1' color='light-primary'>\n                      {item.type}\n                    </Badge>\n                  </div>\n                  <h6 className='d-flex align-items-center fw-bolder'>\n                    <span className='me-50'>{item.key}</span>\n                    <span>\n                      <Copy size={14} />\n                    </span>\n                  </h6>\n                  <span>{item.date}</span>\n                </div>\n              </Col>\n            ))}\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default ApiKey\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.1f07f42e.svg\";"],"sourceRoot":""}