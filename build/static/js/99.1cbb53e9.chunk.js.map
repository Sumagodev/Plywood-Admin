{"version":3,"sources":["views/pages/authentication/RegisterBasic.js","@core/components/input-password-toggle/index.js"],"names":["RegisterBasic","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","tag","onSubmit","for","type","placeholder","autoFocus","href","color","block","size","InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","useState","classnames","renderIcon","defaultProps"],"mappings":"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","file":"static/js/99.1cbb53e9.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nconst RegisterBasic = () => {\r\n  return (\r\n    <div className='auth-wrapper auth-basic px-2'>\r\n      <div className='auth-inner my-2'>\r\n        <Card className='mb-0'>\r\n          <CardBody>\r\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n              <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n                <defs>\r\n                  <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                    <stop stopColor='#000000' offset='0%'></stop>\r\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                  </linearGradient>\r\n                  <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                    <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                    <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                  </linearGradient>\r\n                </defs>\r\n                <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n                  <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                    <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                      <path\r\n                        d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                        id='Path'\r\n                        className='text-primary'\r\n                        style={{ fill: 'currentColor' }}\r\n                      ></path>\r\n                      <path\r\n                        d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                        id='Path'\r\n                        fill='url(#linearGradient-1)'\r\n                        opacity='0.2'\r\n                      ></path>\r\n                      <polygon\r\n                        id='Path-2'\r\n                        fill='#000000'\r\n                        opacity='0.049999997'\r\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                      ></polygon>\r\n                      <polygon\r\n                        id='Path-2'\r\n                        fill='#000000'\r\n                        opacity='0.099999994'\r\n                        points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                      ></polygon>\r\n                      <polygon\r\n                        id='Path-3'\r\n                        fill='url(#linearGradient-2)'\r\n                        opacity='0.099999994'\r\n                        points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                      ></polygon>\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n              <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\r\n            </Link>\r\n            <CardTitle tag='h4' className='mb-1'>\r\n              Adventure starts here ğŸš€\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\r\n            <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-username'>\r\n                  Username\r\n                </Label>\r\n                <Input type='text' id='register-username' placeholder='johndoe' autoFocus />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-email'>\r\n                  Email\r\n                </Label>\r\n                <Input type='email' id='register-email' placeholder='john@example.com' />\r\n              </div>\r\n              <div className='mb-1'>\r\n                <Label className='form-label' for='register-password'>\r\n                  Password\r\n                </Label>\r\n                <InputPasswordToggle className='input-group-merge' id='register-password' />\r\n              </div>\r\n              <div className='form-check mb-1'>\r\n                <Input type='checkbox' id='terms' />\r\n                <Label className='form-check-label' for='terms'>\r\n                  I agree to\r\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\r\n                    privacy policy & terms\r\n                  </a>\r\n                </Label>\r\n              </div>\r\n              <Button color='primary' block>\r\n                Sign up\r\n              </Button>\r\n            </Form>\r\n            <p className='text-center mt-2'>\r\n              <span className='me-25'>Already have an account?</span>\r\n              <Link to='/pages/login-basic'>\r\n                <span>Sign in instead</span>\r\n              </Link>\r\n            </p>\r\n            <div className='divider my-2'>\r\n              <div className='divider-text'>or</div>\r\n            </div>\r\n            <div className='auth-footer-btn d-flex justify-content-center'>\r\n              <Button color='facebook'>\r\n                <Facebook size={14} />\r\n              </Button>\r\n              <Button color='twitter'>\r\n                <Twitter size={14} />\r\n              </Button>\r\n              <Button color='google'>\r\n                <Mail size={14} />\r\n              </Button>\r\n              <Button className='me-0' color='github'>\r\n                <GitHub size={14} />\r\n              </Button>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterBasic\r\n","// ** React Imports\r\nimport { Fragment, useState, forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    invalid,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? (\r\n        <Label className='form-label' for={htmlFor}>\r\n          {label}\r\n        </Label>\r\n      ) : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className,\r\n          'is-invalid': invalid\r\n        })}\r\n      >\r\n        <Input\r\n          ref={ref}\r\n          invalid={invalid}\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          {renderIcon()}\r\n        </InputGroupText>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n})\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}