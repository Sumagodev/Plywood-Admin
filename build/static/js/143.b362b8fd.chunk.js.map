{"version":3,"sources":["views/forms/form-elements/input-mask/DateMask.js","views/forms/form-elements/input-mask/TimeMask.js","views/forms/form-elements/input-mask/PhoneMask.js","views/forms/form-elements/input-mask/BlocksMask.js","views/forms/form-elements/input-mask/PrefixMask.js","views/forms/form-elements/input-mask/DelimitersMask.js","views/forms/form-elements/input-mask/CreditCardMask.js","views/forms/form-elements/input-mask/CustomDelimitersMask.js","views/forms/form-elements/input-mask/NumeralFormattingMask.js","views/forms/form-elements/input-mask/index.js","@core/components/breadcrumbs/index.js"],"names":["DateMask","for","className","placeholder","options","date","delimiter","datePattern","id","TimeMask","time","timePattern","PhoneMask","phone","phoneRegionCode","BlocksMask","blocks","uppercase","PrefixMask","prefix","DelimitersMask","CreditCardMask","creditCard","CustomDelimitersMask","delimiters","NumeralFormattingMask","numeral","numeralThousandsGroupStyle","InputMask","title","data","sm","tag","xl","md","BreadCrumbs","props","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","color","size","end"],"mappings":"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","file":"static/js/143.b362b8fd.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst DateMask = () => {\n  const options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\n  return (\n    <Fragment>\n      <Label for='date'>Date</Label>\n      <Cleave className='form-control' placeholder='2001-01-01' options={options} id='date' />\n    </Fragment>\n  )\n}\n\nexport default DateMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst TimeMask = () => {\n  const options = { time: true, timePattern: ['h', 'm', 's'] }\n  return (\n    <Fragment>\n      <Label for='time'>Time</Label>\n      <Cleave className='form-control' placeholder='12:00:00' options={options} id='time' />\n    </Fragment>\n  )\n}\n\nexport default TimeMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\n// ** Reactstrap Components\nimport { InputGroup, InputGroupText, Label } from 'reactstrap'\n\nconst PhoneMask = () => {\n  const options = { phone: true, phoneRegionCode: 'US' }\n  return (\n    <Fragment>\n      <Label for='phone-number'>Phone Number</Label>\n      <InputGroup className='input-group-merge'>\n        <InputGroupText>US (+1)</InputGroupText>\n        <Cleave className='form-control' placeholder='1 234 567 8900' options={options} id='phone-number' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default PhoneMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst BlocksMask = () => {\n  const options = { blocks: [4, 3, 3], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='blocks'>Blocks</Label>\n      <Cleave className='form-control' placeholder='Blocks [4, 3, 3]' options={options} id='blocks' />\n    </Fragment>\n  )\n}\n\nexport default BlocksMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst PrefixMask = () => {\n  const options = { prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='prefix'>Prefix</Label>\n      <Cleave className='form-control' options={options} id='prefix' />\n    </Fragment>\n  )\n}\n\nexport default PrefixMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst DelimitersMask = () => {\n  const options = { delimiter: 'Â·', blocks: [3, 3, 3], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='delimiters'>Delimiters</Label>\n      <Cleave className='form-control' placeholder=\"Delimiter: '.'\" options={options} id='delimiters' />\n    </Fragment>\n  )\n}\n\nexport default DelimitersMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst CreditCardMask = () => {\n  const options = { creditCard: true }\n\n  return (\n    <Fragment>\n      <Label for='credit-card'>Credit Card</Label>\n      <Cleave className='form-control' placeholder='0000 0000 0000 0000' options={options} id='credit-card' />\n    </Fragment>\n  )\n}\n\nexport default CreditCardMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst CustomDelimitersMask = () => {\n  const options = { delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }\n  return (\n    <Fragment>\n      <Label for='custom-delimiters'>Custom Delimiters</Label>\n      <Cleave\n        className='form-control'\n        placeholder=\"Delimiter: ['.', '.', '-']\"\n        options={options}\n        id='custom-delimiters'\n      />\n    </Fragment>\n  )\n}\n\nexport default CustomDelimitersMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Cleave from 'cleave.js/react'\n\n// ** Reactstrap Imports\nimport { Label } from 'reactstrap'\n\nconst NumeralFormattingMask = () => {\n  const options = { numeral: true, numeralThousandsGroupStyle: 'thousand' }\n\n  return (\n    <Fragment>\n      <Label for='numeral-formatting'>Numeral Formatting</Label>\n      <Cleave className='form-control' placeholder='10,000' options={options} id='numeral-formatting' />\n    </Fragment>\n  )\n}\n\nexport default NumeralFormattingMask\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Demo Components\nimport DateMask from './DateMask'\nimport TimeMask from './TimeMask'\nimport PhoneMask from './PhoneMask'\nimport BlocksMask from './BlocksMask'\nimport PrefixMask from './PrefixMask'\nimport DelimitersMask from './DelimitersMask'\nimport CreditCardMask from './CreditCardMask'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport CustomDelimitersMask from './CustomDelimitersMask'\nimport NumeralFormattingMask from './NumeralFormattingMask'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\n\nconst InputMask = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Input Mask' data={[{ title: 'Form Elements' }, { title: 'Input Mask' }]} />\n      <Row>\n        <Col sm='12'>\n          <Card>\n            <CardHeader>\n              <CardTitle tag='h4'>Input Masks</CardTitle>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <CreditCardMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <PhoneMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <DateMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <TimeMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <NumeralFormattingMask />\n                </Col>\n                <Col className='mb-2' xl='4' md='6' sm='12'>\n                  <BlocksMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <DelimitersMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <CustomDelimitersMask />\n                </Col>\n                <Col xl='4' md='6' sm='12'>\n                  <PrefixMask />\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default InputMask\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}