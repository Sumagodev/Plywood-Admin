{"version":3,"sources":["views/apps/UsersWithSubscription/list/Table.js","views/apps/UsersWithSubscription/list/index.js","services/UserSubscription.service.js","views/apps/UsersWithSubscription/list/UserWithSubscriptionDetail.js","views/Subscriptions/list/AddSubscription.js","views/Subscriptions/list/columns.js","views/Subscriptions/list/Table.js","views/Reports/FlashSales/list/columns.js","views/Reports/FlashSales/list/Table.js","views/Reports/FlashSales/list/FlashSalesDetails.js","views/AdvertisementSubsctiptions/list/columns.js","views/AdvertisementSubsctiptions/list/Table.js","views/AdvertisementSubsctiptions/list/AddAdvertisementSubscription.js","views/UserTickets/list/columns.js","views/UserTickets/list/Table.js","views/UserTickets/list/index.js","views/UserTickets/list/UserTicketDetails.js","utility/DateUtils.js","views/Reports/Advertisements/list/columns.js","views/Reports/Advertisements/list/Table.js","views/Reports/Advertisements/list/index.js","views/Reports/Advertisements/list/PromotionDetails.js","views/Reports/SubscriptionsReport/store/index.js","views/Reports/SubscriptionsReport/list/columns.js","views/Reports/SubscriptionsReport/list/Table.js","views/Reports/SubscriptionsReport/list/index.js","views/Reports/SubscriptionsReport/list/AllSubscribedUsers.js","views/Reports/Leads/list/columns.js","views/Reports/Leads/list/Table.js","views/Reports/Leads/list/index.js","views/apps/UserRequirements/list/Table.js","views/apps/UserRequirements/list/index.js","views/apps/Quick reviews/list/Table.js","views/apps/Quick reviews/list/index.js","views/Blogs/list/columns.js","views/Blogs/list/Table.js","views/Blogs/list/index.js","QuillEditor.js","views/Blogs/list/AddBlog.js","views/BlogVideo/list/columns.js","views/BlogVideo/list/Table.js","views/BlogVideo/list/index.js","views/BlogVideo/list/AddVideoBlog.js","views/Topup/list/AddTopup.js","views/Topup/list/columns.js","views/Topup/list/Table.js","views/Topup/list/index.js","views/products/newsLetter/list/columns.js","views/products/newsLetter/list/Table.js","views/products/newsLetter/list/index.js","views/Reports/SalesUsers/list/AddModal.js","views/Reports/SalesUsers/list/Table.js","views/Reports/SalesUsers/list/index.js","views/homepageBanners/list/AddModal.js","views/homepageBanners/list/Table.js","views/homepageBanners/list/index.js","services/WebsiteData.service.js","views/WebsiteData/list/index.js","views/seo/list/columns.js","views/seo/list/Table.js","views/seo/list/index.js","views/seo/list/AddSeo.js","views/homepageBannersimges/store/index.js","views/homepageBannersimges/list/AddModal.js","views/homepageBannersimges/list/Table.js","views/homepageBannersimges/list/index.js","router/routes/Apps.js","router/routes/Forms.js","router/routes/Pages.js","router/routes/Tables.js","router/routes/Charts.js","router/routes/Dashboards.js","router/routes/UiElements.js","router/routes/Extensions.js","router/routes/PageLayouts.js","router/routes/Authentication.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/IntlDropdown.js","@core/layouts/components/navbar/CartDropdown.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarSearch.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/NavbarBookmarks.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","navigation/horizontal/apps.js","navigation/horizontal/dashboards.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/BlogVideos.js","navigation/horizontal/Blogs.js","navigation/horizontal/forms-tables.js","navigation/horizontal/product.js","navigation/horizontal/subscriptions.js","navigation/horizontal/tickets.js","navigation/horizontal/Seo.js","navigation/horizontal/index.js","navigation/horizontal/quickenquiry.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PrivateRoute.js","views/products/brand/list/columns.js","views/products/brand/list/AddModal.js","views/products/brand/list/Table.js","views/products/brand/list/index.js","views/products/review/list/Review.js","views/products/list/AddProduct.js","router/routes/Product.js","router/routes/location.js","router/routes/index.js","router/Router.js","App.js","@core/components/avatar/index.js","utility/Utils.js","utility/constant.js","@core/components/widgets/stats/StatsHorizontal.js","utility/hooks/useSkin.js","utility/FileUpload.js","utility/hooks/useRTL.js","@core/components/sidebar/index.js","@core/components/autocomplete/index.js","utility/hooks/useOnClickOutside.js","utility/hooks/useLayout.js","@core/layouts/BlankLayout.js"],"names":["UsersWithSubscription","dispatch","useDispatch","store","useSelector","state","selectedUser","setSelectedUser","useState","sort","setSort","searchTerm","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","value","label","currentStatus","setCurrentStatus","number","rolesOptions","setrolesOptions","editModal","setEditModal","startDate","setstartDate","endDate","setEndDate","useEffect","getAllUsersWithSubsciptionFn","q","page","perPage","role","status","showName","data","length","console","log","columns","name","sortable","minWidth","sortField","selector","row","cell","className","to","onClick","getUser","id","companyObj","email","roleObj","USER","class","icon","User","MANUFACTURER","Database","editor","Edit2","DISTRIBUTOR","Settings","DEALER","Slack","APPROVERS","Icon","size","renderRole","approved","disabled","type","checked","onChange","async","obj","res","approveUserById","message","toastSuccess","error","toastError","handleStatus","_id","color","xl","htmlFor","e","parseInt","currentTarget","style","width","handleFilter","val","target","noHeader","pagination","paginationServer","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","Table","serverUrl","BaseUrl","UserWithSubscriptionDetail","useParams","userSubscriptionsArr","setUserSubscriptionsArr","totalPages","setTotalPages","handleGetUsersSubscriptionById","axiosInstance","get","getAllSubscriptionbyUserId","query","totalCount","err","handleSendMailById","sendMailById","moment","createdAt","format","price","numberOfSales","saleDays","numberOfAdvertisement","advertisementDays","tag","AddSubscription","subscriptionObj","subscription","selectedSubscription","setSelectedSubscription","includesFlashSales","setIncludesFlashSales","includesAdvertisements","setIncludesAdvertisements","includesValidity","setIncludesValidity","isEditing","setIsEditing","setname","noOfMonth","setNoOfMonth","setPrice","description","setDescription","messageArr","setMessageArr","setNumberOfSales","setSaleDays","setNumberOfAdvertisement","setAdvertisementDays","setRole","roleSelect","Object","values","ROLES_CONSTANT","map","el","filter","getSubscriptionById","md","sm","for","placeholder","isClearable","options","classNamePrefix","tempArr","push","handleAddSubscription","pop","handleRemoveSubscription","index","_","cloneDeep","handleSetMessge","updateSubscription","addSubscription","onSubmit","preventDefault","deleteSubscription","SubscriptionList","subscriptionArr","dataArr","setDataArr","products","allData","getSubscription","userId","productId","discountType","discountValue","salePrice","FlashSales","FlashSalesArr","getFlashSales","FlashSalesDetails","flashSaleObj","setFlashSaleObj","getFlashSalebyId","numberOfAdvertisements","AdverisementSubscriptionList","AddAdvertisementSubscription","setNumberOfAdvertisements","deleteTicket","TicketList","Tickets","getTickets","UserTicketDetails","params","setMessage","ticketObj","setTicketObj","auth","userData","handleGetUserTickets","getTicketMessagesbyId","ticketMessageArr","commentsEndRef","useRef","commentsContainerRef","ref","border","padding","borderRadius","minHeight","maxHeight","overflowY","display","placeItems","marginLeft","marginBottom","backgroundColor","fontSize","fontWeight","toLowerCase","Date","getDate","getMonth","getFullYear","marginTop","userTicketsId","AddTicketMessage","handleAddComment","height","Promotions","getPromotions","PromotionList","PromotionDetails","createAsyncThunk","response","getSubscriptionWithSubscriberCountApi","subscriptionCount","getSubscriptionSubscribedUser","getSubscriptionSubscribedbyUserId","getByIdApi","formData","addSubscriptionApi","success","updateSubscriptionApi","deleteSubscriptionApi","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","action","payload","usersCount","AllSubscriptionList","AllSubscribedUsers","createdByObj","productObj","userObj","Leads","getLeads","LeadsList","UserRequirements","getAllUserRequirement","phone","productName","address","deleteUserRequirement","quickenqury","getAllquickenquries","meassage","deletequickenquries","QuickEnquiery","href","generateFilePath","image","src","alt","srcset","toDateString","deleteBlogs","Blogs","getBlogs","modules","toolbar","header","script","list","indent","background","font","align","formats","QuillEditor","handleChange","quillValue","setQuillValue","theme","scrollingContaine","Addblog","blogObj","selectedBlogs","durationInDays","setDurationInDays","setImage","numberOfPromotions","setNumberOfPromotions","getBlogsById","includes","FileUpload","onFileChange","updateBlogs","addBlogs","url","deleteBlogVideo","Video","BlogVideo","getBlogVideo","AddblogVideo","selectedBlogVideo","setUrl","getBlogVideoById","updateBlogVideo","addBlogVideo","AddTopup","TopupObj","topup","selectedTopup","setSelectedTopup","includesOpportunities","setIncludesOpportunities","includesBannerImages","setIncludesBannerImages","numberOfOpportunity","setNumberOfOpportunity","opportunityDays","setOpportunityDays","numberOfBannerImages","setNumberOfBannerImages","bannerimagesDays","setBannerImagesDays","FIELDUSER","SUBADMIN","getTopupById","handleaddTopup","handleRemoveTopup","updateTopup","addTopup","deleteTopup","TopupList","TopupArr","getTopup","UsersList","newsLetter","getnewsLetters","subHeader","sortServer","responsive","onSort","column","sortDirection","sortIcon","filters","isFiltered","keys","some","k","slice","dataToRender","NewsLetterList","AddModal","open","toggleSidebar","categories","isOpen","onClosed","toggle","setStartDate","tempDate","setMonth","salesCount","salesArr","margin","SalesReportList","homepageBanners","isUpdated","setIsUpdated","setimage","selectedObj","category","updateHomepageBanner","addHomepageBanners","getHomepageBanners","getHomepageBannerssById","confirm","deleteHomepageBanners","handleDeleteHomePageBanners","HomepageBanners","WebsiteData","previousImage","setPreviousImage","handleGetWebsiteData","getWebsiteData","shopImage","handleAddWebsiteData","post","AddWebsiteData","deleteSeo","Seo","getSeo","AddSeo","selectedSeo","title","setTitle","keywords","setKeywords","getSeoById","updateSeo","addSeo","getHomePageBannerImageApi","bannerImages","getByIdBannerApi","addHomePageBannerImageApi","getState","updateBannersApi","deleteBannersApi","seturl","HomepageBannersimges","Chat","lazy","Todo","Email","Kanban","Calendar","InvoiceAdd","InvoiceList","InvoiceEdit","InvoicePrint","InvoicePreview","EcommerceShop","EcommerceDetail","EcommerceWishlist","EcommerceCheckout","UserList","UserView","Roles","Permissions","AppRoutes","element","path","meta","appLayout","layout","roleArr","Wizard","Validation","FormLayouts","Radio","Input","FormRepeater","Switch","Editor","Select","Textarea","InputMask","Checkboxes","Datepickers","InputGroups","NumberInput","FileUploader","FormRoutes","Faq","ApiKey","Profile","Pricing","License","Error","BlogList","BlogEdit","BlogDetails","ComingSoon","ModalExamples","Maintenance","AccountSettings","NotAuthorized","KnowledgeBase","KnowledgeBaseCategory","KBCategoryQuestion","PagesRoutes","publicRoute","Reactstrap","DTBasic","DTAdvance","TablesRoutes","ApexCharts","ChartJS","Recharts","ChartMapsRoutes","DashboardEcommerce","DashboardRoutes","Typography","Icons","CardsBasic","CardsAdvance","CardsStatistics","CardsAnalytics","CardsActions","Accordion","Alerts","Autocomplete","Avatar","Badge","BlockUI","Breadcrumbs","Buttons","Carousel","Collapse","Divider","Dropdown","ListGroup","Modal","NavComponent","Offcanvas","Pagination","BadgePills","TabPills","Popovers","Progress","Spinners","Tabs","Timeline","Toasts","Tooltips","UiElementRoutes","Tour","Swiper","Ratings","Sliders","I18nComponent","SweetAlert","ContextMenu","ReactPlayer","DragAndDrop","AccessControl","ReactHotToast","CopyToClipboard","ImportComponent","ExportComponent","ExportSelected","ExtensionsRoutes","resource","BoxedLayout","WithoutMenu","LayoutEmpty","LayoutBlank","CollapsedMenu","PageLayoutRoutes","menuCollapsed","contentWidth","menuHidden","Login","LoginBasic","LoginCover","Register","RegisterBasic","RegisterCover","RegisterMultiSteps","ForgotPassword","ForgotPasswordBasic","ForgotPasswordCover","ResetPasswordBasic","ResetPasswordCover","VerifyEmailBasic","VerifyEmailCover","TwoStepsBasic","TwoStepsCover","AuthenticationRoutes","restricted","Customizer","props","skin","isRtl","setSkin","setIsRtl","isHidden","setLayout","navbarType","footerType","navbarColor","setIsHidden","setLastLayout","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","classnames","wheelPropagation","skinsArr","radio","marginCondition","renderSkinsRadio","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","rest","visible","setVisible","window","addEventListener","pageYOffset","scroll","top","behavior","defaultProps","Footer","rel","IntlDropdown","CartDropdown","UserDropdown","setUserData","isUserLoggedIn","JSON","parse","localStorage","getItem","userAvatar","avatar","defaultAvatar","img","imgHeight","imgWidth","end","divider","Link","handleLogout","NavbarSearch","NavbarUser","NavbarBookmarks","setMenuVisibility","setValue","openSearch","setOpenSearch","navbar","getBookmarks","handleClearQueryInStore","handleSearchQuery","bookmarks","item","IconTag","link","show","suggestions","wrapperClass","filterKey","autoFocus","defaultSuggestions","suggestionLimit","externalClick","clearInput","userInput","setUserInput","handleClearInput","onKeyDown","keyCode","setTimeout","customRender","i","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","onMouseEnter","indexOf","active","isBookmarked","handleBookmarkUpdate","updateBookmarked","ThemeNavbar","VerticalMenuHeader","setGroupOpen","menuHover","user","getUserData","Toggler","getHomeRouteForLoggedInUser","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","activeItem","LinkTag","externalLink","NavLink","t","useTranslation","navLink","newTab","undefined","isActive","badge","badgeText","pill","hasActiveChild","currentUrl","child","removeChildren","openGroup","currentActiveGroup","forEach","splice","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","expanded","onMouseLeave","onScrollY","container","scrollTop","current","classList","contains","add","remove","scrollMenu","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","VerticalLayout","footer","useRTL","useSkin","useLayout","isMounted","setIsMounted","menuVisibility","windowWidth","setWindowWidth","innerWidth","layoutStore","handleWindowWidth","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","dark","customizer","handleMenuHidden","handleContentWidth","dashboards","apps","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","stylesObj","clientHeight","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","update","attributes","usePopper","placement","modifiers","offset","HorizontalNavMenuItems","HorizontalMenu","menuDataArr","setMenuDataArr","ele","elex","elm","elexm","HorizontalLayout","navbarScrolled","setNavbarScrolled","listStyle","routerProps","currentActiveItem","product","formsAndTables","subscriptions","tickets","blogs","BlogVideos","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","Tag","Fragment","memo","PrivateRoute","route","fallback","statusObj","pending","inactive","getBrandById","deleteBrand","brands","setstatus","setisUpdated","updateObj","setupdateObj","updateBrand","addBrand","selectedBrand","brand","getBrand","BrandList","Review","handleGetReviews","getReviewForProduct","rating","deleteReviewById","deleteProdcutId","AddProduct","brandArr","productRedux","selectedProduct","categoryArr","setcategoryArr","setbrand","setcategory","thickness","setthickness","application","setapplication","grade","setgrade","setcolor","setsize","wood","setwood","glue","setglue","setprice","sellingprice","setsellingprice","warranty","setwarranty","shortDescription","setshortDescription","longDescription","setLongDescription","imageArr","setimageArr","mainCategoryArr","setmainCategoryArr","categoryId","specification","mainImage","getProductById","subcategoryRender","cateArr","dash","cat","subCategoryArr","getNestedCategoriesApi","handleNestedCategory","tempCategoryArr","elx","handleCtegoryEvent","rows","indez","handleFileSet","handleImagesRemove","removeIndex","updateProduct","addProduct","CategoryList","ProductList","ProductRoutes","CountryList","StateList","CityList","LocationRoutes","getLayout","blank","BlankLayout","vertical","horizontal","DefaultRoute","Routes","PageLayoutsRoutes","ChartsRoutes","getRoutes","defaultLayout","AllRoutes","layoutItem","LayoutRoutes","RouteTag","Wrapper","isObjEmpty","MergeLayoutRoutes","Router","allRoutes","useRoutes","replace","getHomeRoute","App","forwardRef","badgeUp","content","initials","badgeColor","imgClassName","contentStyles","str","results","split","join","getInitials","kFormatter","num","toFixed","htmlToString","html","formatDate","formatting","month","day","year","Intl","DateTimeFormat","formatDateToMonthShort","toTimeForCurrentDay","date","today","isToday","hour","minute","userRole","selectThemeColors","colors","primary25","primary","neutral10","neutral20","neutral30","ADMIN","RETAILER","CONTRACTOR","SALES","StatsHorizontal","stats","renderStats","statTitle","statsMargin","document","body","classNames","bordered","handleSkin","acceptImage","returnOriginal","acceptOnly","file","setFile","handleFileSelection","event","files","cb","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64","accept","isRTL","getElementsByTagName","setAttribute","handleRTL","closeBtn","bodyClassName","contentClassName","wrapperClassName","headerClassName","renderCloseBtn","modalClassName","String","close","inputElRef","suggestionsListRef","focused","setFocused","setActiveSuggestion","showSuggestions","setShowSuggestions","navigate","useNavigate","onSuggestionClick","renderGroupedSuggestion","arr","suggestionURL","renderSuggestion","renderSuggestions","grouped","filterHeaderKey","suggestion","sortData","startCondition","startsWith","includeCondition","searchLimit","sortSingleData","renderUngroupedSuggestions","handler","suggestionsListComponent","ReactDOM","findDOMNode","focus","onSuggestionsShown","listener","removeEventListener","component","suggestionList","scrollHeight","stopPropagation","onFocus","onBlur","handleLayout","breakpoint","lastLayout","handleLastLayout"],"mappings":"maAuaeA,MA9Xe,KAAO,IAAD,EAElC,MAAMC,EAAWC,cAGXC,EAAQC,aAAYC,GAASA,EAAML,yBAClCM,EAAcC,GAAmBC,mBAAS,CAAC,IAE3CC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,SACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,IACxCa,EAAaC,GAAkBd,mBAAS,CAAEe,MAAO,GAAIC,MAAO,iBAE5DC,EAAeC,GAAoBlB,mBAAS,CAAEe,MAAO,GAAIC,MAAO,gBAAiBG,OAAQ,KACzFC,EAAcC,GAAmBrB,mBAAS,KAC1CsB,EAAWC,GAAgBvB,oBAAS,IAChCwB,EAAWC,GAAgBzB,sBAC3B0B,EAASC,GAAc3B,qBAIlC4B,qBAAU,KAERnC,EACEoC,YAA6B,CAC3B5B,OACAM,aACAuB,EAAG3B,EACH4B,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBoB,UAAU,IAGb,GAIA,CAAC1C,EAAe,OAALE,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOyC,YAAI,WAAN,EAAL,EAAaC,OAAQpC,EAAMM,EAAYF,IAiJrDuB,qBAAU,KACRU,QAAQC,IAAI5C,EAAO,QAAQ,GAC1B,CAACA,IAGJ,MAAM6C,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,WACXC,SAAWC,GAAQA,EAAIL,KACvBM,KAAOD,IAAG,eACR,qBAAKE,UAAU,iDAAgD,SAE7D,sBAAKA,UAAU,qBAAoB,UACjC,cAAC,IAAI,CACHC,GAAK,GACLD,UAAU,oCACVE,QAAS,IAAMzD,EAAS0D,QAAQL,EAAIM,KAAK,SAEzC,sBAAMJ,UAAU,YAAW,SACV,QAAd,EAAAF,EAAIO,kBAAU,OAAd,EAAgBZ,KAAqB,QAAjB,EAAGK,EAAIO,kBAAU,aAAd,EAAgBZ,KAAOK,EAAIL,SAGvD,uBAAOO,UAAU,QAAO,SAAEF,EAAIQ,YAE5B,GAGV,CACEb,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,OACXC,SAAWC,GAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKb,KACxBc,KAAOD,GA3EQA,KACjB,MAAMS,EAAU,CACdC,KAAM,CACJC,MAAO,eACPC,KAAMC,KAERC,aAAc,CACZH,MAAO,eACPC,KAAMG,KAERC,OAAQ,CACNL,MAAO,YACPC,KAAMK,KAERC,YAAa,CACXP,MAAO,eACPC,KAAMO,KAERC,OAAQ,CACNT,MAAO,cACPC,KAAMS,KAERC,UAAW,CACTX,MAAO,cACPC,KAAMS,MAIJE,EAAOd,EAAQT,EAAIb,MAAQsB,EAAQT,EAAIb,MAAMyB,KAAOK,IAE1D,OACE,uBAAMf,UAAU,6CAA4C,UAC1D,cAACqB,EAAI,CAACC,KAAM,GAAItB,UAAY,GAAEO,EAAQT,EAAIb,MAAQsB,EAAQT,EAAIb,MAAMwB,MAAQ,aAC3EX,EAAIb,OACA,EAyCQsC,CAAWzB,IAkB5B,CACEL,KAAM,WACNE,SAAU,QACVD,UAAU,EACVE,UAAW,WACXC,SAAWC,GAAQA,EAAI0B,SACvBzB,KAAOD,GACL,qBAAKE,UAAU,yBAAwB,SACrC,cAAC,IAAK,CACJyB,UAAQ,EACRC,KAAK,SACLjC,KAAK,eACLW,GAAG,sBACHuB,QAAS7B,EAAI0B,SACbI,SAAU,IA3HCC,OAAOzB,EAAIlB,KAC9B,IACE,MAAM4C,EAAM,CACV5C,WAEME,KAAM2C,SAAcC,YAAgB5B,EAAI0B,GAC5CC,EAAIE,SACNC,YAAaH,EAAIE,QAErB,CAAE,MAAOE,GACPC,YAAWD,EACb,GAgHwBE,CAAavC,EAAIwC,KAAMxC,EAAI0B,eAKnD,CACE/B,KAAM,UACNE,SAAU,QACVD,UAAU,EAEVK,KAAOD,GACL,mCACE,cAAC,IAAI,CACHyC,MAAM,UACNvC,UAAU,qBACVC,GAAK,yCAAwCH,EAAIwC,MAAM,SAEvD,cAAC,IAAG,CAAChB,KAAM,WAqBrB,OACE,cAAC,WAAQ,UACP,eAAC,IAAI,CAACtB,UAAU,kBAAiB,UAC/B,qBAAKA,UAAU,aAAY,SACzB,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,+BAA8B,SAClD,6BACE,4BAAG,gCAGP,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SA1PMc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GACfb,EACEoC,YAA6B,CAC3B5B,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,EACNE,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BL,EAAeK,EAAM,EA6OP8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CAACD,GAAG,IAAIxC,UAAU,6BAA4B,UAChD,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAWc,IAAMK,OA/PZC,EA+PyBN,EAAEO,OAAOlF,MA9PrDX,EAAc4F,QACdvG,EACEoC,YAA6B,CAC3B5B,OACA6B,EAAGkE,EACHzF,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAVPiF,KA+PyC,OAGlD,sBAAKhD,UAAU,4BAA2B,UACxC,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,WAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOS,EACPoD,SAAWc,GAAMjE,EAAaiE,EAAEO,OAAOlF,SAEzC,cAAC,IAAK,CACJqC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOW,EACPkD,SAAWc,GAAM/D,EAAW+D,EAAEO,OAAOlF,YAGzC,cAAC,IAAM,CAACwE,MAAM,UAAUrC,QAAS,KAtQ3CzD,EACEoC,YAA6B,CAC3B5B,OACAM,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBS,YACAE,YA6PkE,WAAC,mBAUnE,8BACE,cAAC,IAAS,CACRwE,UAAQ,EACRC,YAAU,EACV3D,QAASA,EACT4D,kBAAgB,EAChBC,oBAvQe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GA1EKA,KACvBtC,EACEoC,YAA6B,CAC3B5B,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,EACtBhF,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BT,EAAeyB,EAAKkF,SAAW,EAAE,EA8DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EAuPIrF,KAAMzC,EAAMyC,aAIT,E,cC3WA5C,MA1Ce,IAE1B,qBAAKwD,UAAU,gBAAe,SAmC5B,cAAC0E,EAAK,M,gDC/CZ,MAAMC,EAAa,GAAEC,uB,sBCWN,SAASC,IACpB,MAAM,GAAEzE,GAAO0E,eACRC,EAAsBC,GAA2BhI,mBAAS,KAC1DF,EAAcC,GAAmBC,mBAAS,CAAC,IAE3CC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,SACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,IACxCa,EAAaC,GAAkBd,mBAAS,CAAEe,MAAO,GAAIC,MAAO,iBAE5DC,EAAeC,GAAoBlB,mBAAS,CAAEe,MAAO,GAAIC,MAAO,gBAAiBG,OAAQ,KACzFC,EAAcC,GAAmBrB,mBAAS,KAC1CsB,EAAWC,GAAgBvB,oBAAS,IACpCiI,EAAYC,GAAiBlI,mBAAS,GACvCmI,EAAiCtD,UACnC,IACI,MAAQzC,KAAM2C,QDxBgBF,UAC/BuD,IAAcC,IAAK,GAAEV,iCAAyCvE,KCuBjCkF,CAA2BC,GACnDxD,EAAI3C,OACJE,QAAQC,IAAIwC,EAAK,WACjBiD,EAAwBjD,EAAI3C,MAC5B8F,EAAcnD,EAAIyD,YAE1B,CAAE,MAAOC,GACLrD,YAAWqD,EACf,GAIEC,EAAqB7D,UACvB,IACI,MAAQzC,KAAM2C,QD/BEF,UACjBuD,IAAcC,IAAK,GAAEV,kBAA0BvE,KC8BlBuF,CAAavF,GACrC2B,EAAI3C,MACJ8C,YAAaH,EAAIE,QAEzB,CAAE,MAAOwD,GACLrD,YAAWqD,EACf,GAGJ7G,qBAAU,KAEFwB,GACA+E,EAAgC,UAAS/E,iBAAkB3C,iBAA2BJ,IAC1F,GAED,CAAC+C,IAEJ,MAAMZ,EAAU,CACZ,CACIC,KAAM,oBACNC,UAAU,EACVC,SAAU,QACVE,SAAUC,GAAOA,EAAIL,KACrBM,KAAMD,GACF,qBAAKE,UAAU,iDAAgD,SAE3D,sBAAKA,UAAU,qBAAoB,UAC/B,cAAC,IAAI,CACDC,GAAK,GACLD,UAAU,oCACVE,QAAS,IAAMzD,SAAS0D,QAAW,OAAHL,QAAG,IAAHA,OAAG,EAAHA,EAAKM,KAAK,SAE1C,sBAAMJ,UAAU,YAAW,SAAK,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKL,SAEtC,uBAAOO,UAAU,QAAO,SAAK,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKQ,cAK/C,CACIb,KAAM,eACNE,SAAU,QACVD,UAAU,EACVG,SAAUC,GAAO8F,IAAO9F,EAAI+F,WAAWC,OAAO,eAElD,CACIrG,KAAM,YACNE,SAAU,QACVD,UAAU,EACVG,SAAUC,GAAO8F,IAAO9F,EAAItB,WAAWsH,OAAO,eAElD,CACIrG,KAAM,UACNE,SAAU,QACVD,UAAU,EACVG,SAAUC,GAAO8F,IAAO9F,EAAIpB,SAASoH,OAAO,eAEhD,CACIrG,KAAM,aACNE,SAAU,QACVD,UAAU,EACVG,SAAUC,GAAQ,MAAKA,EAAIiG,SAE/B,CACItG,KAAM,cACNE,SAAU,QACVD,UAAU,EACVG,SAAUC,GAAQ,GAAEA,EAAIkG,qBAAqBlG,EAAImG,iBAErD,CACIxG,KAAM,iBACNE,SAAU,QACVD,UAAU,EACVG,SAAUC,GAAQ,GAAEA,EAAIoG,6BAA6BpG,EAAIqG,0BAE7D,CACI1G,KAAM,gBACNE,SAAU,QACVD,UAAU,EACVK,KAAMD,GACF,mCACE,cAAC,IAAM,CAAC4B,KAAK,SAASa,MAAM,UAAUvC,UAAU,qBAAqBE,QAAS,IAAMwF,EAAsB,OAAH5F,QAAG,IAAHA,OAAG,EAAHA,EAAKwC,KAAK,SAAC,aAiEhI,OACI,eAAC,IAAI,WACD,eAAC,IAAU,WACP,eAAC,IAAI,CAACrC,GAAG,qCAAqCD,UAAU,0BAA0BuC,MAAM,UAAS,UAC7F,cAAC,IAAW,IAAG,UAGnB,cAAC,IAAG,CAACC,GAAG,IAAIxC,UAAU,gCAA+B,SACjD,sBAAKA,UAAU,kCAAiC,UAC5C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACFzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SA5CFc,IAClB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GACf6H,EAAgC,UAAS/E,iBAAkBrC,mBAC3DL,EAAeK,EAAM,EAyCD8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAExB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGvC,cAAC,IAAS,CAAC2D,IAAI,KAAI,SAAC,4BAGxB,cAAC,IAAQ,UACL,cAAC,KAAG,UACA,8BACI,cAAC,IAAS,CACNlD,UAAQ,EACRC,YAAU,EACV3D,QAASA,EACT4D,kBAAgB,EAChBC,oBA5DC,KACrB,MAAMC,EAAQC,OAAOC,KAAKC,KAAKwB,EAAaxH,IAE5C,OACI,cAAC,IAAa,CACVkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GApCDA,KACrBzB,EAAeyB,EAAKkF,SAAW,GAC/B3E,QAAQC,IAAIR,EAAKkF,SAAU,cAC3BkB,EAAgC,UAAS/E,iBAAkB3C,iBAA2BsB,EAAKkF,SAAW,IAAI,EAiC5EC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACtB,EA4CcrF,KAAM2F,YAOlC,C,sBC+HesB,MArWS,KACtB,MAAM5J,EAAWC,eACX,GAAE0D,GAAO0E,cACTwB,EAAkB1J,aAAYC,GAASA,EAAM0J,aAAaC,wBACzDA,EAAsBC,GAA2BzJ,mBAAS,CAAC,IAE3D0J,EAAoBC,GAAyB3J,oBAAS,IACtD4J,EAAwBC,GAA6B7J,oBAAS,IAC9D8J,EAAkBC,GAAuB/J,oBAAS,IAGlDgK,EAAWC,GAAgBjK,oBAAS,IACpCyC,EAAMyH,GAAWlK,mBAAS,KAC1BmK,EAAWC,GAAgBpK,mBAAS,IACpC+I,EAAOsB,GAAYrK,mBAAS,IAC5BsK,EAAaC,GAAkBvK,mBAAS,KACxCwK,EAAYC,GAAiBzK,mBAAS,CAAC,CAAEiF,QAAS,OAClD+D,EAAe0B,GAAoB1K,mBAAS,IAC5CiJ,EAAU0B,GAAe3K,mBAAS,IAClCkJ,EAAuB0B,GAA4B5K,mBAAS,IAC5DmJ,EAAmB0B,GAAwB7K,mBAAS,IACpDoB,EAAcC,GAAmBrB,mBAAS,KAC1CiC,EAAM6I,GAAW9K,mBAAS,IAiGjC4B,qBAAU,KACJ0H,GAAmBA,EAAgB7G,MAAQuH,GAC7CE,EAAuB,OAAfZ,QAAe,IAAfA,KAAiB7G,KAAsB,OAAf6G,QAAe,IAAfA,OAAe,EAAfA,EAAiB7G,KAAO,IACrC,OAAf6G,QAAe,IAAfA,KAAiBrH,MACnB6I,EAAQ,CAAE9J,MAAsB,OAAfsI,QAAe,IAAfA,OAAe,EAAfA,EAAiBrH,KAAMlB,MAAsB,OAAfuI,QAAe,IAAfA,OAAe,EAAfA,EAAiBrH,OAElEsI,EAA8B,OAAfjB,QAAe,IAAfA,KAAiBgB,YAA6B,OAAfhB,QAAe,IAAfA,OAAe,EAAfA,EAAiBgB,YAAc,IAC7EF,EAA4B,OAAfd,QAAe,IAAfA,KAAiBa,UAA2B,OAAfb,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,UAAY,IACvEE,EAAwB,OAAff,QAAe,IAAfA,KAAiBP,MAAuB,OAAfO,QAAe,IAAfA,OAAe,EAAfA,EAAiBP,MAAQ,IAC3D4B,EAA2B,OAAfrB,QAAe,IAAfA,KAAiBL,SAA0B,OAAfK,QAAe,IAAfA,OAAe,EAAfA,EAAiBL,SAAW,IACpEyB,EAAgC,OAAfpB,QAAe,IAAfA,KAAiBN,cAA+B,OAAfM,QAAe,IAAfA,OAAe,EAAfA,EAAiBN,cAAgB,IACnFyB,EAA6B,OAAfnB,QAAe,IAAfA,KAAiBkB,WAA4B,OAAflB,QAAe,IAAfA,OAAe,EAAfA,EAAiBkB,WAAa,CAAC,CAAEvF,QAAS,MACtF0E,EAAqC,OAAfL,QAAe,IAAfA,OAAe,EAAfA,EAAiBI,oBACvCG,EAAyC,OAAfP,QAAe,IAAfA,OAAe,EAAfA,EAAiBM,wBAC3CG,EAAmC,OAAfT,QAAe,IAAfA,OAAe,EAAfA,EAAiBQ,kBACrCc,EAAwC,OAAftB,QAAe,IAAfA,OAAe,EAAfA,EAAiBJ,uBAC1C2B,EAAoC,OAAfvB,QAAe,IAAfA,OAAe,EAAfA,EAAiBH,qBAEtCe,EAAQ,IACRK,EAAe,IACfO,EAAQ,IACRV,EAAa,GACbC,EAAS,GACTM,EAAY,GACZhB,GAAsB,GACtBE,GAA0B,GAC1BE,GAAoB,GACpBa,EAAyB,GACzBC,EAAqB,GACrBH,EAAiB,GACjBD,EAAc,CAAC,CAAExF,QAAS,MAC5B,GAEC,CAACqE,EAAiBU,IAOrBpI,qBAAU,KAER,MAAMmJ,EAAaC,OAAOC,OAAOC,KAAgBC,KAAIC,IAC5C,CAAEpK,MAAOoK,EAAIrK,MAAOqK,MAC1BC,QAAQD,GAAmB,UAAbA,EAAGpK,QAEpBK,EAAgB,IAAI0J,IAEhB3H,IAXJ3D,EAAS6L,YAAoBlI,IAa3B6G,GAAa,GACf,GAEC,CAAC7G,IAiCJ,OACE,eAAC,IAAI,WACH,eAAC,IAAU,WACT,eAAC,IAAI,CAACH,GAAG,qBAAqBD,UAAU,0BAA0BuC,MAAM,UAAS,UAC/E,cAAC,IAAW,IAAG,UAEjB,eAAC,IAAS,CAAC6D,IAAI,KAAI,UAAEY,EAAY,OAAS,MAAM,sBAGlD,eAAC,IAAQ,WACP,eAAC,KAAG,WACF,eAAC,IAAG,CAAChH,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAO0B,EAAMmC,SAAWc,GAAMwE,EAAQxE,EAAEO,OAAOlF,OAAQ2K,YAAY,+BAExG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,gBAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOuJ,EAAa1F,SAAWc,GAAM6E,EAAe7E,EAAEO,OAAOlF,OAAQ2K,YAAY,4BAGxH,cAAC,KAAG,UACF,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAM,CACLE,aAAa,EACb5K,MAAOkB,EACP2J,QAASxK,EACT4B,UAAU,eACV6I,gBAAgB,SAChBjH,SAAWoB,GAAQ8E,EAAQ9E,UAKjC,eAAC,KAAG,WACF,eAAC,IAAG,CAAChD,UAAU,YAAYwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC9C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,yBAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAAS+E,EAAoB9E,SAAWc,GAAMiE,EAAsBjE,EAAEO,OAAOtB,cAEvI,eAAC,IAAG,CAAC3B,UAAU,aAAawC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC/C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,4BAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAASiF,EAAwBhF,SAAWc,GAAMmE,EAA0BnE,EAAEO,OAAOtB,cAE/I,eAAC,IAAG,CAAC3B,UAAU,aAAawC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC/C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,sBAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAASmF,EAAkBlF,SAAWc,GAAMqE,EAAoBrE,EAAEO,OAAOtB,iBAGrI,cAAC,KAAG,UAEA+E,GACA,qCACE,eAAC,IAAG,CAAC1G,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,iDAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOiI,EAAepE,SAAWc,GAAMgF,EAAiBhF,EAAEO,OAAOlF,OAAQ2K,YAAY,0DAE5H,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,oEAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOkI,EAAUrE,SAAWc,GAAMiF,EAAYjF,EAAEO,OAAOlF,OAAQ2K,YAAY,sFAKxH,eAAC,KAAG,WAEA9B,GACA,qCACE,eAAC,IAAG,CAAC5G,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,0DAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOmI,EAAuBtE,SAAWc,GAAMkF,EAAyBlF,EAAEO,OAAOlF,OAAQ2K,YAAY,8DAE5I,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,6EAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOoI,EAAmBvE,SAAWc,GAAMmF,EAAqBnF,EAAEO,OAAOlF,OAAQ2K,YAAY,mFAKtI5B,GACA,eAAC,IAAG,CAAC9G,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,eAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,UAAC,uBACxBtB,EAAU,OAEjC,cAAC,IAAK,CAACzF,KAAK,SAAStB,GAAG,aAAarC,MAAQ,GAAEoJ,IAAavF,SAAWc,GAAM0E,EAAa1E,EAAEO,OAAOlF,OAAQ2K,YAAY,iCAI7H,eAAC,KAAG,WACF,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,UAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOgI,EAAOnE,SAAWc,GAAM2E,EAAS3E,EAAEO,OAAOlF,OAAQ2K,YAAY,gCAI5G,eAAC,IAAG,CAAC1I,UAAU,sCAAsCwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,UAC1E,cAAC,IAAK,CAACC,IAAI,aAAY,SAAC,YAGxB,gCACE,cAAC,IAAM,CAAC/G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IAvJ9C,MAC5B,IAAI4I,EAAUtB,EACdsB,EAAU,IAAIA,GACdA,EAAQC,KAAK,CAAE9G,QAAS,KACxBwF,EAAc,IAAIqB,GAAS,EAmJqDE,GAAwB,SAAC,MAG/F,cAAC,IAAM,CAACtH,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,SAASrC,QAAS,IAlJ1C,MAC/B,IAAI4I,EAAUtB,EACdsB,EAAU,IAAIA,GACVA,EAAQzJ,OAAS,IACnByJ,EAAQG,MACRxB,EAAc,IAAIqB,IACpB,EA4I+EI,GAA2B,SAAC,YAKrG,cAAC,KAAG,CAAClJ,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAGzChB,GAAcA,EAAWnI,OAAS,GAAKmI,EAAWW,KAAI,CAACC,EAAIe,IAEvD,cAAC,IAAG,CAAanJ,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,IAAG,SACpD,cAAC,IAAK,CAAC9G,KAAK,OAAOtB,GAAG,aAAarC,MAAS,OAAFqK,QAAE,IAAFA,OAAE,EAAFA,EAAInG,QAASL,SAAWc,GApJ5D,EAAC3E,EAAOoL,KAC9B,MAAML,EAAUM,IAAEC,UAAU7B,GAO5BsB,EAAQK,GAAOlH,QAAUlE,EACzB0J,EAAc,IAAIqB,GAAS,EA2I6DQ,CAAgB5G,EAAEO,OAAOlF,MAAOoL,GAAQT,YAAc,WAAUS,EAAQ,OADxIA,OAQlB,cAAC,IAAG,CAACnJ,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAC3C,cAAC,IAAM,CAAC9G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IApUzD,MAEf,GAAkB,KAAb,GAAET,IAEL,OADA2C,YAAW,oBACJ,EAGT,GAAmB,KAAd,GAAE2D,KAAkBA,GAAS,EAEhC,OADA3D,YAAW,sDACJ,EAMT,GAAI0E,IACqB,KAAlB,GAAEK,KAAsBA,GAAa,GAExC,OADA/E,YAAW,6DACJ,EAGX,GAAIwE,EAAwB,CAE1B,GAAIjE,SAASuD,GAAyB,EAEpC,OADA9D,YAAW,oEACJ,EAGT,GAAIO,SAASwD,GAAqB,EAEhC,OADA/D,YAAW,4EACJ,CAGX,CAEA,GAAIsE,EAAoB,CAEtB,GAAI/D,SAASqD,GAAiB,EAE5B,OADA5D,YAAW,iEACJ,EAET,GAAIO,SAASsD,GAAY,EAEvB,OADA7D,YAAW,yEACJ,CAGX,CAEA,GAAIO,SAASoD,GAAS,EAEpB,OADA3D,YAAW,sDACJ,EAGT,IAAKnD,GAAa,OAAJA,QAAI,IAAJA,MAAMlB,MAElB,OADAqE,YAAW,uCACJ,EAGT,MAAMN,EAAM,CACVrC,OACAsG,QACAuB,cACAE,aACAd,qBACAE,yBACAE,mBACA7H,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMlB,OAGV6I,IACF9E,EAAIoE,sBAAwBA,EAC5BpE,EAAIqE,kBAAoBA,GAItBO,IACF5E,EAAIkE,cAAgBA,EACpBlE,EAAImE,SAAWA,GAEba,IACFhF,EAAIqF,UAAYA,GAGhB1K,GADgB,IAAduK,EAEAuC,YAAmB,IACdzH,EACH1B,OAKFoJ,YAAgB1H,GAEpB,EAuO8E2H,GAAW,SAAC,qBAMlF,E,4CC1VZ,MAwEajK,EAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,cACNC,UAAU,EACVE,UAAW,cACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKwH,aAEpB,CACE7H,KAAM,qBACNC,UAAU,EACVE,UAAW,YACXkD,MAAO,MACP/C,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKqH,aAA+B,IAAlBrH,EAAIqH,UAAkB,QAAU,YAEpE,CACE1H,KAAM,QACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAMD,GAAQ,UAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiG,SAEzB,CACEtG,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,sBAAqBH,EAAIwC,MAAOtC,UAAU,sBAAqB,SACxF,cAAC,IAAI,CAACsB,KAAM,OAEd,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAASkN,YAAmB7J,EAAIwC,KAAK,EAC3C,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aCgFZsI,MAjMU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM0J,eACnCsD,EAAkBjN,aAAYC,GAASA,EAAM0J,aAAanH,QAGzD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA2CJjL,qBAAU,KAVRnC,EAASyN,YAAgB,CACvBjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMgB,GACvB,IA4CH,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC2C,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASyN,YAAgB,CACvBjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA6EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAlFZC,EAkFyBN,EAAEO,OAAOlF,MAjFrDX,EAAc4F,QACdvG,EACEyN,YAAgB,CACdjN,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAkFyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,oBAAoBD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAO9F,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EAGTQ,UAAU,kBACVqD,oBA3Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAC7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACEyN,YAAgB,CACdjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA2EIrF,KAAMyK,UAeH,ECvMf,MAwEarK,EAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,aACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,IAAG,aAAO,OAAHA,QAAG,IAAHA,GAAW,QAAR,EAAHA,EAAKqK,cAAM,WAAR,EAAH,EAAa1K,IAAI,GAEhC,CACEA,KAAM,eACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,IAAG,aAAO,OAAHA,QAAG,IAAHA,GAAc,QAAX,EAAHA,EAAKsK,iBAAS,WAAX,EAAH,EAAgB3K,IAAI,GAEnC,CACEA,KAAM,gBACNC,UAAU,EACVE,UAAW,eAEXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKuK,cAEpB,CACE5K,KAAM,iBACNC,UAAU,EACVE,UAAW,gBAEXG,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKwK,iBAAsC,eAArBxK,EAAIuK,aAAgC,IAAM,cAElF,CACE5K,KAAM,cACNC,UAAU,EACVE,UAAW,QAEXG,KAAMD,GAAQ,UAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKyK,aAQzB,CACE9K,KAAM,aACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKtB,WAAWsH,OAAO,iBAEhD,CACErG,KAAM,WACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKpB,SAASoH,OAAO,iBAE9C,CACErG,KAAM,UACNM,KAAMD,GACJ,mCAEE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,6BAA4BH,EAAIwC,MAAOtC,UAAU,sBAAqB,SAC/F,cAAC,IAAG,CAACsB,KAAM,W,aCyCNsI,MA7KU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM2N,aACnCC,EAAgB7N,aAAYC,GAASA,EAAM2N,WAAWpL,QAGrD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAGhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IA2CJ7L,qBAAU,KAVRnC,EAASiO,YAAc,CACrBzN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,IAGHuB,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAyCJ,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAACzK,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAzFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASiO,YAAc,CACrBzN,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA+EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,cAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,SAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OA/EZC,EA+EyBN,EAAEO,OAAOlF,MA9ErDX,EAAc4F,QACdvG,EACEiO,YAAc,CACZzN,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KA+EyC,cAMtD,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EACTQ,UAAU,kBACVqD,oBA7Ee,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAxEKA,KACvBtC,EACEiO,YAAc,CACZzN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EA8DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA4DIrF,KAAMqL,UAKH,E,QCvLA,SAASE,IAAqB,IAAD,IACxC,MAAM,GAAEvK,GAAO0E,eACR8F,EAAcC,GAAmB7N,mBAAS,CAAC,GAuBlD,OATA4B,qBAAU,KAEFwB,GAd+ByB,WACnC,IACI,MAAQzC,KAAM2C,SAAc+I,YAAiBvF,GACzCxD,EAAI3C,OACJE,QAAQC,IAAIwC,EAAK,WACjB8I,EAAgB9I,EAAI3C,MAE5B,CAAE,MAAOqG,GACLrD,YAAWqD,EACf,GAMIN,CAA+B/E,EACnC,GAED,CAACA,IAIA,eAAC,IAAI,WACD,eAAC,IAAU,WACP,eAAC,IAAI,CAACH,GAAG,oBAAoBD,UAAU,0BAA0BuC,MAAM,UAAS,UAC5E,cAAC,IAAW,IAAG,UAInB,cAAC,IAAS,CAAC6D,IAAI,KAAI,SAAC,4BAGxB,cAAC,IAAQ,UACL,cAAC,KAAG,UACA,8BACI,uBAAO3F,MAAM,QAAO,SAChB,kCACI,+BACI,6BAAI,eACJ,6BAAiB,OAAZmK,QAAY,IAAZA,GAAoB,QAAR,EAAZA,EAAcT,cAAM,WAAR,EAAZ,EAAsB1K,UAE/B,+BACI,6BAAI,iBACJ,6BAAiB,OAAZmL,QAAY,IAAZA,GAAuB,QAAX,EAAZA,EAAcR,iBAAS,WAAX,EAAZ,EAAyB3K,UAElC,+BACI,6BAAI,kBACJ,6BAAiB,OAAZmL,QAAY,IAAZA,OAAY,EAAZA,EAAcP,kBAEvB,+BACI,6BAAI,mBACJ,6BAAiB,OAAZO,QAAY,IAAZA,OAAY,EAAZA,EAAcN,mBAEvB,+BACI,6BAAI,eACJ,6BAAiB,OAAZM,QAAY,IAAZA,OAAY,EAAZA,EAAcL,eAEvB,+BACI,6BAAI,kBACJ,6BAAiB,OAAZK,QAAY,IAAZA,OAAY,EAAZA,EAAc7E,WAEvB,+BACI,6BAAI,mBACJ,6BAAKH,IAAmB,OAAZgF,QAAY,IAAZA,OAAY,EAAZA,EAAcpM,WAAWsH,OAAO,mBAEhD,+BACI,6BAAI,iBACJ,6BAAKF,IAAmB,OAAZgF,QAAY,IAAZA,OAAY,EAAZA,EAAcpM,WAAWsH,OAAO,gCAShF,C,aCvEA,MAwEatG,EAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,cACNC,UAAU,EACVE,UAAW,cACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKwH,aAEpB,CACE7H,KAAM,gBACNC,UAAU,EACVE,UAAW,YACXkD,MAAO,MACP/C,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiL,0BAEvB,CACEtL,KAAM,eACNC,UAAU,EACVE,UAAW,eACXkD,MAAO,MACP/C,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKqG,qBAAgD,KAAxB,OAAHrG,QAAG,IAAHA,OAAG,EAAHA,EAAKqG,mBAA0B,MAAQ,UAEnF,CACE1G,KAAM,QACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAMD,GAAQ,UAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiG,SAEzB,CACEtG,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,oCAAmCH,EAAIwC,MAAOtC,UAAU,sBAAqB,SACtG,cAAC,IAAI,CAACsB,KAAM,OAEd,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAASkN,YAAmB7J,EAAIwC,KAAK,EAC3C,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aCyEZ0J,MAjMsB,KAEnC,MAAMvO,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM0J,eACnCsD,EAAkBjN,aAAYC,GAASA,EAAM0J,aAAanH,QAGzD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA2CJjL,qBAAU,KAVRnC,EAASyN,YAAgB,CACvBjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMgB,GACvB,IA4CH,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC2C,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASyN,YAAgB,CACvBjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA6EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAlFZC,EAkFyBN,EAAEO,OAAOlF,MAjFrDX,EAAc4F,QACdvG,EACEyN,YAAgB,CACdjN,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAkFyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,kCAAkCD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAO5G,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EAGTQ,UAAU,kBACVqD,oBA3Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAC7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACEyN,YAAgB,CACdjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA2EIrF,KAAMyK,UAeH,ECnEAoB,OA9IsB,KACnC,MAAMxO,EAAWC,eACX,GAAE0D,GAAO0E,cACTwB,EAAkB1J,aAAYC,GAASA,EAAM0J,aAAaC,wBACzDA,EAAsBC,GAA2BzJ,mBAAS,CAAC,IAC3DgK,EAAWC,GAAgBjK,oBAAS,IACpCyC,EAAMyH,GAAWlK,mBAAS,KAC1BmK,EAAWC,GAAgBpK,mBAAS,IACpC+I,EAAOsB,GAAYrK,mBAAS,IAC5BsK,EAAaC,GAAkBvK,mBAAS,KACxCwK,EAAYC,GAAiBzK,mBAAS,CAAC,CAAEiF,QAAS,OAClD8I,EAAwBG,GAA6BlO,mBAAS,IAC9DmJ,EAAmB0B,GAAwB7K,mBAAS,GA4C3D4B,qBAAU,KACJ0H,GAAmBA,EAAgB7G,MAAQuH,GAC7CE,EAAuB,OAAfZ,QAAe,IAAfA,KAAiB7G,KAAsB,OAAf6G,QAAe,IAAfA,OAAe,EAAfA,EAAiB7G,KAAO,IACxD8H,EAA8B,OAAfjB,QAAe,IAAfA,KAAiBgB,YAA6B,OAAfhB,QAAe,IAAfA,OAAe,EAAfA,EAAiBgB,YAAc,IAC7ED,EAAwB,OAAff,QAAe,IAAfA,KAAiBP,MAAuB,OAAfO,QAAe,IAAfA,OAAe,EAAfA,EAAiBP,MAAQ,IAC3D8B,EAAoC,OAAfvB,QAAe,IAAfA,KAAiBH,kBAAmC,OAAfG,QAAe,IAAfA,OAAe,EAAfA,EAAiBH,kBAAoB,IAC/F+E,EAAyC,OAAf5E,QAAe,IAAfA,KAAiByE,uBAAwC,OAAfzE,QAAe,IAAfA,OAAe,EAAfA,EAAiByE,uBAAyB,MAE9G7D,EAAQ,IACRK,EAAe,IACfF,EAAS,IACTQ,EAAqB,GACrBqD,EAA0B,IAC5B,GAEC,CAAC5E,EAAiBU,IAiBrB,OAVApI,qBAAU,KAEJwB,IALJ3D,EAAS6L,YAAoBlI,IAO3B6G,GAAa,GACf,GAEC,CAAC7G,IAIF,eAAC,IAAI,WACH,eAAC,IAAU,WACT,eAAC,IAAI,CAACH,GAAG,mCAAmCD,UAAU,0BAA0BuC,MAAM,UAAS,UAC7F,cAAC,IAAW,IAAG,UAEjB,eAAC,IAAS,CAAC6D,IAAI,KAAI,UAAEY,EAAY,OAAS,MAAM,oCAGlD,cAAC,IAAQ,UACP,eAAC,KAAG,WACF,eAAC,IAAG,CAAChH,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAO0B,EAAMmC,SAAWc,GAAMwE,EAAQxE,EAAEO,OAAOlF,OAAQ2K,YAAY,+BAExG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,gBAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOuJ,EAAa1F,SAAWc,GAAM6E,EAAe7E,EAAEO,OAAOlF,OAAQ2K,YAAY,yBAGtH,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,0DAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOgN,EAAwBnJ,SAAWc,GAAMwI,EAA0BxI,EAAEO,OAAOlF,OAAQ2K,YAAY,0DAE9I,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,6EAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOoI,EAAmBvE,SAAWc,GAAMmF,EAAqBnF,EAAEO,OAAOlF,OAAQ2K,YAAY,iFAEpI,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,UAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOgI,EAAOnE,SAAWc,GAAM2E,EAAS3E,EAAEO,OAAOlF,OAAQ2K,YAAY,gCAI5G,cAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAC3C,cAAC,IAAM,CAAC9G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IApHtD,KAAb,GAAET,KACL2C,WAAW,oBACJ,GAGU,KAAd,GAAE2D,KAAkBA,GAAS,GAChC3D,WAAW,sDACJ,GAGgB,KAApB,GAAEkF,KACLlF,WAAW,2BACJ,QAKP3F,GADgB,IAAduK,EAEAuC,YAAmB,CACjB9J,OACAsG,QACAuB,cACAnB,oBACA4E,uBAAwBA,GAAkD,EAC1E3K,OAKFoJ,YAAgB,CACd/J,OACAsG,QACAuB,cACAnB,oBACA4E,uBAAwBA,GAAkD,KAkFS,SAAC,oBAMlF,E,UC9HZ,MAwEavL,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,UACNC,UAAU,EACVE,UAAW,OACXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,YACNC,UAAU,EACVE,UAAW,QACXG,KAAMD,IAAG,aAAO,OAAHA,QAAG,IAAHA,GAAW,QAAR,EAAHA,EAAKqK,cAAM,WAAR,EAAH,EAAa1K,IAAI,GAEhC,CACEA,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,sBAAqBH,EAAIwC,MAAOtC,UAAU,sBAAqB,SACxF,cAAC,IAAG,CAACsB,KAAM,OAEf,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC7BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAAS0O,aAAarL,EAAIwC,KAAK,EACrC,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aC2EZ8J,OA9KI,KAEjB,MAAM3O,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAMwO,UACnCZ,EAAgB7N,aAAYC,GAASA,EAAMwO,QAAQjM,QAGlD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IA2CJ7L,qBAAU,KAVRnC,EAAS6O,aAAW,CAClBrO,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,IAGHuB,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAyCJ,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAACzK,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAzFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAAS6O,aAAW,CAClBrO,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA+EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,cAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,SAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OA/EZC,EA+EyBN,EAAEO,OAAOlF,MA9ErDX,EAAc4F,QACdvG,EACE6O,aAAW,CACTrO,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KA+EyC,cAMtD,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GACTQ,UAAU,kBACVqD,oBA7Ee,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAxEKA,KACvBtC,EACE6O,aAAW,CACTrO,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EA8DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA4DIrF,KAAM,IAAIqL,WAKP,EC9KAY,OARC,IAEZ,qBAAKrL,UAAU,gBAAe,SAC5B,cAAC,GAAK,M,SCTG,SAASuL,KACpB,MAAM,GAAEnL,GAAO0E,cACT0G,EAAS1G,eACR0C,EAAYC,GAAiBzK,mBAAS,KACtCiF,EAASwJ,GAAczO,mBAAS,KAChC0O,EAAWC,GAAgB3O,mBAAS,CAAC,GACtCmN,EAASvN,aAAYC,GAASA,EAAM+O,KAAKC,SAAS1B,SAGlD2B,EAAuBjK,UACzB,IACI,MAAQzC,KAAM2C,SAAcgK,aAAsBP,EAAOpL,IACrD2B,EAAI3C,OACJqI,EAAc1F,EAAI3C,KAAK4M,kBACvBL,EAAa5J,EAAI3C,MAEzB,CAAE,MAAOqG,GACLrD,YAAWqD,EACf,GAIJ7G,qBAAU,KACNkN,GAAsB,GACvB,CAACN,IAGJ,MAAMS,EAAiBC,mBACjBC,EAAuBD,mBAoB7B,OACI,qBAAKlM,UAAU,YAAW,SAEtB,sBAAKA,UAAU,WAAU,UACrB,qBAAIA,UAAU,QAAO,UAAC,gBAAuB,OAAT0L,QAAS,IAATA,OAAS,EAATA,EAAWjM,QAE/C,sBAAKO,UAAU,SAASoM,IAAKD,EAAsBtJ,MAAO,CAAEwJ,OAAQ,4BAA6BC,QAAS,GAAIC,aAAc,GAAIC,UAAW,OAAQC,UAAW,OAAQC,UAAW,OAAQC,QAAS,OAAQC,WAAY,UAAW,UAC5NpF,GAAcA,EAAWnI,OAAS,GAAKmI,EAAWW,KAAI,CAACC,EAAIe,KACxD,OACI,sBAAKtG,MAAO,CAAEwJ,OAAQ,kBAAmBE,aAAc,EAAGzJ,MAAO,MAAO+J,YAAc,OAAFzE,QAAE,IAAFA,OAAE,EAAFA,EAAI+B,UAAWA,EAAS,OAAS,MAAO2C,aAAc,GAAIC,iBAAmB,OAAF3E,QAAE,IAAFA,OAAE,EAAFA,EAAI+B,UAAWA,EAAS,UAAY,OAAQmC,QAAS,IAAK,UACrN,qBAAKzJ,MAAO,CAAEmK,SAAU,GAAIC,WAAY,MAAO1K,MAAO,SAAU,SAC3D6F,EAAGnG,UAER,sBAAKjC,UAAU,0CAAyC,UACpD,sBAAKA,UAAU,SAAS6C,MAAO,CAAEmK,SAAU,GAAIzK,MAAO,SAAU,UAAC,OACvD,OAAF6F,QAAE,IAAFA,OAAE,EAAFA,EAAI+B,UAAWA,EAAS,MAAQ,sBAExC,qBAAKnK,UAAU,mCAAmC6C,MAAO,CAAEmK,SAAU,GAAIzK,MAAO,SAAU,UC1ElGxE,ED2E2B,OAAFqK,QAAE,IAAFA,OAAE,EAAFA,EAAIvC,UC3EtBC,ED2EiC,aC1E5DA,EACK,GAAEA,IAASoH,gBAAkB,aAAaA,cACnC,GAAE,IAAIC,KAAKpP,GAAOqP,aAAa,IAAID,KAAKpP,GAAOsP,WAAa,KAAK,IAAIF,KAAKpP,GAAOuP,gBACjF,GAAExH,IAASoH,gBAAkB,aAAaA,cAC1C,GAAE,IAAIC,KAAKpP,GAAOqP,aAAa,IAAID,KAAKpP,GAAOsP,WAAa,KAAK,IAAIF,KAAKpP,GAAOuP,gBACjF,GAAExH,IAASoH,gBAAkB,aAAaA,cAC1C,GAAE,IAAIC,KAAKpP,GAAOsP,WAAa,KAAK,IAAIF,KAAKpP,GAAOqP,aAAa,IAAID,KAAKpP,GAAOuP,gBACjF,GAAExH,IAASoH,gBAAkB,aAAaA,cAC1C,GAAE,IAAIC,KAAKpP,GAAOsP,WAAa,KAAK,IAAIF,KAAKpP,GAAOqP,aAAa,IAAID,KAAKpP,GAAOuP,qBADtF,EAIC,GAAE,IAAIH,KAAKpP,GAAOqP,aAAa,IAAID,KAAKpP,GAAOsP,WAAa,KAAK,IAAIF,KAAKpP,GAAOuP,wBDsD0JnE,GClEhO,IAACpL,EAAO+H,CD8ED,IAGd,qBAAKsG,IAAKH,EAAgBpJ,MAAO,CAAE0K,UAAW,UAIlD,sBAAKvN,UAAU,0CAAyC,UACpD,0BAAUA,UAAU,sBAAsB6C,MAAO,CAAEC,MAAO,OAASlB,SAAWc,GAAM+I,EAAW/I,EAAEO,OAAOlF,OAAQA,MAAOkE,EAASxC,KAAK,OAAOiC,KAAK,SACjJ,wBAAQxB,QAAS,IAhDR2B,WACrB,IACI,MAAMC,EAAM,CACRG,UACAuL,cAAehC,EAAOpL,GACtB+J,WAEI/K,KAAM2C,SAAc0L,aAAiB3L,GACzCC,EAAIE,UACJC,YAAaH,EAAIE,SACjBwJ,EAAW,IACXK,IAER,CAAE,MAAOrG,GACLrD,YAAWqD,EACf,GAiCmCiI,GAAoB1N,UAAU,iCAAiC6C,MAAO,CAAE8K,OAAQ,GAAI7K,MAAO,OAAQ,SAAC,wBAS/I,CE9EA,MAwEatD,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,aACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,IAAG,aAAO,OAAHA,QAAG,IAAHA,GAAW,QAAR,EAAHA,EAAKqK,cAAM,WAAR,EAAH,EAAa1K,IAAI,GAEhC,CACEA,KAAM,eACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,IAAG,aAAO,OAAHA,QAAG,IAAHA,GAAc,QAAX,EAAHA,EAAKsK,iBAAS,WAAX,EAAH,EAAgB3K,IAAI,GAEnC,CACEA,KAAM,UACNC,UAAU,EACVE,UAAW,eAEXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKmC,SAEpB,CACExC,KAAM,aACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKtB,WAAWsH,OAAO,iBAEhD,CACErG,KAAM,WACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAKpB,SAASoH,OAAO,kB,cCqEjC8D,OA7KU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM+Q,aACnCnD,EAAgB7N,aAAYC,GAASA,EAAM+Q,WAAWxO,QAGrD0K,EAASC,GAAc/M,mBAAS,KAGhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IA2CJ7L,qBAAU,KAVRnC,EAASoR,aAAc,CACrB5Q,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,IAGHuB,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAyCJ,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAACzK,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAzFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASoR,aAAc,CACrB5Q,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA+EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,cAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,SAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OA/EZC,EA+EyBN,EAAEO,OAAOlF,MA9ErDX,EAAc4F,QACdvG,EACEoR,aAAc,CACZ5Q,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KA+EyC,cAMtD,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GACTQ,UAAU,kBACVqD,oBA7Ee,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAxEKA,KACvBtC,EACEoR,aAAc,CACZ5Q,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EA8DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA4DIrF,KAAMqL,UAKH,EC3KAqD,OARO,IAElB,qBAAK9N,UAAU,gBAAe,SAC5B,cAAC,GAAK,MCPG,SAAS+N,KAAoB,IAAD,IACvC,MAAM,GAAE3N,GAAO0E,eACR8F,EAAcC,GAAmB7N,mBAAS,CAAC,GAuBlD,OATA4B,qBAAU,KAEFwB,GAd+ByB,WACnC,IACI,MAAQzC,KAAM2C,SAAc+I,YAAiBvF,GACzCxD,EAAI3C,OACJE,QAAQC,IAAIwC,EAAK,WACjB8I,EAAgB9I,EAAI3C,MAE5B,CAAE,MAAOqG,GACLrD,YAAWqD,EACf,GAMIN,CAA+B/E,EACnC,GAED,CAACA,IAIA,eAAC,IAAI,WACD,eAAC,IAAU,WACP,eAAC,IAAI,CAACH,GAAG,oBAAoBD,UAAU,0BAA0BuC,MAAM,UAAS,UAC5E,cAAC,IAAW,IAAG,UAInB,cAAC,IAAS,CAAC6D,IAAI,KAAI,SAAC,4BAGxB,cAAC,IAAQ,UACL,cAAC,KAAG,UACA,8BACI,uBAAO3F,MAAM,QAAO,SAChB,kCACI,+BACI,6BAAI,eACJ,6BAAiB,OAAZmK,QAAY,IAAZA,GAAoB,QAAR,EAAZA,EAAcT,cAAM,WAAR,EAAZ,EAAsB1K,UAE/B,+BACI,6BAAI,iBACJ,6BAAiB,OAAZmL,QAAY,IAAZA,GAAuB,QAAX,EAAZA,EAAcR,iBAAS,WAAX,EAAZ,EAAyB3K,UAElC,+BACI,6BAAI,kBACJ,6BAAiB,OAAZmL,QAAY,IAAZA,OAAY,EAAZA,EAAcP,kBAEvB,+BACI,6BAAI,mBACJ,6BAAiB,OAAZO,QAAY,IAAZA,OAAY,EAAZA,EAAcN,mBAEvB,+BACI,6BAAI,eACJ,6BAAiB,OAAZM,QAAY,IAAZA,OAAY,EAAZA,EAAcL,eAEvB,+BACI,6BAAI,kBACJ,6BAAiB,OAAZK,QAAY,IAAZA,OAAY,EAAZA,EAAc7E,WAEvB,+BACI,6BAAI,mBACJ,6BAAKH,IAAmB,OAAZgF,QAAY,IAAZA,OAAY,EAAZA,EAAcpM,WAAWsH,OAAO,mBAEhD,+BACI,6BAAI,iBACJ,6BAAKF,IAAmB,OAAZgF,QAAY,IAAZA,OAAY,EAAZA,EAAcpM,WAAWsH,OAAO,gCAShF,C,qBClFO,MAAMoE,GAAkB8D,aAAiB,gCAAgCnM,UAC9E,IAAI0D,EAAS,GACTiG,IACEA,EAAO1M,IACTyG,EAAS,GAAEA,OAAWiG,EAAO1M,KAE3B0M,EAAOxM,UACTuG,EAAS,GAAEA,aAAiBiG,EAAOxM,WAEjCwM,EAAOzM,OACTwG,EAAS,GAAEA,UAAciG,EAAOzM,QAE9ByM,EAAOtM,SACTqG,EAAS,GAAEA,YAAgBiG,EAAOtM,WAGtC,MAAM+O,QAAiBC,aAAsC3I,GAC7D,MAAO,CACLiG,SACApM,KAAM6O,EAAS7O,KAAKA,KACpB+O,kBAAmBF,EAAS7O,KAAK+O,kBAClC,IAEUC,GAAgCJ,aAAiB,8CAA8CnM,UAC1G,IAAI0D,EAAS,GACTiG,IACEA,EAAO1M,IACTyG,EAAS,GAAEA,OAAWiG,EAAO1M,KAE3B0M,EAAOxM,UACTuG,EAAS,GAAEA,aAAiBiG,EAAOxM,WAEjCwM,EAAOzM,OACTwG,EAAS,GAAEA,UAAciG,EAAOzM,QAE9ByM,EAAOtM,SACTqG,EAAS,GAAEA,YAAgBiG,EAAOtM,WAGtC,MAAM+O,OpBnCyCpM,OAAO0D,EAAOnF,IACpDgF,IAAcC,IAAK,GAAEV,uCAA+CvE,KAAMmF,KoBkC5D8I,CAAkC9I,EAAOiG,EAAOpL,IAEvE,OADAd,QAAQC,IAAI0O,EAAS7O,KAAKA,KAAM,sBACzB,CACLoM,SACApM,KAAM6O,EAAS7O,KAAKA,KACpB+O,kBAAmBF,EAAS7O,KAAK+O,kBAClC,IAGgCH,aAAiB,oCAAoCnM,UACtF,IACE,MAAMoM,QAAiBK,aAAWlO,GAElC,OADA8B,YAAa+L,EAAS7O,KAAK6C,SACpBgM,EAAS7O,KAAKA,IACvB,CAAE,MAAO+C,GAEP,OADAC,YAAWD,GACJA,CACT,KAG6B6L,aAAiB,gCAAgCnM,MAAO0M,EAAS,KAAmB,IAAlB,SAAE9R,GAAU,EAE3G,IACE,MAAMsF,QAAYyM,aAAmBD,GAMrC,OALIxM,EAAI3C,OACN8C,YAAaH,EAAI3C,KAAK6C,eAChBxF,EAASyN,SAGVnI,EAAI3C,KAAKqP,SAAU1M,EAAI3C,KAAKqP,OACrC,CAAE,MAAOtM,GAEP,OADAC,YAAWD,GACJA,CACT,KAIgC6L,aAAiB,mCAAmCnM,MAAO0M,EAAS,KAAmB,IAAlB,SAAE9R,GAAU,EAEjH,IACE,MAAMsF,QAAY2M,aAAsBH,EAAUA,EAASnO,IAM3D,OALI2B,EAAI3C,KAAKqP,UACXvM,YAAaH,EAAI3C,KAAK6C,eAChBxF,EAASyN,SAGVnI,EAAI3C,KAAKqP,SAAU1M,EAAI3C,KAAKqP,OACrC,CAAE,MAAOtM,GAEP,OADAC,YAAWD,GACJA,CACT,KAIgC6L,aAAiB,mCAAmCnM,MAAOzB,EAAG,KAAmB,IAAlB,SAAE3D,GAAU,EAC3G,IACE,MAAMsF,QAAY4M,aAAsBvO,GAKxC,OAJI2B,EAAI3C,KAAKqP,UACXvM,YAAaH,EAAI3C,KAAK6C,eAChBxF,EAASyN,OAEV9J,CACT,CAAE,MAAO+B,GAEP,OADAC,YAAWD,GACJA,CACT,KAG+ByM,aAAY,CAC3CnP,KAAM,eACNoP,aAAc,CACZzP,KAAM,GACNoM,OAAQ,CAAC,EACTvB,QAAS,GACTzD,qBAAsB,KACtBiI,SAAS,GAEXK,SAAU,CAEV,EACAC,cAAeC,IACbA,EACGC,QAAQ/E,GAAgBgF,WAAW,CAACrS,EAAOsS,KAC1CtS,EAAMuC,KAAO+P,EAAOC,QAAQhQ,KAC5BvC,EAAM2O,OAAS2D,EAAOC,QAAQ5D,OAC9B3O,EAAM6G,MAAQyL,EAAOC,QAAQjB,iBAAiB,IAE/Cc,QAAQb,GAA8Bc,WAAW,CAACrS,EAAOsS,KACxDtS,EAAMuC,KAAO+P,EAAOC,QAAQhQ,KAC5BvC,EAAM2O,OAAS2D,EAAOC,QAAQ5D,OAC9B3O,EAAM6G,MAAQyL,EAAOC,QAAQjB,iBAAiB,GAC9C,IAIgC,QC3HxC,MAwEa3O,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QAEXG,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OAEXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,cACNC,UAAU,EACVE,UAAW,cAEXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKwH,aAEpB,CACE7H,KAAM,qBACNC,UAAU,EACVE,UAAW,YAEXG,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKqH,aAA+B,IAAlBrH,EAAIqH,UAAkB,QAAU,YAEpE,CACE1H,KAAM,mBACNC,UAAU,EACVE,UAAW,aAEXG,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKuP,cAEvB,CACE5P,KAAM,QACNC,UAAU,EACVE,UAAW,QAEXG,KAAMD,GAAQ,UAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiG,UCuFZ6D,OAjMU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM0J,eACnCsD,EAAkBjN,aAAYC,GAASA,EAAM0J,aAAanH,QAGzD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA2CJjL,qBAAU,KAVRnC,EAASyN,GAAgB,CACvBjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMgB,GACvB,IA4CH,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC2C,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASyN,GAAgB,CACvBjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA6EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,cAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,SAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAlFZC,EAkFyBN,EAAEO,OAAOlF,MAjFrDX,EAAc4F,QACdvG,EACEyN,GAAgB,CACdjN,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAkFyC,cAYtD,cAAC,IAAS,CACRE,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GAGTQ,UAAU,kBACVqD,oBA3Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAC7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACEyN,GAAgB,CACdjN,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA2EIrF,KAAMyK,UAeH,EC/JAyF,OA1Ca,IAExB,qBAAKtP,UAAU,gBAAe,SAmC5B,cAAC,GAAK,MCiQGuP,OA5RY,KAEzB,MAAM9S,EAAWC,cACX8O,EAAS1G,cACTnI,EAAQC,aAAYC,GAASA,EAAM0J,eACnCsD,EAAkBjN,aAAYC,GAASA,EAAM0J,aAAanH,QAGzD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA8CJjL,qBAAU,KAXRnC,EAAS2R,GAA8B,CACrCnR,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,EACN+C,GAAIoL,EAAOpL,KAMyB,GACrC,IAIH,MAyCMZ,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QAEXG,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OAEXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,cACNC,UAAU,EACVE,UAAW,cAEXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKwH,aAEpB,CACE7H,KAAM,qBACNC,UAAU,EACVE,UAAW,YAEXG,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKqH,aAA+B,IAAlBrH,EAAIqH,UAAkB,QAAU,YAEpE,CACE1H,KAAM,mBACNC,UAAU,EACVE,UAAW,aAEXG,KAAMD,GAAQ,GAAK,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKuP,cAEvB,CACE5P,KAAM,QACNC,UAAU,EACVE,UAAW,QAEXG,KAAMD,GAAQ,UAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiG,SAEzB,CACEtG,KAAM,UACNM,KAAMD,GACJ,+BAwCN,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAACE,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAhLIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAAS2R,GAA8B,CACrCnR,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,EACNqB,GAAIoL,EAAOpL,MAEb1C,EAAeK,EAAM,EAqKL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAzKZC,EAyKyBN,EAAEO,OAAOlF,MAxKrDX,EAAc4F,QACdvG,EACE2R,GAA8B,CAC5BnR,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,EACN+C,GAAIoL,EAAOpL,MATI4C,KAyKyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,oBAAoBD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAO9F,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EAGTQ,UAAU,kBACVqD,oBAjLe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAC7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAtEKA,KACvBtC,EACE2R,GAA8B,CAC5BnR,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,EACtB7D,GAAIoL,EAAOpL,MAGf9C,EAAeyB,EAAKkF,SAAW,EAAE,EA2DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EAiKIrF,KAAMyK,UAeH,EC/Rf,MAwEarK,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,kBACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,IAAG,eAAQ,OAAHA,QAAG,IAAHA,GAA4B,QAAzB,EAAHA,EAAK0P,aAAanP,kBAAU,OAA5B,EAA8BZ,KAAU,OAAHK,QAAG,IAAHA,GAA4B,QAAzB,EAAHA,EAAK0P,aAAanP,kBAAU,WAAzB,EAAH,EAA8BZ,KAAOK,EAAIL,IAAI,GAElG,CACEA,KAAM,eACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,IAAG,aAAO,OAAHA,QAAG,IAAHA,GAAe,QAAZ,EAAHA,EAAK2P,kBAAU,WAAZ,EAAH,EAAiBhQ,IAAI,GAEpC,CACEA,KAAM,eACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,IAAG,eAAQ,OAAHA,QAAG,IAAHA,GAAuB,QAApB,EAAHA,EAAK4P,QAAQrP,kBAAU,OAAvB,EAAyBZ,KAAU,OAAHK,QAAG,IAAHA,GAAuB,QAApB,EAAHA,EAAK4P,QAAQrP,kBAAU,WAApB,EAAH,EAAyBZ,KAAOK,EAAIL,IAAI,GAExF,CACEA,KAAM,aACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,WAAWC,OAAO,kB,cCyGnC8D,OAzMU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM8S,QACnClF,EAAgB7N,aAAYC,GAASA,EAAM8S,MAAMvQ,QAGhD0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAGhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,KAClCwB,EAAWC,GAAgBzB,sBAC3B0B,EAASC,GAAc3B,qBAEpC4B,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IA2CJ7L,qBAAU,KAVRnC,EAASmT,aAAS,CAChB3S,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,IAGHuB,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAmDJ,OACE,cAAC,WAAQ,UACP,cAAC,IAAI,CAACzK,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,eAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,UACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAjGIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASmT,aAAS,CAChB3S,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EAuFL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,eAEjC,sBAAKzC,UAAU,4BAA2B,UACxC,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,WAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOS,EACPoD,SAAWc,GAAMjE,EAAaiE,EAAEO,OAAOlF,SAEzC,cAAC,IAAK,CACJqC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOW,EACPkD,SAAWc,GAAM/D,EAAW+D,EAAEO,OAAOlF,YAGzC,cAAC,IAAM,CAACwE,MAAM,UAAUrC,QAAS,KA5F5CzD,EACEmT,aAAS,CACP3S,OACAM,aACDiB,YACDE,YAuFqE,WAAC,cAI/D,cAAC,IAAG,CAAC8D,GAAG,IAAIxC,UAAU,kCAAiC,SACrD,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAWc,IAAMK,OAhGdC,EAgG2BN,EAAEO,OAAOlF,MA/FvDX,EAAc4F,QACdvG,EACEmT,aAAS,CACP3S,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAgG2C,cAMxD,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GACTQ,UAAU,kBACVqD,oBA9Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlFKA,KACvBtC,EACEmT,aAAS,CACP3S,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwEPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA6EIrF,KAAMqL,UAIH,ECxMAoF,OARG,IAEd,qBAAK7P,UAAU,gBAAe,SAC5B,cAAC,GAAK,M,UCqYGxD,OA3We,KAAO,IAAD,EAElC,MAAMC,EAAWC,cAGXmP,EAAWjP,aAAYC,GAASA,EAAMiT,oBACrChT,EAAcC,GAAmBC,mBAAS,CAAC,IAE3CC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,SACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,IACxCa,EAAaC,GAAkBd,mBAAS,CAAEe,MAAO,GAAIC,MAAO,iBAE5DC,EAAeC,GAAoBlB,mBAAS,CAAEe,MAAO,GAAIC,MAAO,gBAAiBG,OAAQ,KACzFC,EAAcC,GAAmBrB,mBAAS,KAC1CsB,EAAWC,GAAgBvB,oBAAS,IACpCwB,EAAWC,GAAgBzB,sBAC3B0B,EAASC,GAAc3B,qBAI9B4B,qBAAU,KAERnC,EACEsT,aAAsB,CACpB9S,OACAM,aACAuB,EAAG3B,EACH4B,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBoB,UAAU,IAGb,GAIA,CAAC1C,EAAkB,OAARoP,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUzM,YAAI,WAAN,EAAR,EAAgBC,OAAQpC,EAAMM,EAAYF,IAkJxDuB,qBAAU,KACRU,QAAQC,IAAIsM,EAAU,WAAW,GAChC,CAACA,IAGJ,MAAMrM,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,WACXC,SAAUC,GAAOA,EAAIL,KACrBM,KAAMD,GACJ,qBAAKE,UAAU,iDAAgD,SAE7D,sBAAKA,UAAU,qBAAoB,UACjC,cAAC,IAAI,CACHC,GAAK,GACLD,UAAU,oCACVE,QAAS,IAAMzD,EAAS0D,QAAQL,EAAIM,KAAK,SAEzC,sBAAMJ,UAAU,YAAW,SAAEF,EAAIL,SAEnC,uBAAOO,UAAU,QAAO,SAAEF,EAAIQ,cAqBtC,CACEb,KAAM,QACNE,SAAU,QACVD,UAAU,EACVE,UAAW,QACXC,SAAUC,GAAOA,EAAIkQ,MACrBjQ,KAAMD,GAAO,sBAAME,UAAU,kBAAiB,SAAEF,EAAIkQ,SAEtD,CACEvQ,KAAM,UACNE,SAAU,QACVD,UAAU,EACVE,UAAW,cACXC,SAAUC,GAAOA,EAAImQ,YACrBlQ,KAAMD,GAAO,sBAAME,UAAU,kBAAiB,SAAEF,EAAImQ,eAEtD,CACExQ,KAAM,UACNE,SAAU,QACVD,UAAU,EACVE,UAAW,UACXC,SAAUC,GAAOA,EAAIoQ,QACrBnQ,KAAMD,GAAO,sBAAME,UAAU,kBAAiB,SAAEF,EAAIoQ,WAEtD,CACEzQ,KAAM,UACNE,SAAU,QACVI,KAAMD,GACJ,mCAEE,eAAC,IAAM,CAACyC,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAAS0T,aAAsBrQ,EAAIwC,KAAK,EAC9C,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,YAO3B,OACE,cAAC,WAAQ,UACP,eAAC,IAAI,CAACtB,UAAU,kBAAiB,UAC/B,qBAAKA,UAAU,aAAY,SACzB,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,+BAA8B,SAClD,6BACE,4BAAG,4BAGP,eAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,UACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvOMc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GACfb,EACEsT,aAAsB,CACpB9S,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,EACNE,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BL,EAAeK,EAAM,EA0NP8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,eAEjC,sBAAKzC,UAAU,4BAA2B,UACxC,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,WAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOS,EACPoD,SAAWc,GAAMjE,EAAaiE,EAAEO,OAAOlF,SAEzC,cAAC,IAAK,CACJqC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOW,EACPkD,SAAWc,GAAM/D,EAAW+D,EAAEO,OAAOlF,YAGzC,cAAC,IAAM,CAACwE,MAAM,UAAUrC,QAAS,KApO3CzD,EACEsT,aAAsB,CACpB9S,OACAM,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBS,YACAE,YA2NkE,WAAC,cAI/D,cAAC,IAAG,CAAC8D,GAAG,IAAIxC,UAAU,6BAA4B,SAChD,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAWc,IAAMK,OAlQZC,EAkQyBN,EAAEO,OAAOlF,MAjQrDX,EAAc4F,QACdvG,EACEsT,aAAsB,CACpB9S,OACA6B,EAAGkE,EACHzF,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAVPiF,KAkQyC,cAUxD,8BACE,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACV3D,QAASA,EACT4D,kBAAgB,EAChBC,oBAnPe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAKoI,EAASnI,MAAQjG,IAEhD,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GA3EKA,KACvBtC,EACEsT,aAAsB,CACpB9S,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,EACtBhF,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BT,EAAeyB,EAAKkF,SAAW,EAAE,EA+DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EAmOIrF,KAAMyM,EAASzM,aAIZ,EC7XA0Q,OARU,IAErB,qBAAK9P,UAAU,gBAAe,SAC5B,cAAC,GAAK,M,UC+XGxD,OApWe,KAAO,IAAD,EAElC,MAAMC,EAAWC,cAGXmP,EAAWjP,aAAYC,GAASA,EAAMuT,eACrCtT,EAAcC,GAAmBC,mBAAS,CAAC,IAE3CC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,SACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,IACxCa,EAAaC,GAAkBd,mBAAS,CAAEe,MAAO,GAAIC,MAAO,iBAE5DC,EAAeC,GAAoBlB,mBAAS,CAAEe,MAAO,GAAIC,MAAO,gBAAiBG,OAAQ,KACzFC,EAAcC,GAAmBrB,mBAAS,KAC1CsB,EAAWC,GAAgBvB,oBAAS,IACpCwB,EAAWC,GAAgBzB,sBAC3B0B,EAASC,GAAc3B,qBAI9B4B,qBAAU,KAERnC,EACE4T,aAAoB,CAClBpT,OACAM,aACAuB,EAAG3B,EACH4B,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBoB,UAAU,IAGb,GAIA,CAAC1C,EAAkB,OAARoP,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUzM,YAAI,WAAN,EAAR,EAAgBC,OAAQpC,EAAMM,EAAYF,IAkJxDuB,qBAAU,KACRU,QAAQC,IAAIsM,EAAU,WAAW,GAChC,CAACA,IAGJ,MAAMrM,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVC,SAAU,QACVC,UAAW,WACXC,SAAUC,GAAOA,EAAIL,KACrBM,KAAMD,GACJ,qBAAKE,UAAU,iDAAgD,SAE7D,sBAAKA,UAAU,qBAAoB,UACjC,cAAC,IAAI,CACHC,GAAK,GACLD,UAAU,oCACVE,QAAS,IAAMzD,EAAS0D,QAAQL,EAAIM,KAAK,SAEzC,sBAAMJ,UAAU,YAAW,SAAEF,EAAIL,SAEnC,uBAAOO,UAAU,QAAO,SAAEF,EAAIQ,cAqBtC,CACEb,KAAM,QACNE,SAAU,QACVD,UAAU,EACVE,UAAW,QACXC,SAAUC,GAAOA,EAAIkQ,MACrBjQ,KAAMD,GAAO,sBAAME,UAAU,kBAAiB,SAAEF,EAAIkQ,SAEtD,CACEvQ,KAAM,WACNE,SAAU,QACVD,UAAU,EACVE,UAAW,WACXC,SAAUC,GAAOA,EAAImQ,YACrBlQ,KAAMD,GAAO,sBAAME,UAAU,kBAAiB,SAAEF,EAAIwQ,YAGtD,CACE7Q,KAAM,UACNE,SAAU,QACVI,KAAMD,GACJ,mCAEE,eAAC,IAAM,CAACyC,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAAS8T,aAAoBzQ,EAAIwC,KAAK,EAC5C,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,YAO3B,OACE,cAAC,WAAQ,UACP,eAAC,IAAI,CAACtB,UAAU,kBAAiB,UAC/B,qBAAKA,UAAU,aAAY,SACzB,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,+BAA8B,SAClD,6BACE,4BAAG,uBAGP,eAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,UACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAhOMc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GACfb,EACE4T,aAAoB,CAClBpT,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,EACNE,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BL,EAAeK,EAAM,EAmNP8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,eAEjC,sBAAKzC,UAAU,4BAA2B,UACxC,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,WAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOS,EACPoD,SAAWc,GAAMjE,EAAaiE,EAAEO,OAAOlF,SAEzC,cAAC,IAAK,CACJqC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOW,EACPkD,SAAWc,GAAM/D,EAAW+D,EAAEO,OAAOlF,YAGzC,cAAC,IAAM,CAACwE,MAAM,UAAUrC,QAAS,KA7N3CzD,EACE4T,aAAoB,CAClBpT,OACAM,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBS,YACAE,YAoNkE,WAAC,cAI/D,cAAC,IAAG,CAAC8D,GAAG,IAAIxC,UAAU,6BAA4B,SAChD,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAWc,IAAMK,OA3PZC,EA2PyBN,EAAEO,OAAOlF,MA1PrDX,EAAc4F,QACdvG,EACE4T,aAAoB,CAClBpT,OACA6B,EAAGkE,EACHzF,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAVPiF,KA2PyC,cAUxD,8BACE,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACV3D,QAASA,EACT4D,kBAAgB,EAChBC,oBA5Oe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAKoI,EAASnI,MAAQjG,IAEhD,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GA3EKA,KACvBtC,EACE4T,aAAoB,CAClBpT,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,EACtBhF,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BT,EAAeyB,EAAKkF,SAAW,EAAE,EA+DPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA4NIrF,KAAMyM,EAASzM,aAIZ,ECtXAoR,OARO,IAElB,qBAAKxQ,UAAU,gBAAe,SAC5B,cAAC,GAAK,M,UCIZ,MAwEaR,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,QACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAMD,GAAO,oBAAG2Q,KAAMC,YAAiB5Q,EAAI6Q,OAAQ1N,OAAO,SAAQ,UAAC,IAAC,qBAAK2N,IAAKF,YAAiB5Q,EAAI6Q,OAAQ9N,MAAO,CAAEC,MAAO,GAAI6K,OAAQ,IAAMkD,IAAI,GAAGC,OAAO,SAgB7J,CACErR,KAAM,aACNC,UAAU,EACVE,UAAW,aACXkD,MAAO,MACP/C,KAAMD,GAAO,IAAIqN,KAAKrN,EAAI+F,WAAWkL,gBAEvC,CACEtR,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,eAAcH,EAAIwC,MAAOtC,UAAU,sBAAqB,SACjF,cAAC,IAAI,CAACsB,KAAM,OAEd,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAASuU,aAAYlR,EAAIwC,KAAK,EACpC,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aCwEZsI,OAjMU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAMoU,QACnCpH,EAAkBjN,aAAYC,GAASA,EAAMoU,MAAM7R,QAGlD0K,EAASC,GAAc/M,mBAAS,KAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA2CJjL,qBAAU,KAVRnC,EAASyU,aAAS,CAChBjU,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMS,GAChB,IA4CH,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC2C,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASyU,aAAS,CAChBjU,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA6EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAlFZC,EAkFyBN,EAAEO,OAAOlF,MAjFrDX,EAAc4F,QACdvG,EACEyU,aAAS,CACPjU,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAkFyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,aAAaD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAOvF,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GAGTQ,UAAU,kBACVqD,oBA3Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAC7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACEyU,aAAS,CACPjU,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA2EIrF,KAAMyK,UAeH,EChKAoH,OA1CD,IAEV,qBAAKjR,UAAU,gBAAe,SAmC5B,cAAC,GAAK,M,sBCjDZ,MAAMmR,GAAU,CACZC,QAAS,CACL,CAAC,CAAEC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,SAAU,YAAa,SAAU,aAAc,cACxD,CAAC,CAAEC,OAAQ,OAAS,CAAEA,OAAQ,UAC9B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,UAAY,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OACtE,CAAC,OAAQ,QAAS,SAClB,CAAC,CAAEjP,MAAO,IAAM,CAAEkP,WAAY,KAC9B,CAAC,CAAEC,KAAM,KACT,CAAC,CAAEC,MAAO,KACV,CAAC,WAIHC,GAAU,CACZ,SACA,OAAQ,SAAU,YAAa,SAAU,aAAc,aACvD,OAAQ,SAAU,SAClB,OAAQ,QAAS,QACjB,SACA,QAAS,aACT,OAAQ,SAIG,SAASC,GAAY,GAA0B,IAA1B,aAAEC,EAAY,MAAE/T,GAAO,EACvD,MAAOgU,EAAYC,GAAiBhV,mBAASe,GAAgB,IAS7D,OARAa,qBAAU,KAEFoT,EADAjU,GAGc,GAClB,GACD,CAACA,IAGA,mCACI,cAAC,KAAU,CACPkU,MAAM,OACNlU,MAAOgU,EACPlP,MAAO,CAAE8K,OAAQ,KACjBuE,kBAAmB,CAAEvE,OAAQ,KAC7B/L,SAAWc,IAAQsP,EAActP,GAAIoP,EAAapP,EAAE,EACpDgG,YAAa,6BACbyI,QAASA,GACTS,QAASA,MAIzB,C,cCsHeO,OA9JC,KACd,MAAM1V,EAAWC,eACX,GAAE0D,GAAO0E,cACTsN,EAAUxV,aAAYC,GAASA,EAAMoU,MAAMoB,iBAC1C7L,EAAsBC,GAA2BzJ,mBAAS,CAAC,IAC3DgK,EAAWC,GAAgBjK,oBAAS,IACpCyC,EAAMyH,GAAWlK,mBAAS,KAC1BsV,EAAgBC,GAAqBvV,mBAAS,IAC9C+I,EAAOsB,GAAYrK,mBAAS,IAC5B2T,EAAO6B,GAAYxV,mBAAS,KAC5BsK,EAAaC,GAAkBvK,mBAAS,KACxCwK,EAAYC,GAAiBzK,mBAAS,CAAC,CAAEiF,QAAS,OAClDwQ,EAAoBC,GAAyB1V,mBAAS,GAgC7D4B,qBAAU,KACJwT,GAAWA,EAAQ3S,MAAQuH,GAC7BE,EAAe,OAAPkL,QAAO,IAAPA,KAAS3S,KAAc,OAAP2S,QAAO,IAAPA,OAAO,EAAPA,EAAS3S,KAAO,IACxC8H,EAAsB,OAAP6K,QAAO,IAAPA,KAAS9K,YAAqB,OAAP8K,QAAO,IAAPA,OAAO,EAAPA,EAAS9K,YAAc,IAC7DiL,EAAyB,OAAPH,QAAO,IAAPA,KAASE,eAAwB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,eAAiB,IACtEE,EAAgB,OAAPJ,QAAO,IAAPA,KAASzB,MAAe,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASzB,MAAQ,IAC3CtJ,EAAgB,OAAP+K,QAAO,IAAPA,KAASrM,MAAe,OAAPqM,QAAO,IAAPA,OAAO,EAAPA,EAASrM,MAAQ,IAC3C2M,EAA6B,OAAPN,QAAO,IAAPA,KAASK,mBAA4B,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASK,mBAAqB,IAClFhL,EAAqB,OAAP2K,QAAO,IAAPA,KAAS5K,WAAoB,OAAP4K,QAAO,IAAPA,OAAO,EAAPA,EAAS5K,WAAa,CAAC,CAAEvF,QAAS,QAEtEiF,EAAQ,IACRK,EAAe,IACfgL,EAAkB,IAClBlL,EAAS,IACTqL,EAAsB,IACtBjL,EAAc,IAChB,GAEC,CAAC2K,EAASpL,IAObpI,qBAAU,KAEJwB,IALJ3D,EAASkW,aAAavS,IAOpB6G,GAAa,GACf,GAEC,CAAC7G,IAiCJ,OACE,eAAC,IAAI,WACH,eAAC,IAAU,WACT,eAAC,IAAI,CAACH,GAAG,cAAcD,UAAU,0BAA0BuC,MAAM,UAAS,UACxE,cAAC,IAAW,IAAG,UAEjB,eAAC,IAAS,CAAC6D,IAAI,KAAI,UAAEY,EAAY,OAAS,MAAM,cAGlD,cAAC,IAAQ,UACP,eAAC,KAAG,WACF,eAAC,IAAG,CAAChH,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAO0B,EAAMmC,SAAWc,GAAMwE,EAAQxE,EAAEO,OAAOlF,OAAQ2K,YAAY,+BAExG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,UAC3C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,yCAG/C,8BAEIkI,EAAMiC,SAAS,UAAY,qBAAKhC,IAAKD,EAAO9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,KAAO+N,IAAI,GAAGC,OAAO,KAAQ,qBAAKF,IAAKF,YAAiBC,GAAQ9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,KAAO+N,IAAI,GAAGC,OAAO,OAG/L,cAAC+B,GAAA,EAAU,CAACC,aAAcN,OAG5B,cAAC,IAAG,CAACxS,UAAU,sCAAsCwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAC1E,cAAC,IAAK,CAACC,IAAI,aAAY,SAAC,cAK1B,cAAC,IAAG,CAACzI,UAAU,cAAcwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAClD,cAACqJ,GAAW,CAACC,aAAcvK,EAAgBxJ,MAAOuJ,MAGpD,cAAC,IAAG,CAACtH,UAAU,YAAYwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAChD,cAAC,IAAM,CAAC9G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IArItD,KAAb,GAAET,KACL2C,YAAW,oBACJ,GAGgB,KAApB,GAAEkF,KACLlF,YAAW,2BACJ,QAIP3F,GADgB,IAAduK,EAEA+L,aAAY,CACVtT,OACA6H,cACAqJ,QACAvQ,OAKF4S,aAAS,CACPvT,OACA6H,iBA8GmF,SAAC,oBAMlF,E,UClJZ,MAwEa9H,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,MACNC,UAAU,EACVE,UAAW,UACXkD,MAAO,MACP/C,KAAMD,GAAOA,EAAImT,KAgBnB,CACExT,KAAM,aACNC,UAAU,EACVE,UAAW,aACXkD,MAAO,MACP/C,KAAMD,GAAO,IAAIqN,KAAKrN,EAAI+F,WAAWkL,gBAEvC,CACEtR,KAAM,UACNM,KAAMD,GACJ,qCACE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,qBAAoBH,EAAIwC,MAAOtC,UAAU,sBAAqB,SACvF,cAAC,IAAI,CAACsB,KAAM,OAEd,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAASyW,aAAgBpT,EAAIwC,KAAK,EACxC,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aC4EZsI,OApMU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAMsW,QACnCtJ,EAAkBjN,aAAYC,GAASA,EAAMuW,UAAUhU,QAGtD0K,EAASC,GAAc/M,mBAAS,KAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA2CJjL,qBAAU,KAVRnC,EAAS4W,aAAa,CACpBpW,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMS,GAChB,IA+CH,OAJAuB,qBAAU,KACRU,QAAQC,IAAIsK,EAAgB,GAC3B,CAACA,IAGF,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC7J,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SA1FIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAAS4W,aAAa,CACpBpW,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EAgFL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OArFZC,EAqFyBN,EAAEO,OAAOlF,MApFrDX,EAAc4F,QACdvG,EACE4W,aAAa,CACXpW,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAqFyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,mBAAmBD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAO7F,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GAGTQ,UAAU,kBACVqD,oBA9Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,MAAU,OAAL9G,QAAK,IAALA,OAAK,EAALA,EAAO+G,OAAQjG,IAC9C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACE4W,aAAa,CACXpW,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA8EIrF,KAAMyK,UAeH,ECnKAuJ,OA1CG,IAEd,qBAAKpT,UAAU,gBAAe,SAmC5B,cAAC,GAAK,M,MCoFGsT,OA5HM,KACnB,MAAM7W,EAAWC,eACX,GAAE0D,GAAO0E,cACTsN,EAAUxV,aAAYC,GAASA,EAAMuW,UAAUG,qBAC9CvM,EAAWC,GAAgBjK,oBAAS,IACpCyC,EAAMyH,GAAWlK,mBAAS,KAC1BiW,EAAKO,GAAUxW,mBAAS,KACxBsK,EAAaC,GAAkBvK,mBAAS,KACxCwK,EAAYC,GAAiBzK,mBAAS,CAAC,CAAEiF,QAAS,MA0BzDrD,qBAAU,KACJwT,GAAWA,EAAQ3S,MAAQuH,GAC7BE,EAAe,OAAPkL,QAAO,IAAPA,KAAS3S,KAAc,OAAP2S,QAAO,IAAPA,OAAO,EAAPA,EAAS3S,KAAO,IACxC+T,EAAc,OAAPpB,QAAO,IAAPA,KAASa,IAAa,OAAPb,QAAO,IAAPA,OAAO,EAAPA,EAASa,IAAM,MAErC/L,EAAQ,IACRsM,EAAO,IACT,GAEC,CAACpB,EAASpL,IAObpI,qBAAU,KAEJwB,IALJ3D,EAASgX,aAAiBrT,IAOxB6G,GAAa,GACf,GAEC,CAAC7G,IAiCJ,OACE,eAAC,IAAI,WACH,eAAC,IAAU,WACT,eAAC,IAAI,CAACH,GAAG,oBAAoBD,UAAU,0BAA0BuC,MAAM,UAAS,UAC9E,cAAC,IAAW,IAAG,UAEjB,eAAC,IAAS,CAAC6D,IAAI,KAAI,UAAEY,EAAY,OAAS,MAAM,oBAGlD,eAAC,IAAQ,WAEP,eAAC,IAAG,CAAChH,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAO0B,EAAMmC,SAAWc,GAAMwE,EAAQxE,EAAEO,OAAOlF,OAAQ2K,YAAY,kBAExG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,cAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOkV,EAAKrR,SAAWc,GAAM8Q,EAAO9Q,EAAEO,OAAOlF,OAAQ2K,YAAY,iBAGtG,cAAC,IAAG,CAAC1I,UAAU,YAAYwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAChD,cAAC,IAAM,CAAC9G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IAzGvD,MAEf,GAAkB,KAAb,GAAET,IAEL,OADA2C,YAAW,oBACJ,EAIP3F,GADgB,IAAduK,EAEA0M,aAAgB,CACdjU,OACAwT,MACA7S,OAKFuT,aAAa,CACXlU,OACAwT,QAGN,EAmF4ExJ,GAAW,SAAC,kBAMhF,E,UCgUGmK,OAzbE,KACf,MAAMnX,EAAWC,eACX,GAAE0D,GAAO0E,cACT+O,EAAWjX,aAAYC,GAASA,EAAMiX,MAAMC,iBAC3CA,EAAeC,GAAoBhX,mBAAS,CAAC,IAE7C0J,EAAoBC,GAAyB3J,oBAAS,IACtD4J,EAAwBC,GAA6B7J,oBAAS,IAC9DiX,EAAuBC,GAA4BlX,oBAAS,IAC5DmX,EAAsBC,GAA2BpX,oBAAS,IAG1DgK,EAAWC,GAAgBjK,oBAAS,IACpCyC,EAAMyH,GAAWlK,mBAAS,KAC1B+I,EAAOsB,GAAYrK,mBAAS,IAC5BsK,EAAaC,GAAkBvK,mBAAS,KACxCwK,EAAYC,GAAiBzK,mBAAS,CAAC,CAAEiF,QAAS,OAClD+D,EAAe0B,GAAoB1K,mBAAS,IAC5CiJ,EAAU0B,GAAe3K,mBAAS,IAClCkJ,EAAuB0B,GAA4B5K,mBAAS,IAC5DmJ,EAAmB0B,GAAwB7K,mBAAS,IAEpDqX,EAAqBC,GAA0BtX,mBAAS,IACxDuX,EAAiBC,GAAsBxX,mBAAS,IAEhDyX,EAAsBC,GAA2B1X,mBAAS,IAC1D2X,EAAkBC,GAAuB5X,mBAAS,IAElDoB,EAAcC,GAAmBrB,mBAAS,KAC1CiC,EAAM6I,GAAW9K,mBAAS,IA6HjC4B,qBAAU,KACJiV,GAAYA,EAASpU,MAAQuH,GAC/BE,EAAgB,OAAR2M,QAAQ,IAARA,KAAUpU,KAAe,OAARoU,QAAQ,IAARA,OAAQ,EAARA,EAAUpU,KAAO,IAC9B,OAARoU,QAAQ,IAARA,KAAU5U,MACZ6I,EAAQ,CAAE9J,MAAe,OAAR6V,QAAQ,IAARA,OAAQ,EAARA,EAAU5U,KAAMlB,MAAe,OAAR8V,QAAQ,IAARA,OAAQ,EAARA,EAAU5U,OAEpDsI,EAAuB,OAARsM,QAAQ,IAARA,KAAUvM,YAAsB,OAARuM,QAAQ,IAARA,OAAQ,EAARA,EAAUvM,YAAc,IAC/DD,EAAiB,OAARwM,QAAQ,IAARA,KAAU9N,MAAgB,OAAR8N,QAAQ,IAARA,OAAQ,EAARA,EAAU9N,MAAQ,IAC7C4B,EAAoB,OAARkM,QAAQ,IAARA,KAAU5N,SAAmB,OAAR4N,QAAQ,IAARA,OAAQ,EAARA,EAAU5N,SAAW,IACtDyB,EAAyB,OAARmM,QAAQ,IAARA,KAAU7N,cAAwB,OAAR6N,QAAQ,IAARA,OAAQ,EAARA,EAAU7N,cAAgB,IACrEyB,EAAsB,OAARoM,QAAQ,IAARA,KAAUrM,WAAqB,OAARqM,QAAQ,IAARA,OAAQ,EAARA,EAAUrM,WAAa,CAAC,CAAEvF,QAAS,MACxE0E,EAA8B,OAARkN,QAAQ,IAARA,OAAQ,EAARA,EAAUnN,oBAChCG,EAAkC,OAARgN,QAAQ,IAARA,OAAQ,EAARA,EAAUjN,wBACpCgB,EAAiC,OAARiM,QAAQ,IAARA,OAAQ,EAARA,EAAU3N,uBACnC2B,EAA6B,OAARgM,QAAQ,IAARA,OAAQ,EAARA,EAAU1N,mBAE/B+N,EAAiC,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUI,uBACnCK,EAA+B,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,qBACjCG,EAA2B,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAUU,iBAE7BH,EAAgC,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUM,sBAClCO,EAAgC,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUY,sBAClCG,EAA4B,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUc,oBAE9BzN,EAAQ,IACRK,EAAe,IACfO,EAAQ,IACRT,EAAS,GACTM,EAAY,GACZhB,GAAsB,GACtBE,GAA0B,GAC1Be,EAAyB,GACzBC,EAAqB,GAErBqM,GAAyB,GACzBI,EAAuB,GACvBE,EAAmB,GAEnBJ,GAAwB,GACxBM,EAAwB,GACxBE,EAAoB,GAEpBlN,EAAiB,GACjBD,EAAc,CAAC,CAAExF,QAAS,MAC5B,GAEC,CAAC4R,EAAU7M,IAOdpI,qBAAU,KACR,MAAMmJ,EAAa,IAAIC,OAAOC,OAAOC,KAAgBC,KAAIC,IAChD,CAAEpK,MAAOoK,EAAIrK,MAAOqK,OACzBC,QAAQD,GAAoB,UAAbA,EAAGpK,OAAqBoK,EAAGpK,QAAUkK,IAAe2M,WAAazM,EAAGpK,QAAUkK,IAAe4M,WAChHzW,EAAgB,IAAI0J,IAEhB3H,IATJ3D,EAASsY,aAAa3U,IAWpB6G,GAAa,GACf,GAEC,CAAC7G,IAiCJ,OACE,eAAC,IAAI,WACH,eAAC,IAAU,WACT,eAAC,IAAI,CAACH,GAAG,cAAcD,UAAU,0BAA0BuC,MAAM,UAAS,UACxE,cAAC,IAAW,IAAG,UAEjB,eAAC,IAAS,CAAC6D,IAAI,KAAI,UAAEY,EAAY,OAAS,MAAM,eAGlD,eAAC,IAAQ,WACP,eAAC,KAAG,WACF,eAAC,IAAG,CAAChH,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAO0B,EAAMmC,SAAWc,GAAMwE,EAAQxE,EAAEO,OAAOlF,OAAQ2K,YAAY,wBAExG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,gBAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOuJ,EAAa1F,SAAWc,GAAM6E,EAAe7E,EAAEO,OAAOlF,OAAQ2K,YAAY,4BAGxH,cAAC,KAAG,UACF,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAM,CACLE,aAAa,EACb5K,MAAOkB,EACP2J,QAASxK,EACT4B,UAAU,eACV6I,gBAAgB,SAChBjH,SAAWoB,GAAQ8E,EAAQ9E,UAKjC,eAAC,KAAG,WACF,eAAC,IAAG,CAAChD,UAAU,YAAYwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC9C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,yBAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAAS+E,EAAoB9E,SAAWc,GAAMiE,EAAsBjE,EAAEO,OAAOtB,cAEvI,eAAC,IAAG,CAAC3B,UAAU,aAAawC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC/C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,4BAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAASiF,EAAwBhF,SAAWc,GAAMmE,EAA0BnE,EAAEO,OAAOtB,cAG/I,eAAC,IAAG,CAAC3B,UAAU,YAAYwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC9C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,0BAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAASsS,EAAuBrS,SAAWc,GAAMwR,EAAyBxR,EAAEO,OAAOtB,cAG7I,eAAC,IAAG,CAAC3B,UAAU,YAAYwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UAC9C,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,oBAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAW1B,UAAU,OAAOI,GAAG,aAAauB,QAASwS,EAAsBvS,SAAWc,GAAM0R,EAAwB1R,EAAEO,OAAOtB,iBAG7I,cAAC,KAAG,UAEA+E,GACA,qCACE,eAAC,IAAG,CAAC1G,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,0CAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOiI,EAAepE,SAAWc,GAAMgF,EAAiBhF,EAAEO,OAAOlF,OAAQ2K,YAAY,mDAE5H,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,6DAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOkI,EAAUrE,SAAWc,GAAMiF,EAAYjF,EAAEO,OAAOlF,OAAQ2K,YAAY,+EAKxH,cAAC,KAAG,UAEA9B,GACA,qCACE,eAAC,IAAG,CAAC5G,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,mDAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOmI,EAAuBtE,SAAWc,GAAMkF,EAAyBlF,EAAEO,OAAOlF,OAAQ2K,YAAY,uDAE5I,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,sEAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOoI,EAAmBvE,SAAWc,GAAMmF,EAAqBnF,EAAEO,OAAOlF,OAAQ2K,YAAY,8EAK1I,cAAC,KAAG,UAEAuL,GACA,qCACE,eAAC,IAAG,CAACjU,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,kDAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOsW,EAAqBzS,SAAWc,GAAM4R,EAAuB5R,EAAEO,OAAOlF,OAAQ2K,YAAY,2DAExI,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,mEAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOwW,EAAiB3S,SAAWc,GAAM8R,EAAmB9R,EAAEO,OAAOlF,OAAQ2K,YAAY,uFAKtI,cAAC,KAAG,UAEAyL,GACA,qCACE,eAAC,IAAG,CAACnU,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,4CAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAO0W,EAAsB7S,SAAWc,GAAMgS,EAAwBhS,EAAEO,OAAOlF,OAAQ2K,YAAY,qDAE1I,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,+DAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAO4W,EAAkB/S,SAAWc,GAAMkS,EAAoBlS,EAAEO,OAAOlF,OAAQ2K,YAAY,iFAMxI,eAAC,KAAG,WACF,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,UAG/C,cAAC,IAAK,CAAC/G,KAAK,SAAStB,GAAG,aAAarC,MAAOgI,EAAOnE,SAAWc,GAAM2E,EAAS3E,EAAEO,OAAOlF,OAAQ2K,YAAY,yBAI5G,eAAC,IAAG,CAAC1I,UAAU,sCAAsCwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,UAC1E,cAAC,IAAK,CAACC,IAAI,aAAY,SAAC,YAGxB,gCACE,cAAC,IAAM,CAAC/G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IA7LrD,MACrB,IAAI4I,EAAUtB,EACdsB,EAAU,IAAIA,GACdA,EAAQC,KAAK,CAAE9G,QAAS,KACxBwF,EAAc,IAAIqB,GAAS,EAyLqDkM,GAAiB,SAAC,MAGxF,cAAC,IAAM,CAACtT,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,SAASrC,QAAS,IAxLjD,MACxB,IAAI4I,EAAUtB,EACdsB,EAAU,IAAIA,GACVA,EAAQzJ,OAAS,IACnByJ,EAAQG,MACRxB,EAAc,IAAIqB,IACpB,EAkL+EmM,GAAoB,SAAC,YAK9F,cAAC,KAAG,CAACjV,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAGzChB,GAAcA,EAAWnI,OAAS,GAAKmI,EAAWW,KAAI,CAACC,EAAIe,IAEvD,cAAC,IAAG,CAAanJ,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,IAAG,SACpD,cAAC,IAAK,CAAC9G,KAAK,OAAOtB,GAAG,aAAarC,MAAS,OAAFqK,QAAE,IAAFA,OAAE,EAAFA,EAAInG,QAASL,SAAWc,GA1L5D,EAAC3E,EAAOoL,KAC9B,MAAML,EAAUM,IAAEC,UAAU7B,GAO5BsB,EAAQK,GAAOlH,QAAUlE,EACzB0J,EAAc,IAAIqB,GAAS,EAiL6DQ,CAAgB5G,EAAEO,OAAOlF,MAAOoL,GAAQT,YAAc,WAAUS,EAAQ,OADxIA,OAQlB,cAAC,IAAG,CAACnJ,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAC3C,cAAC,IAAM,CAAC9G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IAjZzD,MAEf,GAAkB,KAAb,GAAET,IAEL,OADA2C,YAAW,oBACJ,EAGT,GAAmB,KAAd,GAAE2D,KAAkBA,GAAS,EAEhC,OADA3D,YAAW,sDACJ,EAOT,GAAIwE,EAAwB,CAE1B,GAAIjE,SAASuD,GAAyB,EAEpC,OADA9D,YAAW,oEACJ,EAGT,GAAIO,SAASwD,GAAqB,EAEhC,OADA/D,YAAW,4EACJ,CAGX,CAEA,GAAIsE,EAAoB,CAEtB,GAAI/D,SAASqD,GAAiB,EAE5B,OADA5D,YAAW,iEACJ,EAET,GAAIO,SAASsD,GAAY,EAEvB,OADA7D,YAAW,yEACJ,CAGX,CAEA,GAAI6R,EAAuB,CAEzB,GAAItR,SAAS0R,GAAuB,EAElC,OADAjS,YAAW,kEACJ,EAET,GAAIO,SAAS4R,GAAmB,EAE9B,OADAnS,YAAW,0EACJ,CAEX,CAEA,GAAI+R,EAAsB,CAExB,GAAIxR,SAAS8R,GAAwB,EAEnC,OADArS,YAAW,6DACJ,EAET,GAAIO,SAASgS,GAAoB,EAE/B,OADAvS,YAAW,qEACJ,CAEX,CAEA,GAAIO,SAASoD,GAAS,EAEpB,OADA3D,YAAW,sDACJ,EAGT,IAAKnD,GAAa,OAAJA,QAAI,IAAJA,MAAMlB,MAElB,OADAqE,YAAW,gCACJ,EAGT,MAAMN,EAAM,CACVrC,OACAsG,QACAuB,cACAE,aACAd,qBACAE,yBACAqN,wBACAE,uBACAlV,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMlB,OAGV6I,IACF9E,EAAIoE,sBAAwBA,EAC5BpE,EAAIqE,kBAAoBA,GAItBO,IACF5E,EAAIkE,cAAgBA,EACpBlE,EAAImE,SAAWA,GAGbgO,IACFnS,EAAIuS,oBAAsBA,EAC1BvS,EAAIyS,gBAAkBA,GAGpBJ,IACFrS,EAAI2S,qBAAuBA,EAC3B3S,EAAI6S,iBAAmBA,GAIvBlY,GADgB,IAAduK,EAEAkO,aAAY,IACPpT,EACH1B,OAKF+U,aAASrT,GAEb,EAwR8E2H,GAAW,SAAC,qBAMlF,EC9aZ,MAwEajK,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,cACNC,UAAU,EACVE,UAAW,cACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKwH,aAEpB,CACE7H,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKb,MAEpB,CACEQ,KAAM,QACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAMD,GAAQ,UAAO,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKiG,SAEzB,CACEtG,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,eAAcH,EAAIwC,MAAOtC,UAAU,sBAAqB,SACjF,cAAC,IAAI,CAACsB,KAAM,OAEd,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAAS2Y,aAAYtV,EAAIwC,KAAK,EACpC,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aC+EZ+T,OAjMG,KAEhB,MAAM5Y,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAMiX,QACnCwB,EAAW1Y,aAAYC,GAASA,EAAMiX,MAAM1U,QAG3C0K,EAASC,IAFAnN,aAAYC,GAASA,EAAMmN,SAASC,UAEtBjN,mBAAS,MAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWuL,EAAS,GACnB,CAACA,IA2CJ1W,qBAAU,KAVRnC,EAAS8Y,aAAS,CAChBtY,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMS,GAChB,IA4CH,OACE,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC2C,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvFIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAAS8Y,aAAS,CAChBtY,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EA6EL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAlFZC,EAkFyBN,EAAEO,OAAOlF,MAjFrDX,EAAc4F,QACdvG,EACE8Y,aAAS,CACPtY,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAkFyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,aAAaD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAOvF,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GAGTQ,UAAU,kBACVqD,oBA3Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAC7C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACE8Y,aAAS,CACPtY,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA2EIrF,KAAMkW,UAeH,EC/JAD,OA1CG,IAEd,qBAAKrV,UAAU,gBAAe,SAmC5B,cAAC,GAAK,MCrCZ,MAwDaR,GAAU,CACrB,CACEC,KAAM,QACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAOA,EAAIQ,Q,wBCqNNkV,OAlQG,KAEhB,MAAM/Y,EAAWC,cACX+Y,EAAa7Y,aAAYC,GAASA,EAAM4Y,cAIvCxY,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,SACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,IACpCwB,EAAWC,GAAgBzB,sBAC3B0B,EAASC,GAAc3B,sBAC3Ba,EAAaC,GAAkBd,mBAAS,CAAEe,MAAO,GAAIC,MAAO,iBAE5DC,EAAeC,GAAoBlB,mBAAS,CAAEe,MAAO,GAAIC,MAAO,gBAAiBG,OAAQ,IAMhGS,qBAAU,KACRnC,EAASiZ,aAAe,CACtBzY,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,EACN4B,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,QACrB,GACF,IACHa,qBAAU,QAGP,CAACnC,EAAUQ,EAAMM,EAAYF,IA6HhC,OACE,cAAC,WAAQ,UACP,eAAC,IAAI,CAAC2C,UAAU,kBAAiB,UAC/B,qBAAKA,UAAU,kDAAiD,SAC9D,eAAC,KAAG,WACF,eAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,UACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAvHMc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GACfb,EACEiZ,aAAe,CACbzY,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,EACNE,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BL,EAAeK,EAAM,EA0GP8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,UAErB,uBAAO0E,QAAQ,gBAAe,SAAC,eAEjC,sBAAKzC,UAAU,4BAA2B,UACxC,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,WAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOS,EACPoD,SAAWc,GAAMjE,EAAaiE,EAAEO,OAAOlF,SAEzC,cAAC,IAAK,CACJqC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOW,EACPkD,SAAWc,GAAM/D,EAAW+D,EAAEO,OAAOlF,YAGzC,cAAC,IAAM,CAACwE,MAAM,UAAUrC,QAAS,KAvDxCzD,EACEiZ,aAAe,CACbzY,OACAM,aACAwB,KAAM1B,EACN2B,QAASvB,EACTe,YACAE,YAgD+D,WAAC,cAI/D,eAAC,IAAG,CACF8D,GAAG,IACHxC,UAAU,sJAAqJ,UAE/J,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAWc,IAAMK,OAnJZC,EAmJyBN,EAAEO,OAAOlF,MAlJrDX,EAAc4F,QACdvG,EACEiZ,aAAe,CACbzY,OACA6B,EAAGkE,EACHzF,aACAwB,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAVPiF,KAmJyC,OAIlD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAM,CACLA,UAAU,eACVuC,MAAM,UACNrC,QAjNM,IAAMtC,GAAgBD,GAiNL,SACxB,sBAOT,qBAAKqC,UAAU,kBAAiB,SAC9B,cAAC,IAAS,CACRkD,UAAQ,EACRyS,WAAS,EACTC,YAAU,EACVzS,YAAU,EACV0S,YAAU,EACVzS,kBAAgB,EAChB5D,QAASA,GACTsW,OAjHS,CAACC,EAAQC,KAC1B9Y,EAAQ8Y,GACRxY,EAAcuY,EAAOnW,WACrBnD,EACEiZ,aAAe,CACbzY,OACAM,aACAuB,EAAG3B,EACH4B,KAAM1B,EACN2B,QAASvB,EACTwB,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,QAEzB,EAqGOkY,SAAU,cAAC,KAAW,IACtBjW,UAAU,kBACVqD,oBA/Je,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAKgS,EAAW/R,MAAQjG,IAElD,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GA5DKA,KACvBtC,EACEiZ,aAAe,CACbzY,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,EACtBhF,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,SAG1BT,EAAeyB,EAAKkF,SAAW,EAAE,EAgDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA8IIrF,KAzIW,MACnB,MAAM8W,EAAU,CACdjX,KAAMpB,EAAYE,MAClBmB,OAAQjB,EAAcF,MACtBe,EAAG3B,GAGCgZ,EAAanO,OAAOoO,KAAKF,GAASG,MAAK,SAAUC,GACrD,OAAOJ,EAAQI,GAAGjX,OAAS,CAC7B,IAEA,OADAC,QAAQC,IAAIkW,EAAY,mBACpBA,EAAWA,WAAWpW,OAAS,EAC1BoW,EAAWA,YACRA,GAAgD,IAAjCA,EAAWA,WAAWpW,QAAgB8W,EACxD,GAEU,OAAVV,QAAU,IAAVA,GAAsB,QAAZ,EAAVA,EAAYA,kBAAU,WAAZ,EAAV,EAAwBc,MAAM,EAAG9Y,GADlC,IAAD,CAEP,EAwHc+Y,WAIH,ECxOAC,OA1CQ,IAEnB,qBAAKzW,UAAU,gBAAe,SAmC5B,cAAC,GAAK,M,UC+JG0W,OA5LE,IAA4C,IAA3C,KAAEC,EAAI,cAAEC,EAAa,aAAE9Z,GAAc,EAErCF,aAAYC,GAASA,EAAMga,aAAzC,MAKMrX,EAAU,CACZ,CACIC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,QACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEnC,CACI1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEtB,CACIA,KAAM,YACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,WAAWC,OAAO,kBAItD,OACI,mCACI,eAAC,IAAK,CACFgR,OAAQH,EACRI,SA/BgB,OAgChBC,OAAQJ,EACR5W,UAAU,iCAAgC,UAE1C,cAAC,IAAW,CAACA,UAAU,iBAAiBgX,OAAQJ,IAChD,eAAC,IAAS,CAAC5W,UAAU,YAAW,UAC5B,qBAAKA,UAAU,cAAa,SACxB,6BAAI,oBAGR,cAAC,IAAS,CACNkD,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EACTQ,UAAU,kBAEVZ,KAAMtC,WAqItB,ECgGO8M,OA9QU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM8S,QACnClF,EAAgB7N,aAAYC,GAASA,EAAM8S,MAAMvQ,QAGhDZ,EAAWyY,IAFFra,aAAYC,GAASA,EAAMmN,SAASC,UAElBjN,mBAAS,IAAImQ,QACxCzO,EAASC,GAAc3B,mBAAS,IAAImQ,OAEpCrD,EAASC,GAAc/M,mBAAS,KAGhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,KAExCF,EAAcC,GAAmBC,mBAAS,CAAC,IAC3CW,EAAaC,GAAkBZ,oBAAS,GAEzC4Z,EAAgB,IAAMhZ,GAAgBD,GAG5CiB,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IAGJ7L,qBAAU,KAER,MAAMsY,EAAW,IAAI/J,KACrB+J,EAASC,SAASD,EAAS7J,WAAa,GACxC4J,EAAaC,EAAS,GAErB,IAgDHtY,qBAAU,KAZRnC,EAASmT,aAAS,CAChB3S,OACAM,aACAuB,EAAG3B,EACHqB,YACAE,UACAM,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,CAACmB,EAAWE,IAGfE,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAIJ,MAuCMjL,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,aACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKsX,YAEpB,CACE3X,KAAM,OACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKb,MAEpB,CACEQ,KAAM,YACNC,UAAU,EACVE,UAAW,SACXG,KAAMD,GAAQ,GAAE8F,IAAU,OAAH9F,QAAG,IAAHA,OAAG,EAAHA,EAAK+F,WAAWC,OAAO,iBAGhD,CACErG,KAAM,aACNC,UAAU,EACVE,UAAW,QACXC,SAAUC,GAAO,cAAC,IAAM,CAACyC,MAAM,UAAUrC,QAAUwC,IAAQA,EAAEgH,iBAAkB3M,EAAgB+C,EAAIuX,UAAWT,GAAe,EAAI5W,UAAU,eAAc,SAGvJ,cAAC,IAAI,CAACsB,KAAM,SAOlB,OACE,eAAC,WAAQ,WAGP,cAAC,IAAI,CAACtB,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,eAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,UACnD,sBAAKA,UAAU,4BAA4B6C,MAAO,CAAEyU,OAAQ,oBAAqB,UAC/E,uBAAO7U,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAhJIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASmT,aAAS,CAChB3S,OACAM,aACAuB,EAAG3B,EACHqB,YACAE,UACAM,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EAoIL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,eAIjC,sBAAKzC,UAAU,kCAAiC,UAC9C,gCAAO,eACP,cAAC,IAAK,CACJA,UAAU,QACV0B,KAAK,OACL3D,MAAO6H,IAAOpH,GAAWsH,OAAO,cAChClE,SAAWc,GAAMuU,EAAavU,EAAEO,OAAOlF,OACvC8E,MAAO,CAAEC,MAAO,cAGpB,sBAAK9C,UAAU,kCAAiC,UAC9C,gCAAO,aACP,cAAC,IAAK,CACJA,UAAU,QACV0B,KAAK,OACL3D,MAAO6H,IAAOlH,GAASoH,OAAO,cAC9BlE,SAAWc,GAAM/D,EAAW+D,EAAEO,OAAOlF,OACrC8E,MAAO,CAAEC,MAAO,iBAItB,cAAC,IAAG,CACFN,GAAG,IACHxC,UAAU,kCAAiC,SAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAxJZC,EAwJyBN,EAAEO,OAAOlF,MAvJrDX,EAAc4F,QACdvG,EACEmT,aAAS,CACP3S,OACAM,aACAuB,EAAGkE,EACHxE,YACAE,UACAM,QAASvB,EACTsB,KAAM1B,KAVS2F,KAwJyC,cAMtD,cAAC,IAAS,CACRE,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EACTQ,UAAU,kBACVqD,oBApJe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAhFKA,KACvBtC,EACEmT,aAAS,CACP3S,OACAM,aACAuB,EAAG3B,EACHqB,YACAE,UACAM,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAoEPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EAmIIrF,KAAMqL,SAIZ,cAAC,GAAQ,CAACkM,KAAMhZ,EAAab,aAAcA,EAAc8Z,cAAeA,MAE/D,ECjRAW,OARS,IAEpB,qBAAKvX,UAAU,gBAAe,SAC5B,cAAC,GAAK,M,UCoFG0W,OAnFE,IAA8B,IAA7B,KAAEC,EAAI,cAAEC,GAAe,EAErC,MAAMja,EAAQC,aAAYC,GAASA,EAAM2a,mBAClCC,EAAWC,GAAgB1a,oBAAS,IACpC2T,EAAOgH,GAAY3a,qBAEpBP,EAAWC,cAuCjB,OAZAkC,qBAAU,KAAO,IAAD,EACZ,GAA0B,OAAtBjC,EAAMib,aAAyC,QAArB,EAAIjb,EAAMib,mBAAW,OAAjB,EAAmBjH,MAAO,CACxD,MAAMkH,EAAWlb,EAAMib,YACvBD,EAAiB,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAUlH,OACnB+G,GAAa,EACjB,MACIC,EAAS,IACTD,GAAa,EACjB,GACD,CAAC/a,EAAMib,cAIN,mCACI,eAAC,IAAK,CACFd,OAAQH,EACRI,SApBgB,OAqBhBC,OAAQJ,EACR5W,UAAU,iCAAgC,UAE1C,cAAC,IAAW,CAACA,UAAU,iBAAiBgX,OAAQJ,IAChD,eAAC,IAAS,CAAC5W,UAAU,YAAW,UAC5B,qBAAKA,UAAU,cAAa,SACxB,+BAAKyX,EAAY,SAAW,MAAM,yBAEtC,eAAC,IAAI,CAACzX,UAAU,MAAK,UAEjB,sBAAKA,UAAU,gBAAe,UAC1B,cAAC,IAAK,CAACA,UAAU,aAAY,SAAC,0CAG9B,8BAEQ2Q,GAASA,EAAMiC,SAAS,UAAY,qBAAKhC,IAAKD,EAAO9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,OAAY,qBAAK8N,IAAKF,YAAiBC,GAAQ9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,SAGtK,cAAC+P,GAAA,EAAU,CAACC,aAAe9P,GAAQ2U,EAAS3U,QAEhD,qBAAKhD,UAAU,iBAAgB,SAC3B,cAAC,IAAM,CAAC0B,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,KA9DvE,MAEY,IAAD,EADxB0W,IAEIna,GADc,IAAdgb,EAEIK,aAAqB,CACjBnH,QACAvQ,GAAS,OAALzD,QAAK,IAALA,GAAkB,QAAb,EAALA,EAAOib,mBAAW,WAAb,EAAL,EAAoBtV,MAK5ByV,aAAmB,CACfpH,UAGZ,EA+C4FlH,EAAU,EAAG,SAAE,uBAOxG,E,UCwJI2B,OA7NI,KAEjB,MAAM3O,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM2a,kBACnC/M,EAAgB7N,aAAYC,GAASA,EAAM2a,gBAAgBpY,QAE1D0K,EAASC,GAAc/M,mBAAS,KAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,GAE/C4B,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IAEJ,MAAMmM,EAAgB,IAAMhZ,GAAgBD,GA0C5CiB,qBAAU,KAVRnC,EAASub,aAAmB,CAC1B/a,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,IAGHuB,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAIJ,MA8CMjL,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,QACNC,UAAU,EACVE,UAAW,QACXC,SAAUC,GAAO,qBAAK8Q,IAAKF,YAAoB,OAAH5Q,QAAG,IAAHA,OAAG,EAAHA,EAAK6Q,OAAQ9N,MAAO,CAAE8K,OAAQ,GAAI7K,MAAO,OAEvF,CACErD,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAM,CAACyC,MAAM,UAAUrC,QAAUwC,IAAQA,EAAEgH,iBAAkBjN,EAASwb,aAAwBnY,EAAIwC,MAAOsU,GAAe,EAAI5W,UAAU,sBAAqB,SAC1J,cAAC,IAAG,CAACsB,KAAM,OAEb,cAAC,IAAM,CAACiB,MAAM,SAASrC,QAAUwC,IAtDL,EAACA,EAAG5C,KAEtC4C,EAAEgH,iBACEwO,QAAQ,kDACVzb,EAAS0b,aAAsBrY,EAAIwC,KACrC,EAiD+C8V,CAA4B1V,EAAG5C,EAAI,EAAIE,UAAU,2BAA0B,SAClH,cAAC,KAAK,CAACsB,KAAM,YASvB,OACE,eAAC,WAAQ,WAGP,cAAC,IAAI,CAACtB,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SAlIIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASub,aAAmB,CAC1B/a,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EAwHL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAxHZC,EAwHyBN,EAAEO,OAAOlF,MAvHrDX,EAAc4F,QACdvG,EACEub,aAAmB,CACjB/a,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAwHyC,OAGhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAM,CAACA,UAAU,eAAeuC,MAAM,UAAUrC,QAAS0W,EAAc,SAAC,sBAOjF,cAAC,IAAS,CACR1T,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EACTQ,UAAU,kBACVqD,oBAjHe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlFKA,KACvBtC,EACEub,aAAmB,CACjB/a,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwEPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EAgGIrF,KAAM,IAAIqL,UAIhB,cAAC,GAAQ,CAACkM,KAAMhZ,EAAaiZ,cAAeA,MACnC,EClOAyB,OARS,IAEpB,qBAAKrY,UAAU,gBAAe,SAC5B,cAAC,GAAK,MCVZ,MAAM2E,GAAa,GAAEC,kBCkHN0T,OA/FK,KAIlB,MAAO3H,EAAO6B,GAAYxV,mBAAS,KAC5Bub,EAAeC,GAAoBxb,mBAAS,IAG7Cyb,EAAuB5W,UAC3B,IACE,MAAQzC,KAAM2C,QDvBUF,UACnBuD,IAAcC,IAAK,GAAEV,OCsBE+T,GAC5BpZ,QAAQC,IAAIwC,GACRA,EAAI3C,MAAQ2C,EAAI3C,KAAKuZ,WACvBH,EAAiBzW,EAAI3C,KAAKuZ,UAG9B,CAAE,MAAOxW,GACPC,YAAWD,EACb,GAIIyW,EAAuB/W,UAC3B,IACE,MAAMC,EAAM,CAAC,EACb,IAAM6O,GAAmB,KAAVA,EAEb,YADAvO,YAAW,8BAIbN,EAAI6O,MAAQA,EACZ,MAAQvR,KAAM2C,QDhDUF,UACnBuD,IAAcyT,KAAM,GAAElU,MAAc7C,GC+CbgX,CAAehX,GAC3CxC,QAAQC,IAAIwC,GACRA,EAAIE,SACNwW,GAGJ,CAAE,MAAOtW,GACPC,YAAWD,EACb,GAOF,OALAvD,qBAAU,KACR6Z,GAAsB,GAErB,IAGD,mCACE,cAAC,IAAI,CAACzY,UAAU,kBAAiB,SAC/B,qBAAKA,UAAU,kBAAiB,SAC9B,sBAAKA,UAAU,4DAA2D,UAExE,qBAAKA,UAAU,cAAa,SAC1B,6BAAI,uBAGN,sBAAKA,UAAU,MAAK,UAElB,sBAAKA,UAAU,gBAAe,UAC5B,cAAC,IAAK,CAACA,UAAU,aAAY,SAAC,6DAG9B,8BAAK,oBAGL,8BAEE,qBAAK4Q,IAAKF,YAAiB6H,GAAgB1V,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,SAE1E,8BAAK,wBAGL,8BAEE,qBAAK8N,IAAKD,EAAO9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,SAGhD,cAAC+P,GAAA,EAAU,CAACC,aAAe9P,GAAQwP,EAASxP,QAI9C,qBAAKhD,UAAU,iBAAgB,SAC7B,cAAC,IAAM,CAAC0B,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,KAAQ0Y,GAAsB,EAAG,SAAE,wBAS5G,E,UC9FP,MAwEapZ,GAAU,CACrB,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,MACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,OACNC,UAAU,EACVE,UAAW,OACXkD,MAAO,MACP/C,KAAMD,GAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKL,MAEpB,CACEA,KAAM,MACNC,UAAU,EACVE,UAAW,UACXkD,MAAO,MACP/C,KAAMD,GAAOA,EAAImT,KAgBnB,CACExT,KAAM,aACNC,UAAU,EACVE,UAAW,aACXkD,MAAO,MACP/C,KAAMD,GAAO,IAAIqN,KAAKrN,EAAI+F,WAAWkL,gBAEvC,CACEtR,KAAM,UACNM,KAAMD,GACJ,qCACE,cAAC,IAAI,CAACyC,MAAM,UAAUtC,GAAK,aAAYH,EAAIwC,MAAOtC,UAAU,sBAAqB,SAC/E,cAAC,IAAI,CAACsB,KAAM,OAEd,eAAC,IAAM,CAACiB,MAAM,SAASvC,UAAU,cAC/BE,QAASwC,IACPA,EAAEgH,iBACF/M,IAAMF,SAASsc,aAAUjZ,EAAIwC,KAAK,EAClC,UACH,OAAI,cAAC,IAAM,CAAChB,KAAM,aC4EZsI,OApMU,KAEvB,MAAMnN,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAMmc,MACnCnP,EAAkBjN,aAAYC,GAASA,EAAMmc,IAAI5Z,QAGhD0K,EAASC,GAAc/M,mBAAS,KAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,IAE/C4B,qBAAU,KACRmL,EAAWF,EAAgB,GAC1B,CAACA,IA2CJjL,qBAAU,KAVRnC,EAASwc,aAAO,CACdhc,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMS,GAChB,IA+CH,OAJAuB,qBAAU,KACRU,QAAQC,IAAIsK,EAAgB,GAC3B,CAACA,IAGF,cAAC,WAAQ,UAGP,cAAC,IAAI,CAAC7J,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SA1FIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASwc,aAAO,CACdhc,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EAgFL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OArFZC,EAqFyBN,EAAEO,OAAOlF,MApFrDX,EAAc4F,QACdvG,EACEwc,aAAO,CACLhc,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAqFyC,OAIhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAI,CAACC,GAAG,WAAWD,UAAU,+BAA+BuC,MAAM,UAAS,SAAC,sBAOrF,cAAC,IAAS,CACRW,UAAQ,EAIRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,GAGTQ,UAAU,kBACVqD,oBA9Fe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,MAAU,OAAL9G,QAAK,IAALA,OAAK,EAALA,EAAO+G,OAAQjG,IAC9C,OACE,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlEKA,KACvBtC,EACEwc,aAAO,CACLhc,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwDPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EA8EIrF,KAAMyK,UAeH,ECnKAmP,OA1CH,IAER,qBAAKhZ,UAAU,gBAAe,SAmC5B,cAAC,GAAK,M,MCyIGkZ,OAjLA,KACb,MAAMzc,EAAWC,eACX,GAAE0D,GAAO0E,cACTsN,EAAUxV,aAAYC,GAASA,EAAMmc,IAAIG,eACxCnS,EAAWC,GAAgBjK,oBAAS,IACpCyC,EAAMyH,GAAWlK,mBAAS,KAC1Boc,EAAOC,GAAYrc,mBAAS,KAC5B2T,EAAO6B,GAAYxV,mBAAS,KAC5BiW,EAAKO,GAAUxW,mBAAS,KACxBsK,EAAaC,GAAkBvK,mBAAS,KACxCsc,EAAUC,GAAevc,mBAAS,KAClCwK,EAAYC,GAAiBzK,mBAAS,CAAC,CAAEiF,QAAS,MAuCzDrD,qBAAU,KACJwT,GAAWA,EAAQ3S,MAAQuH,GAC7BE,EAAe,OAAPkL,QAAO,IAAPA,KAAS3S,KAAc,OAAP2S,QAAO,IAAPA,OAAO,EAAPA,EAAS3S,KAAO,IACxC+T,EAAc,OAAPpB,QAAO,IAAPA,KAASa,IAAa,OAAPb,QAAO,IAAPA,OAAO,EAAPA,EAASa,IAAM,IACrCoG,EAAgB,OAAPjH,QAAO,IAAPA,KAASgH,MAAe,OAAPhH,QAAO,IAAPA,OAAO,EAAPA,EAASgH,MAAQ,IAC3CG,EAAmB,OAAPnH,QAAO,IAAPA,KAASkH,SAAkB,OAAPlH,QAAO,IAAPA,OAAO,EAAPA,EAASkH,SAAW,IACpD/R,EAAsB,OAAP6K,QAAO,IAAPA,KAAS9K,YAAqB,OAAP8K,QAAO,IAAPA,OAAO,EAAPA,EAAS9K,YAAc,IAC7DkL,EAAgB,OAAPJ,QAAO,IAAPA,KAASzB,MAAe,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASzB,MAAQ,MAE3CzJ,EAAQ,IACRsM,EAAO,IACT,GAEC,CAACpB,EAASpL,IAObpI,qBAAU,KAEJwB,IALJ3D,EAAS+c,aAAWpZ,IAOlB6G,GAAa,GACf,GAEC,CAAC7G,IAiCJ,OACE,eAAC,IAAI,WACH,eAAC,IAAU,WACT,eAAC,IAAI,CAACH,GAAG,YAAYD,UAAU,0BAA0BuC,MAAM,UAAS,UACtE,cAAC,IAAW,IAAG,UAEjB,eAAC,IAAS,CAAC6D,IAAI,KAAI,UAAEY,EAAY,OAAS,MAAM,kBAGlD,eAAC,IAAQ,WAEP,eAAC,IAAG,CAAChH,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,SAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAO0B,EAAMmC,SAAWc,GAAMwE,EAAQxE,EAAEO,OAAOlF,OAAQ2K,YAAY,kBAGxG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,YAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOkV,EAAKrR,SAAWc,GAAM8Q,EAAO9Q,EAAEO,OAAOlF,OAAQ2K,YAAY,sBAEtG,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,UAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOqb,EAAOxX,SAAWc,GAAM2W,EAAS3W,EAAEO,OAAOlF,OAAQ2K,YAAY,wBAG1G,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,gBAG/C,cAAC,IAAK,CAAC/G,KAAK,WAAWtB,GAAG,aAAarC,MAAOuJ,EAAa1F,SAAWc,GAAM6E,EAAe7E,EAAEO,OAAOlF,OAAQ2K,YAAY,8BAI1H,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,IAAI+F,GAAG,IAAIC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,aAG/C,cAAC,IAAK,CAAC/G,KAAK,OAAOtB,GAAG,aAAarC,MAAOub,EAAU1X,SAAWc,GAAM6W,EAAY7W,EAAEO,OAAOlF,OAAQ2K,YAAY,2BAGhH,eAAC,IAAG,CAAC1I,UAAU,OAAOwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,UACzC,cAAC,IAAK,CAACxI,UAAU,aAAayI,IAAI,aAAY,SAAC,yCAG/C,8BAEIkI,EAAMiC,SAAS,UAAY,qBAAKhC,IAAKD,EAAO9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,KAAO+N,IAAI,GAAGC,OAAO,KAAQ,qBAAKF,IAAKF,YAAiBC,GAAQ9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,KAAO+N,IAAI,GAAGC,OAAO,OAG/L,cAAC+B,GAAA,EAAU,CAACC,aAAcN,OAE9B,cAAC,IAAG,CAACxS,UAAU,YAAYwC,GAAG,KAAK+F,GAAG,KAAKC,GAAG,KAAI,SAChD,cAAC,IAAM,CAAC9G,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,IAzJpD,KAAb,GAAET,KACL2C,YAAW,oBACJ,GAGQ,KAAZ,GAAE6Q,KACL7Q,YAAW,mBACJ,QAIP3F,GADgB,IAAduK,EAEAyS,aAAU,CACRha,OACA2Z,QACAzI,QACArJ,cACAgS,WACArG,MACA7S,OAKFsZ,aAAO,CACLja,OACAwT,MACAmG,QACAzI,QACArJ,cACAgS,cA2HiF,SAAC,kBAMhF,E,SClLL,MAAMtB,GAAqBhK,aAAiB,sCAAsCnM,UACvF,IAAI0D,EAAS,GACTiG,IACEA,EAAOvO,OACTsI,EAAS,QAAOiG,EAAOvO,QAErBuO,EAAOjO,aACTgI,EAAS,GAAEA,gBAAoBiG,EAAOjO,cAEpCiO,EAAO1M,IACTyG,EAAS,GAAEA,OAAWiG,EAAO1M,KAE3B0M,EAAOxM,UACTuG,EAAS,GAAEA,aAAiBiG,EAAOxM,WAEjCwM,EAAOzM,OACTwG,EAAS,GAAEA,UAAciG,EAAOzM,QAE9ByM,EAAOtM,SACTqG,EAAS,GAAEA,YAAgBiG,EAAOtM,WAGtC,MAAM+O,QAAiB0L,aAA0BpU,GACjD,MAAO,CACLiG,SACApM,KAAM6O,EAAS7O,KAAKwa,aACpBpU,WAAYyI,EAAS7O,KAAKoG,WAC3B,IAGUyS,GAA0BjK,aAAiB,2CAA2CnM,UACjG,IACE,MAAMoM,QAAiB4L,aAAiBzZ,GAExC,OADA8B,YAAa+L,EAAS7O,KAAK6C,SACpBgM,EAAS7O,KAAKA,IACvB,CAAE,MAAO+C,GAEP,OADAC,YAAWD,GACJA,CACT,KAIW4V,GAAqB/J,aAAiB,sCAAsCnM,MAAO2J,EAAO,KAAmB,IAAlB,SAAE/O,GAAU,EAClH,IACE,MAAMwR,QAAiB6L,aAA0BtO,GAIjD,OAHAtJ,YAAa+L,EAAS7O,KAAK6C,eACrBxF,EAASub,MAER/J,EAAS7O,KAAKA,IACvB,CAAE,MAAO+C,GAEP,OADAC,YAAWD,GACJA,CACT,KAIW2V,GAAuB9J,aAAiB,wCAAwCnM,MAAO0M,EAAS,KAA6B,IAA5B,SAAE9R,EAAQ,SAAEsd,GAAU,EAElI,IACE,MAAMhY,QAAYiY,aAAiBzL,EAAUA,EAASnO,IAMtD,OALI2B,EAAI3C,KAAKqP,UACXvM,YAAaH,EAAI3C,KAAK6C,eAChBxF,EAASub,SAGVjW,EAAI3C,KAAKqP,SAAU1M,EAAI3C,KAAKqP,OACrC,CAAE,MAAOtM,GAEP,OADAC,YAAWD,GACJA,CACT,KAIWgW,GAAwBnK,aAAiB,yCAAyCnM,MAAOzB,EAAG,KAA6B,IAA5B,SAAE3D,EAAQ,SAAEsd,GAAU,EAC9H,IACE,MAAMhY,QAAYkY,aAAiB7Z,GAKnC,OAJI2B,EAAI3C,KAAKqP,UACXvM,YAAaH,EAAI3C,KAAK6C,eAChBxF,EAASub,OAEV5X,CACT,CAAE,MAAO+B,GAEP,OADAC,YAAWD,GACJA,CACT,KAIiCyM,aAAY,CAC7CnP,KAAM,kBACNoP,aAAc,CACZzP,KAAM,GACNoM,OAAQ,CAAC,EACTvB,QAAS,GACT2N,YAAa,KACbnJ,SAAS,GAEXK,SAAU,CAEV,EACAC,cAAeC,IACbA,EACGC,QAAQ+I,GAAmB9I,WAAW,CAACrS,EAAOsS,KAC7CtS,EAAMuC,KAAO+P,EAAOC,QAAQhQ,KAC5BvC,EAAM2O,OAAS2D,EAAOC,QAAQ5D,OAC9B3O,EAAM+a,YAAc,KACpB/a,EAAM6G,MAAQyL,EAAOC,QAAQ5J,UAAU,IAExCyJ,QAAQgJ,GAAwB/I,WAAW,CAACrS,EAAOsS,KAClDtS,EAAM+a,YAAczI,EAAOC,OAAO,IAEnCH,QAAQ8I,GAAmB7I,WAAW,CAACrS,EAAOsS,KAAR,IAMtCF,QAAQkJ,GAAsBjJ,WAAW,CAACrS,EAAOsS,KAChDtS,EAAM+a,YAAc,IAAI,GACxB,IAIkC,QCjB3BlB,OA9FE,IAA8B,IAA7B,KAAEC,EAAI,cAAEC,GAAe,EAErC,MAAMja,EAAQC,aAAYC,GAASA,EAAM2a,mBAClCC,EAAWC,GAAgB1a,oBAAS,IACpC2T,EAAOgH,GAAY3a,sBACnBiW,EAAKiH,GAAUld,mBAAS,IAEzBP,EAAWC,cA4CjB,OAZAkC,qBAAU,KAAO,IAAD,EACZ,GAA0B,OAAtBjC,EAAMib,aAAyC,QAArB,EAAIjb,EAAMib,mBAAW,OAAjB,EAAmBjH,MAAO,CACxD,MAAMkH,EAAWlb,EAAMib,YACvBD,EAAiB,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAUlH,OACnB+G,GAAa,EACjB,MACIC,EAAS,IACTD,GAAa,EACjB,GACD,CAAC/a,EAAMib,cAIN,mCACI,eAAC,IAAK,CACFd,OAAQH,EACRI,SApBgB,OAqBhBC,OAAQJ,EACR5W,UAAU,iCAAgC,UAE1C,cAAC,IAAW,CAACA,UAAU,iBAAiBgX,OAAQJ,IAChD,eAAC,IAAS,CAAC5W,UAAU,YAAW,UAC5B,qBAAKA,UAAU,cAAa,SACxB,+BAAKyX,EAAY,SAAW,MAAM,yBAEtC,eAAC,IAAI,CAACzX,UAAU,MAAK,UACjB,sBAAKA,UAAU,gBAAe,UAC1B,eAAC,IAAK,CAACA,UAAU,aAAayI,IAAI,WAAU,UAAC,OACrC,sBAAMzI,UAAU,cAAa,SAAC,SAEtC,cAAC,IAAK,CAACA,UAAU,eAAejC,MAAOkV,EAAKrR,SAAWc,GAAMwX,EAAOxX,EAAEO,OAAOlF,YAEjF,sBAAKiC,UAAU,gBAAe,UAC1B,cAAC,IAAK,CAACA,UAAU,aAAY,SAAC,0CAG9B,8BAEQ2Q,GAASA,EAAMiC,SAAS,UAAY,qBAAKhC,IAAKD,EAAO9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,OAAY,qBAAK8N,IAAKF,YAAiBC,GAAQ9N,MAAO,CAAE8K,OAAQ,IAAK7K,MAAO,SAGtK,cAAC+P,GAAA,EAAU,CAACC,aAAe9P,GAAQ2U,EAAS3U,QAEhD,qBAAKhD,UAAU,iBAAgB,SAC3B,cAAC,IAAM,CAAC0B,KAAK,SAAS1B,UAAU,OAAOuC,MAAM,UAAUrC,QAAS,KAxEvE,MAEY,IAAD,EASjB,EAVP0W,IAEIna,EACIqb,IAFU,IAAdL,EAEyB,CACjB9G,QACAvQ,GAAS,OAALzD,QAAK,IAALA,GAAkB,QAAb,EAALA,EAAOib,mBAAW,WAAb,EAAL,EAAoBtV,IACxB2Q,MACAvR,KAAM,eAKW,CACjBiP,QACAvQ,GAAS,OAALzD,QAAK,IAALA,GAAkB,QAAb,EAALA,EAAOib,mBAAW,WAAb,EAAL,EAAoBtV,IACxB2Q,MACAvR,KAAM,gBAGlB,EAoD4F+H,EAAU,EAAG,SAAE,uBAOxG,ECwJI2B,OAzOI,KAEjB,MAAM3O,EAAWC,cACXC,EAAQC,aAAYC,GAASA,EAAM2a,kBACnC/M,EAAgB7N,aAAYC,GAASA,EAAM2a,gBAAgBpY,QAE1D0K,EAASC,GAAc/M,mBAAS,KAIhCC,EAAMC,GAAWF,mBAAS,SAC1BG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAaC,GAAkBN,mBAAS,IACxCO,EAAYC,GAAiBR,mBAAS,OACtCS,EAAaC,GAAkBV,mBAAS,KACxCW,EAAaC,GAAkBZ,oBAAS,GAE/C4B,qBAAU,KACRmL,EAAWU,EAAc,GACxB,CAACA,IAEJ,MAAMmM,EAAgB,IAAMhZ,GAAgBD,GA8C5CiB,qBAAU,KAVRnC,EAASub,GAAmB,CAC1B/a,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAM1B,IAMa,GACpB,IAGHuB,qBAAU,KACRU,QAAQC,IAAIkL,EAAe,gBAAgB,GAC1C,CAACA,IAIJ,MA8CMjL,EAAU,CACd,CACEC,KAAM,OACNC,UAAU,EACVE,UAAW,QACXkD,MAAO,OACP/C,KAAM,CAACD,EAAKqJ,IAAWA,EAAQ,GAEjC,CACE1J,KAAM,MACNC,UAAU,EACVE,UAAW,QACXC,SAAUC,GAAO,mCAAM,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKmT,OAE3B,CACExT,KAAM,QACNC,UAAU,EACVE,UAAW,QACXC,SAAUC,GAAO,qBAAK8Q,IAAKF,YAAoB,OAAH5Q,QAAG,IAAHA,OAAG,EAAHA,EAAK6Q,OAAQ9N,MAAO,CAAE8K,OAAQ,GAAI7K,MAAO,OAEvF,CACErD,KAAM,UACNM,KAAMD,GACJ,qCAEE,cAAC,IAAM,CAACyC,MAAM,UAAUrC,QAAUwC,IAAQA,EAAEgH,iBAAkBjN,EAASwb,GAAwBnY,EAAIwC,MAAOsU,GAAe,EAAI5W,UAAU,sBAAqB,SAC1J,cAAC,IAAG,CAACsB,KAAM,OAIb,cAAC,IAAM,CAACiB,MAAM,SAASrC,QAAUwC,IA9DL,EAACA,EAAG5C,KAEtC4C,EAAEgH,iBACEwO,QAAQ,kDACVzb,EAAS0b,GAAsBrY,EAAIwC,KACrC,EAyD+C8V,CAA4B1V,EAAG5C,EAAI,EAAIE,UAAU,2BAA0B,SAClH,cAAC,KAAK,CAACsB,KAAM,YASvB,OACE,eAAC,WAAQ,WAGP,cAAC,IAAI,CAACtB,UAAU,kBAAiB,SAC/B,sBAAKA,UAAU,kBAAiB,UAC9B,qBAAKA,UAAU,4DAA2D,SACxE,eAAC,KAAG,WACF,cAAC,IAAG,CAACwC,GAAG,IAAIxC,UAAU,gCAA+B,SACnD,sBAAKA,UAAU,kCAAiC,UAC9C,uBAAOyC,QAAQ,gBAAe,SAAC,SAC/B,eAAC,IAAK,CACJzC,UAAU,QACV0B,KAAK,SACLtB,GAAG,gBACHrC,MAAON,EACPmE,SA1IIc,IACpB,MAAM3E,EAAQ4E,SAASD,EAAEE,cAAc7E,OACvCT,EAAe,GAEfb,EAASub,GAAmB,CAC1B/a,OACAM,aACAuB,EAAG3B,EACH6B,QAASjB,EACTgB,KAAM,KAERrB,EAAeK,EAAM,EAgIL8E,MAAO,CAAEC,MAAO,QAAS,UAEzB,wBAAQ/E,MAAM,IAAG,SAAC,MAClB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,KAAI,SAAC,OACnB,wBAAQA,MAAM,MAAK,SAAC,QACpB,wBAAQA,MAAM,MAAK,SAAC,WAEtB,uBAAO0E,QAAQ,gBAAe,SAAC,iBAGnC,eAAC,IAAG,CACFD,GAAG,IACHxC,UAAU,kCAAiC,UAE3C,sBAAKA,UAAU,8CAA6C,UAC1D,uBAAOA,UAAU,OAAOyC,QAAQ,iBAAgB,SAAC,YAGjD,cAAC,IAAK,CACJrC,GAAG,iBACHJ,UAAU,cACV0B,KAAK,OACL3D,MAAOZ,EACPyE,SAAUc,IAAKK,OAhIZC,EAgIyBN,EAAEO,OAAOlF,MA/HrDX,EAAc4F,QACdvG,EACEub,GAAmB,CACjB/a,OACAM,aACAuB,EAAGkE,EACHhE,QAASvB,EACTsB,KAAM1B,KARS2F,KAgIyC,OAGhD,qBAAKhD,UAAU,iDAAgD,SAC7D,cAAC,IAAM,CAACA,UAAU,eAAeuC,MAAM,UAAUrC,QAAS0W,EAAc,SAAC,sBAOjF,cAAC,IAAS,CACR1T,UAAQ,EACRC,YAAU,EACVC,kBAAgB,EAChB5D,QAASA,EACTQ,UAAU,kBACVqD,oBAzHe,KACvB,MAAMC,EAAQC,OAAOC,KAAKC,KAAK9G,EAAM+G,MAAQjG,IAE7C,OADA6B,QAAQC,IAAI+D,EAAO,QAAS3G,EAAM+G,MAAOjG,EAAa,eAEpD,cAAC,IAAa,CACZkG,cAAe,GACfC,UAAW,GACXC,UAAWP,GAAS,EACpBQ,gBAAgB,SAChBC,UAA2B,IAAhB1G,EAAoBA,EAAc,EAAI,EACjD2G,aAAcjF,GAlFKA,KACvBtC,EACEub,GAAmB,CACjB/a,OACAM,aACAuB,EAAG3B,EACH6B,QAASvB,EACTsB,KAAMA,EAAKkF,SAAW,KAG1B3G,EAAeyB,EAAKkF,SAAW,EAAE,EAwEPC,CAAiBnF,GACvCoF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBAAoB,2DACpB,EAwGIrF,KAAM,IAAIqL,UAIhB,cAAC,GAAQ,CAACkM,KAAMhZ,EAAaiZ,cAAeA,MACnC,EC9OAuD,OARc,IAEzB,qBAAKna,UAAU,gBAAe,SAC5B,cAAC,GAAK,MCkBZ,MAAMoa,GAAOC,gBAAK,IAAM,kCAClBC,GAAOD,gBAAK,IAAM,8EAClBE,GAAQF,gBAAK,IAAM,wDACnBG,GAASH,gBAAK,IAAM,8EACpBI,GAAWJ,gBAAK,IAAM,uEAEtBK,GAAaL,gBAAK,IAAM,wDACxBM,GAAcN,gBAAK,IAAM,mCACzBO,GAAcP,gBAAK,IAAM,wDACzBQ,GAAeR,gBAAK,IAAM,mCAC1BS,GAAiBT,gBAAK,IAAM,wDAE5BU,GAAgBV,gBAAK,IAAM,yDAC3BW,GAAkBX,gBAAK,IAAM,iEAC7BY,GAAoBZ,gBAAK,IAAM,kCAC/Ba,GAAoBb,gBAAK,IAAM,wDAE/Bc,GAAWd,gBAAK,IAAM,yDACtBe,GAAWf,gBAAK,IAAM,6EAEtBgB,GAAQhB,gBAAK,IAAM,yDACnBiB,GAAcjB,gBAAK,IAAM,yDA6ThBkB,OA3TG,CAChB,CACEC,QAAS,cAACjB,GAAK,IACfkB,KAAM,cACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,sBAGf,CACEwb,QAAS,cAACjB,GAAK,IACfkB,KAAM,sBACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,sBAGf,CACEwb,QAAS,cAACjB,GAAK,IACfkB,KAAM,2BACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,sBAGf,CACEwb,QAAS,cAACjB,GAAK,IACfkB,KAAM,uBAER,CACEA,KAAM,aACND,QAAS,cAACpB,GAAI,IACdsB,KAAM,CACJC,WAAW,EACX3b,UAAW,qBAGf,CACEwb,QAAS,cAAClB,GAAI,IACdmB,KAAM,aACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,qBAGf,CACEwb,QAAS,cAAClB,GAAI,IACdmB,KAAM,qBACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,qBAGf,CACEwb,QAAS,cAAClB,GAAI,IACdmB,KAAM,sBACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,qBAGf,CACEwb,QAAS,cAACf,GAAQ,IAClBgB,KAAM,kBAER,CACED,QAAS,cAAChB,GAAM,IAChBiB,KAAM,eACNC,KAAM,CACJC,WAAW,EACX3b,UAAW,uBAGf,CACEwb,QAAS,cAACb,GAAW,IACrBc,KAAM,sBAER,CACED,QAAS,cAACV,GAAc,IACxBW,KAAM,6BAER,CACEA,KAAM,wBACND,QAAS,cAAC,IAAQ,CAACvb,GAAG,gCAExB,CACEub,QAAS,cAACZ,GAAW,IACrBa,KAAM,0BAER,CACEA,KAAM,qBACND,QAAS,cAAC,IAAQ,CAACvb,GAAG,6BAExB,CACEub,QAAS,cAACd,GAAU,IACpBe,KAAM,qBAER,CACEA,KAAM,sBACND,QAAS,cAACX,GAAY,IACtBa,KAAM,CACJE,OAAQ,UAGZ,CACEJ,QAAS,cAACT,GAAa,IACvBU,KAAM,uBACNC,KAAM,CACJ1b,UAAW,0BAGf,CACEwb,QAAS,cAACP,GAAiB,IAC3BQ,KAAM,2BACNC,KAAM,CACJ1b,UAAW,0BAGf,CACEyb,KAAM,iCACND,QAAS,cAAC,IAAQ,CAACvb,GAAG,mEACtByb,KAAM,CACJ1b,UAAW,0BAGf,CACEyb,KAAM,0CACND,QAAS,cAACR,GAAe,IACzBU,KAAM,CACJ1b,UAAW,0BAGf,CACEyb,KAAM,2BACND,QAAS,cAACN,GAAiB,IAC3BQ,KAAM,CACJ1b,UAAW,0BAGf,CACEwb,QAAS,cAACL,GAAQ,IAClBM,KAAM,kBACNI,QAAS,CAAC,QAAS,cAErB,CACEL,QAAS,cAAC,EAAqB,IAC/BC,KAAM,qCACNI,QAAS,CAAC,UAEZ,CACEL,QAAS,cAAC3W,EAA0B,IACpC4W,KAAM,4CACNI,QAAS,CAAC,UAEZ,CACEJ,KAAM,kBACND,QAAS,cAAC,IAAQ,CAACvb,GAAG,uBAExB,CACEub,QAAS,cAACJ,GAAQ,IAClBK,KAAM,uBAER,CACED,QAAS,cAACH,GAAK,IACfI,KAAM,eAER,CACED,QAAS,cAACF,GAAW,IACrBG,KAAM,qBAER,CACED,QAAS,cAAC,EAAgB,IAC1BC,KAAM,sBAER,CACED,QAAS,cAAC,EAAe,IACzBC,KAAM,qBAER,CACED,QAAS,cAAC,EAAe,IACzBC,KAAM,0BAER,CACED,QAAS,cAAC,GAAS,IACnBC,KAAM,eAER,CACED,QAAS,cAAC,GAAQ,IAClBC,KAAM,cAER,CACED,QAAS,cAAC,GAAQ,IAClBC,KAAM,mBAER,CACED,QAAS,cAAC,EAAe,IACzBC,KAAM,qBAER,CACED,QAAS,cAAC,EAA4B,IACtCC,KAAM,oCAER,CACED,QAAS,cAAC,GAA4B,IACtCC,KAAM,mCAER,CACED,QAAS,cAAC,GAA4B,IACtCC,KAAM,wCAER,CACED,QAAS,cAAC,EAAc,IACxBC,KAAM,qBAER,CACED,QAAS,cAAC,GAAa,IACvBC,KAAM,oBAER,CACED,QAAS,cAAC7Q,EAAiB,IAC3B8Q,KAAM,iCAER,CACED,QAAS,cAACzN,GAAgB,IAC1B0N,KAAM,gCAER,CACED,QAAS,cAAC,GAAO,IACjBC,KAAM,YAER,CACED,QAAS,cAAC,GAAc,IACxBC,KAAM,iBAER,CACED,QAAS,cAACjQ,GAAiB,IAC3BkQ,KAAM,0BAER,CACED,QAAS,cAAC,GAAmB,IAC7BC,KAAM,iCAER,CACED,QAAS,cAAC,GAAkB,IAC5BC,KAAM,gCAER,CACED,QAAS,cAAC,GAAS,IACnBC,KAAM,eAER,CACED,QAAS,cAAC,GAAe,IACzBC,KAAM,iBAER,CACED,QAAS,cAAC,GAAgB,IAC1BC,KAAM,sBAER,CACED,QAAS,cAAC,GAAa,IACvBC,KAAM,qBAER,CACED,QAAS,cAAC,GAAK,IACfC,KAAM,eAER,CACED,QAAS,cAAC,GAAO,IACjBC,KAAM,cAER,CACED,QAAS,cAAC,GAAO,IACjBC,KAAM,mBAER,CACED,QAAS,cAAC,GAAS,IACnBC,KAAM,qBAER,CACED,QAAS,cAAC,GAAY,IACtBC,KAAM,oBAER,CACED,QAAS,cAAC,GAAY,IACtBC,KAAM,yBAER,CACED,QAAS,cAAC,GAAG,IACbC,KAAM,aAER,CACED,QAAS,cAAC,GAAM,IAChBC,KAAM,YAER,CACED,QAAS,cAAC,GAAM,IAChBC,KAAM,iBAER,CACED,QAAS,cAAC,GAAW,IACrBC,KAAM,kBACNI,QAAS,CAAC,UAEZ,CACEL,QAAS,cAAC,GAAe,IACzBC,KAAM,wBACNI,QAAS,CAAC,UAEZ,CACEL,QAAS,cAAC,GAAoB,IAC9BC,KAAM,6BACNI,QAAS,CAAC,WC7Wd,MAAMC,GAASzB,gBAAK,IAAM,+DACpB0B,GAAa1B,gBAAK,IAAM,6EACxB2B,GAAc3B,gBAAK,IAAM,mCACzB4B,GAAQ5B,gBAAK,IAAM,mCACnB6B,GAAQ7B,gBAAK,IAAM,mCACnB8B,GAAe9B,gBAAK,IAAM,kCAC1B+B,GAAS/B,gBAAK,IAAM,mCACpBgC,GAAShC,gBAAK,IAAM,wDACpBiC,GAASjC,gBAAK,IAAM,2DACpBkC,GAAWlC,gBAAK,IAAM,mCACtBmC,GAAYnC,gBAAK,IAAM,gEACvBoC,GAAapC,gBAAK,IAAM,mCACxBqC,GAAcrC,gBAAK,IAAM,wDACzBsC,GAActC,gBAAK,IAAM,kCACzBuC,GAAcvC,gBAAK,IAAM,mCACzBwC,GAAexC,gBAAK,IAAM,wDAqEjByC,OAnEI,CACjB,CACEtB,QAAS,cAACU,GAAK,IACfT,KAAM,yBAER,CACED,QAAS,cAACmB,GAAW,IACrBlB,KAAM,+BAER,CACED,QAAS,cAACgB,GAAS,IACnBf,KAAM,8BAER,CACED,QAAS,cAACe,GAAQ,IAClBd,KAAM,4BAER,CACED,QAAS,cAACiB,GAAU,IACpBhB,KAAM,4BAER,CACED,QAAS,cAACS,GAAK,IACfR,KAAM,yBAER,CACED,QAAS,cAACY,GAAM,IAChBX,KAAM,0BAER,CACED,QAAS,cAACc,GAAM,IAChBb,KAAM,0BAER,CACED,QAAS,cAACoB,GAAW,IACrBnB,KAAM,gCAER,CACED,QAAS,cAACqB,GAAY,IACtBpB,KAAM,iCAER,CACED,QAAS,cAACa,GAAM,IAChBZ,KAAM,0BAER,CACED,QAAS,cAACkB,GAAW,IACrBjB,KAAM,2BAER,CACED,QAAS,cAACQ,GAAW,IACrBP,KAAM,6BAER,CACED,QAAS,cAACM,GAAM,IAChBL,KAAM,iBAER,CACED,QAAS,cAACO,GAAU,IACpBN,KAAM,0BAER,CACED,QAAS,cAACW,GAAY,IACtBV,KAAM,yBC/EV,MAAMsB,GAAM1C,gBAAK,IAAM,kCACjB2C,GAAS3C,gBAAK,IAAM,yDACpB4C,GAAU5C,gBAAK,IAAM,kCACrB6C,GAAU7C,gBAAK,IAAM,kCACrB8C,GAAU9C,gBAAK,IAAM,mCACrB+C,GAAQ/C,gBAAK,IAAM,wDACnBgD,GAAWhD,gBAAK,IAAM,kCACtBiD,GAAWjD,gBAAK,IAAM,wDACtBkD,GAAclD,gBAAK,IAAM,kCACzBmD,GAAanD,gBAAK,IAAM,yDACxBoD,GAAgBpD,gBAAK,IAAM,sEAC3BqD,GAAcrD,gBAAK,IAAM,yDACzBsD,GAAkBtD,gBAAK,IAAM,6EAC7BuD,GAAgBvD,gBAAK,IAAM,wDAC3BwD,GAAgBxD,gBAAK,IAAM,kCAC3ByD,GAAwBzD,gBAAK,IAAM,kCACnC0D,GAAqB1D,gBAAK,IAAM,mCAiGvB2D,OA/FK,CAClB,CACEvC,KAAM,iBACND,QAAS,cAACyB,GAAO,KAEnB,CACExB,KAAM,aACND,QAAS,cAACuB,GAAG,KAEf,CACEtB,KAAM,wBACND,QAAS,cAACqC,GAAa,KAEzB,CACEpC,KAAM,kCACND,QAAS,cAACsC,GAAqB,KAEjC,CACErC,KAAM,4CACND,QAAS,cAACuC,GAAkB,KAE9B,CACEtC,KAAM,0BACND,QAAS,cAACmC,GAAe,KAE3B,CACElC,KAAM,iBACND,QAAS,cAAC2B,GAAO,KAEnB,CACE1B,KAAM,iBACND,QAAS,cAACwB,GAAM,KAElB,CACEvB,KAAM,wBACND,QAAS,cAACiC,GAAa,KAEzB,CACEhC,KAAM,mBACND,QAAS,cAAC6B,GAAQ,KAEpB,CACE5B,KAAM,yBACND,QAAS,cAAC+B,GAAW,KAEvB,CACE9B,KAAM,qBACND,QAAS,cAAC,IAAQ,CAACvb,GAAG,0BAExB,CACEwb,KAAM,uBACND,QAAS,cAAC8B,GAAQ,KAEpB,CACE7B,KAAM,mBACND,QAAS,cAAC,IAAQ,CAACvb,GAAG,wBAExB,CACEwb,KAAM,iBACND,QAAS,cAAC0B,GAAO,KAEnB,CACEzB,KAAM,oBACND,QAAS,cAACgC,GAAU,IACpB9B,KAAM,CACJuC,aAAa,EACbrC,OAAQ,UAGZ,CACEH,KAAM,uBACND,QAAS,cAACoC,GAAa,IACvBlC,KAAM,CACJuC,aAAa,EACbrC,OAAQ,UAGZ,CACEH,KAAM,oBACND,QAAS,cAACkC,GAAW,IACrBhC,KAAM,CACJuC,aAAa,EACbrC,OAAQ,UAGZ,CACEH,KAAM,cACND,QAAS,cAAC4B,GAAK,IACf1B,KAAM,CACJuC,aAAa,EACbrC,OAAQ,WC7Gd,MAAMsC,GAAa7D,gBAAK,IAAM,kCACxB8D,GAAU9D,gBAAK,IAAM,wDACrB+D,GAAY/D,gBAAK,IAAM,wDAiBdgE,OAfM,CACnB,CACE5C,KAAM,qBACND,QAAS,cAAC0C,GAAU,KAEtB,CACEzC,KAAM,oBACND,QAAS,cAAC2C,GAAO,KAEnB,CACE1C,KAAM,sBACND,QAAS,cAAC4C,GAAS,MCfvB,MAAME,GAAajE,gBAAK,IAAM,+DACxBkE,GAAUlE,gBAAK,IAAM,iEACrBmE,GAAWnE,gBAAK,IAAM,gEAiBboE,OAfS,CACtB,CACEhD,KAAM,eACND,QAAS,cAAC8C,GAAU,KAEtB,CACE7C,KAAM,kBACND,QAAS,cAAC+C,GAAO,KAEnB,CACE9C,KAAM,mBACND,QAAS,cAACgD,GAAQ,MCftB,MACME,GAAqBrE,gBAAK,IAAM,sDAcvBsE,OAZS,CAKtB,CACElD,KAAM,aACND,QAAS,cAACkD,GAAkB,IAC5B7C,QAAS,CAAC,QAAS,iBCXvB,MAAM+C,GAAavE,gBAAK,IAAM,mCACxBwE,GAAQxE,gBAAK,IAAM,kCACnByE,GAAazE,gBAAK,IAAM,kCACxB0E,GAAe1E,gBAAK,IAAM,+DAC1B2E,GAAkB3E,gBAAK,IAAM,wDAC7B4E,GAAiB5E,gBAAK,IAAM,wDAC5B6E,GAAe7E,gBAAK,IAAM,kCAC1B8E,GAAY9E,gBAAK,IAAM,mCACvB+E,GAAS/E,gBAAK,IAAM,mCACpBgF,GAAehF,gBAAK,IAAM,mCAC1BiF,GAASjF,gBAAK,IAAM,kCACpBkF,GAAQlF,gBAAK,IAAM,mCACnBmF,GAAUnF,gBAAK,IAAM,kCACrBoF,GAAcpF,gBAAK,IAAM,mCACzBqF,GAAUrF,gBAAK,IAAM,mCACrBsF,GAAWtF,gBAAK,IAAM,kCACtBuF,GAAWvF,gBAAK,IAAM,kCACtBwF,GAAUxF,gBAAK,IAAM,mCACrByF,GAAWzF,gBAAK,IAAM,mCACtB0F,GAAY1F,gBAAK,IAAM,mCACvB2F,GAAQ3F,gBAAK,IAAM,mCACnB4F,GAAe5F,gBAAK,IAAM,mCAC1B6F,GAAY7F,gBAAK,IAAM,mCACvB8F,GAAa9F,gBAAK,IAAM,mCACxB+F,GAAa/F,gBAAK,IAAM,mCACxBgG,GAAWhG,gBAAK,IAAM,mCACtBiG,GAAWjG,gBAAK,IAAM,mCACtBkG,GAAWlG,gBAAK,IAAM,mCACtBmG,GAAWnG,gBAAK,IAAM,mCACtBoG,GAAOpG,gBAAK,IAAM,mCAClBqG,GAAWrG,gBAAK,IAAM,kCACtBsG,GAAStG,gBAAK,IAAM,mCACpBuG,GAAWvG,gBAAK,IAAM,mCAyIbwG,OAvIS,CACtB,CACErF,QAAS,cAACoD,GAAU,IACpBnD,KAAM,0BAER,CACED,QAAS,cAACqD,GAAK,IACfpD,KAAM,uBAER,CACEA,KAAM,eACND,QAAS,cAACsD,GAAU,KAEtB,CACErD,KAAM,iBACND,QAAS,cAACuD,GAAY,KAExB,CACEtD,KAAM,oBACND,QAAS,cAACwD,GAAe,KAE3B,CACEvD,KAAM,mBACND,QAAS,cAACyD,GAAc,KAE1B,CACExD,KAAM,gBACND,QAAS,cAAC0D,GAAY,KAExB,CACE1D,QAAS,cAAC2D,GAAS,IACnB1D,KAAM,yBAER,CACED,QAAS,cAAC4D,GAAM,IAChB3D,KAAM,sBAER,CACED,QAAS,cAAC6D,GAAY,IACtB5D,KAAM,6BAER,CACED,QAAS,cAAC8D,GAAM,IAChB7D,KAAM,sBAER,CACED,QAAS,cAAC+D,GAAK,IACf9D,KAAM,sBAER,CACED,QAAS,cAACgE,GAAO,IACjB/D,KAAM,uBAER,CACED,QAAS,cAACiE,GAAW,IACrBhE,KAAM,2BAER,CACED,QAAS,cAACkE,GAAO,IACjBjE,KAAM,uBAER,CACED,QAAS,cAACmE,GAAQ,IAClBlE,KAAM,wBAER,CACED,QAAS,cAACoE,GAAQ,IAClBnE,KAAM,wBAER,CACED,QAAS,cAACqE,GAAO,IACjBpE,KAAM,uBAER,CACED,QAAS,cAACsE,GAAQ,IAClBrE,KAAM,yBAER,CACED,QAAS,cAACuE,GAAS,IACnBtE,KAAM,0BAER,CACED,QAAS,cAACwE,GAAK,IACfvE,KAAM,sBAER,CACED,QAAS,cAACyE,GAAY,IACtBxE,KAAM,6BAER,CACED,QAAS,cAAC0E,GAAS,IACnBzE,KAAM,yBAER,CACED,QAAS,cAAC2E,GAAU,IACpB1E,KAAM,0BAER,CACED,QAAS,cAAC4E,GAAU,IACpB3E,KAAM,2BAER,CACED,QAAS,cAAC6E,GAAQ,IAClB5E,KAAM,+BAER,CACED,QAAS,cAAC8E,GAAQ,IAClB7E,KAAM,wBAER,CACED,QAAS,cAAC+E,GAAQ,IAClB9E,KAAM,wBAER,CACED,QAAS,cAACgF,GAAQ,IAClB/E,KAAM,wBAER,CACED,QAAS,cAACiF,GAAI,IACdhF,KAAM,8BAER,CACED,QAAS,cAACkF,GAAQ,IAClBjF,KAAM,wBAER,CACED,QAAS,cAACmF,GAAM,IAChBlF,KAAM,sBAER,CACED,QAAS,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","file":"static/js/39.3ac4168a.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n// ** Custom Components\r\n// ** Store & Actions\r\n// ** Icons Imports\r\nimport { approveUserById } from '../../../../services/user.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\n\r\n// ** Table Columns\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllUsersWithSubsciptionFn } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User, Eye } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\r\n  Label, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\n// import AddModal from './AddModal'\r\n// import EditModal from './EditModal'\r\n\r\nconst UsersWithSubscription = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const store = useSelector(state => state.UsersWithSubscription)\r\n  const [selectedUser, setSelectedUser] = useState({})\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [editModal, setEditModal] = useState(false)\r\n      const [startDate, setstartDate] = useState()\r\n      const [endDate, setEndDate] = useState()\r\n  // ** Function to toggle sidebar\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    // dispatch(getAllData())\r\n    dispatch(\r\n      getAllUsersWithSubsciptionFn({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        showName: true\r\n        // currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    // ** Set Roles\r\n\r\n\r\n  }, [dispatch, store?.data?.length, sort, sortColumn, currentPage])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getAllUsersWithSubsciptionFn({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n    dispatch(\r\n      getAllUsersWithSubsciptionFn({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getAllUsersWithSubsciptionFn({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n  const handleFilterByDate = () => {\r\n    dispatch(\r\n      getAllUsersWithSubsciptionFn({\r\n        sort,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        startDate,\r\n        endDate\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  const handleStatus = async (id, status) => {\r\n    try {\r\n      const obj = {\r\n        status\r\n      }\r\n      const { data: res } = await approveUserById(id, obj)\r\n      if (res.message) {\r\n        toastSuccess(res.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n\r\n  // ** Renders Role Columns\r\n  const renderRole = row => {\r\n    const roleObj = {\r\n      USER: {\r\n        class: 'text-primary',\r\n        icon: User\r\n      },\r\n      MANUFACTURER: {\r\n        class: 'text-success',\r\n        icon: Database\r\n      },\r\n      editor: {\r\n        class: 'text-info',\r\n        icon: Edit2\r\n      },\r\n      DISTRIBUTOR: {\r\n        class: 'text-warning',\r\n        icon: Settings\r\n      },\r\n      DEALER: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      },\r\n      APPROVERS: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      }\r\n    }\r\n\r\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n    return (\r\n      <span className='text-truncate text-capitalize align-middle'>\r\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n        {row.role}\r\n      </span>\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(store, \"store\")\r\n  }, [store])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: \"User\",\r\n      sortable: true,\r\n      minWidth: \"300px\",\r\n      sortField: \"fullName\",\r\n      selector: (row) => row.name,\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {/* {renderClient(row)} */}\r\n          <div className=\"d-flex flex-column\">\r\n            <Link\r\n              to={``}\r\n              className=\"user_name text-truncate text-body\"\r\n              onClick={() => dispatch(getUser(row.id))}\r\n            >\r\n              <span className=\"fw-bolder\">\r\n                {row.companyObj?.name ? row.companyObj?.name : row.name}\r\n              </span>\r\n            </Link>\r\n            <small className=\" mb-0\">{row.email}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: \"Role\",\r\n      sortable: true,\r\n      minWidth: \"172px\",\r\n      sortField: \"role\",\r\n      selector: (row) => row?.role,\r\n      cell: (row) => renderRole(row)\r\n    },\r\n    // {\r\n    //   name: 'Plan',\r\n    //   minWidth: '138px',\r\n    //   sortable: true,\r\n    //   sortField: 'currentPlan',\r\n    //   selector: row => row.currentPlan,\r\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n    // },\r\n    // {\r\n    //   name: 'Billing',\r\n    //   minWidth: '230px',\r\n    //   sortable: true,\r\n    //   sortField: 'billing',\r\n    //   selector: row => row.billing,\r\n    //   cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n    // },\r\n    {\r\n      name: \"Approved\",\r\n      minWidth: \"138px\",\r\n      sortable: false,\r\n      sortField: \"approved\",\r\n      selector: (row) => row.approved,\r\n      cell: (row) => (\r\n        <div className=\"form-check form-switch\">\r\n          <Input\r\n            disabled\r\n            type=\"switch\"\r\n            name=\"customSwitch\"\r\n            id=\"exampleCustomSwitch\"\r\n            checked={row.approved}\r\n            onChange={() => handleStatus(row._id, !row.approved)}\r\n          />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: \"Actions\",\r\n      minWidth: \"100px\",\r\n      sortable: false,\r\n\r\n      cell: (row) => (\r\n        <>\r\n          <Link\r\n            color=\"success\"\r\n            className=\"btn-sm btn-success\"\r\n            to={`/apps/user/View-Subscription-for-user/${row._id}`}\r\n          >\r\n            <Eye size={14} />\r\n          </Link>\r\n          {/* <Button color='primary' onClick={(e) => { e.preventDefault() setSelectedUser(row) setEditModal(true) }} className='btn-sm ms-2 '\r\n          // onClick={e => {\r\n          //   e.preventDefault()\r\n          //   store.dispatch(getCityById(row._id))\r\n          // }}\r\n          >\r\n            <Edit size={14} />\r\n          </Button>\r\n          <Button color='danger' className='ms-2 btn-sm'\r\n          // onClick={e => {\r\n          //   e.preventDefault()\r\n          //   dispatch(deleteUser(row._id))\r\n          // }}\r\n          >    <Trash2 size={14} /></Button> */}\r\n        </>\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"mx-2 pt-2 \">\r\n          <Row>\r\n            <Col xl=\"3\" className=\"d-flex justify-content-start\">\r\n              <h3>\r\n                <b>Users with subscription</b>\r\n              </h3>\r\n            </Col>\r\n            <Col xl=\"2\" className=\"d-flex align-items-center p-0\">\r\n              <div className=\"d-flex align-items-center w-100\">\r\n                <label htmlFor=\"rows-per-page\">Show</label>\r\n                <Input\r\n                  className=\"mx-50\"\r\n                  type=\"select\"\r\n                  id=\"rows-per-page\"\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: \"5rem\" }}\r\n                >\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                  <option value=\"100\">100</option>\r\n                  <option value=\"500\">500</option>\r\n                </Input>\r\n                <label htmlFor=\"rows-per-page\">Entries</label>\r\n              </div>\r\n            </Col>\r\n            <Col xl=\"7\" className=\"d-flex justify-content-end\">\r\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Filter\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setstartDate(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\r\n                Filter\r\n              </Button>\r\n\r\n              {/* <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                Add New User\r\n              </Button> */}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            columns={columns}\r\n            paginationServer\r\n            paginationComponent={CustomPagination}\r\n            // sortIcon={<ChevronDown />}\r\n            data={store.data}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersWithSubscription\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UsersWithSubscription = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersWithSubscription\r\n","import axios from \"axios\"\r\nimport axiosInstance from \"./axios.service\"\r\nimport BaseUrl from './url.service'\r\n\r\nconst serverUrl = `${BaseUrl}/usersubscription`\r\n\r\nexport const buySubscription = async (obj) => {\r\n    return axiosInstance.post(`${serverUrl}/buySubscription`, obj)\r\n}\r\n\r\nexport const getAllSubscriptionbyUserId = async (id) => {\r\n    return axiosInstance.get(`${serverUrl}/getAllSubscriptionbyUserId/?${id}`)\r\n}\r\nexport const getSubscriptionSubscribedbyUserId = async (query, id) => {\r\n    return axiosInstance.get(`${serverUrl}/getSubscriptionSubscribedbyUserId/${id}?${query}`)\r\n}\r\n\r\nexport const sendMailById = async (id) => {\r\n    return axiosInstance.get(`${serverUrl}/sendMailById/${id}`)\r\n}","\r\n\r\n// ** Reactstrap Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\r\nimport _ from 'lodash'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\nimport { getAllSubscriptionbyUserId, sendMailById } from '../../../../services/UserSubscription.service'\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\nimport moment from 'moment'\r\nexport default function UserWithSubscriptionDetail() {\r\n    const { id } = useParams()\r\n    const [userSubscriptionsArr, setUserSubscriptionsArr] = useState([])\r\n    const [selectedUser, setSelectedUser] = useState({})\r\n    // ** States\r\n    const [sort, setSort] = useState('desc')\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [sortColumn, setSortColumn] = useState('name')\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n    const [sidebarOpen, setSidebarOpen] = useState(false)\r\n    const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n    // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n    const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n    const [rolesOptions, setrolesOptions] = useState([])\r\n    const [editModal, setEditModal] = useState(false)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const handleGetUsersSubscriptionById = async (query) => {\r\n        try {\r\n            const { data: res } = await getAllSubscriptionbyUserId(query)\r\n            if (res.data) {\r\n                console.log(res, \"userSUb\")\r\n                setUserSubscriptionsArr(res.data)\r\n                setTotalPages(res.totalCount)\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n\r\n    const handleSendMailById = async (id) => {\r\n        try {\r\n            const { data: res } = await sendMailById(id)\r\n            if (res.data) {\r\n                toastSuccess(res.message)\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(id ? \"true\" : \"false\")\r\n        if (id) {\r\n            handleGetUsersSubscriptionById(`userId=${id}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\r\n        }\r\n\r\n    }, [id])\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Subscription Name',\r\n            sortable: false,\r\n            minWidth: '300px',\r\n            selector: row => row.name,\r\n            cell: row => (\r\n                <div className='d-flex justify-content-left align-items-center'>\r\n                    {/* {renderClient(row)} */}\r\n                    <div className='d-flex flex-column'>\r\n                        <Link\r\n                            to={``}\r\n                            className='user_name text-truncate text-body'\r\n                            onClick={() => dispatch(getUser(row?.id))}\r\n                        >\r\n                            <span className='fw-bolder'>{row?.name}</span>\r\n                        </Link>\r\n                        <small className=' mb-0'>{row?.email}</small>\r\n                    </div>\r\n                </div>\r\n            )\r\n        },\r\n        {\r\n            name: 'Purchased On',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            selector: row => moment(row.createdAt).format(\"DD-MM-YYYY\")\r\n        },\r\n        {\r\n            name: 'Starts On',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            selector: row => moment(row.startDate).format(\"DD-MM-YYYY\")\r\n        },\r\n        {\r\n            name: 'Ends On',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            selector: row => moment(row.endDate).format(\"DD-MM-YYYY\")\r\n        },\r\n        {\r\n            name: 'Price Paid',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            selector: row => `Rs ${row.price}`\r\n        },\r\n        {\r\n            name: 'Flash Sales',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            selector: row => `${row.numberOfSales} for ${row.saleDays} Days`\r\n        },\r\n        {\r\n            name: 'Advertisements',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            selector: row => `${row.numberOfAdvertisement} for ${row.advertisementDays} Days`\r\n        },\r\n        {\r\n            name: 'Send Pdf Mail',\r\n            minWidth: '138px',\r\n            sortable: false,\r\n            cell: row => (\r\n                <>\r\n                  <Button type='button' color='success' className='btn-sm btn-success' onClick={() => handleSendMailById(row?._id)}>\r\n                    Send</Button>\r\n             \r\n                </>\r\n        \r\n              )\r\n        }\r\n        // {\r\n        //   name: 'Billing',\r\n        //   minWidth: '230px',\r\n        //   sortable: true,\r\n        //   sortField: 'billing',\r\n        //   selector: row => row.billing,\r\n        //   cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n        // },\r\n\r\n    ]\r\n\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected + 1)\r\n        console.log(page.selected, \"totalCount\")\r\n        handleGetUsersSubscriptionById(`userId=${id}&rowsPerPage=${rowsPerPage}&currentPage=${page.selected + 1}`)\r\n        // dispatch(\r\n        //   getAllUsersWithSubsciptionFn({\r\n        //     sort,\r\n        //     sortColumn,\r\n        //     q: searchTerm,\r\n        //     perPage: rowsPerPage,\r\n        //     page: page.selected + 1,\r\n        //     role: currentRole.value,\r\n        //     status: currentStatus.value\r\n        //   })\r\n        // )\r\n        // setCurrentPage(page.selected + 1)\r\n    }\r\n\r\n    const handlePerPage = e => {\r\n        const value = parseInt(e.currentTarget.value)\r\n        setCurrentPage(1)\r\n        handleGetUsersSubscriptionById(`userId=${id}&rowsPerPage=${value}&currentPage=${1}`)\r\n        setRowsPerPage(value)\r\n    }\r\n\r\n\r\n    const CustomPagination = () => {\r\n        const count = Number(Math.ceil(totalPages / rowsPerPage))\r\n\r\n        return (\r\n            <ReactPaginate\r\n                previousLabel={''}\r\n                nextLabel={''}\r\n                pageCount={count || 1}\r\n                activeClassName='active'\r\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n                onPageChange={page => handlePagination(page)}\r\n                pageClassName={'page-item'}\r\n                nextLinkClassName={'page-link'}\r\n                nextClassName={'page-item next'}\r\n                previousClassName={'page-item prev'}\r\n                previousLinkClassName={'page-link'}\r\n                pageLinkClassName={'page-link'}\r\n                containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <Link to=\"/apps/user/Users-With-Subscription\" className=' btn btn-sm btn-warning' color='primary'>\r\n                    <ArrowUpLeft />Back\r\n                </Link>\r\n\r\n                <Col xl='9' className='d-flex align-items-center p-0'>\r\n                    <div className='d-flex align-items-center w-100'>\r\n                        <label htmlFor='rows-per-page'>Show</label>\r\n                        <Input\r\n                            className='mx-50'\r\n                            type='select'\r\n                            id='rows-per-page'\r\n                            value={rowsPerPage}\r\n                            onChange={handlePerPage}\r\n                            style={{ width: '5rem' }}\r\n                        >\r\n                            <option value='1'>1</option>\r\n                            <option value='10'>10</option>\r\n                            <option value='25'>25</option>\r\n                            <option value='50'>50</option>\r\n                            <option value='100'>100</option>\r\n                            <option value='500'>500</option>\r\n                        </Input>\r\n                        <label htmlFor='rows-per-page'>Entries</label>\r\n                    </div>\r\n                </Col>\r\n                <CardTitle tag='h4'>User's Subscriptions</CardTitle>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n                <Row>\r\n                    <div>\r\n                        <DataTable\r\n                            noHeader\r\n                            pagination\r\n                            columns={columns}\r\n                            paginationServer\r\n                            paginationComponent={CustomPagination}\r\n                            // sortIcon={<ChevronDown />}\r\n                            data={userSubscriptionsArr}\r\n                        />\r\n                    </div>\r\n                </Row>\r\n            </CardBody>\r\n        </Card >\r\n    )\r\n}","// ** Reactstrap Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\nimport { addSubscription, getSubscriptionById, updateSubscription } from '../store'\r\nimport _ from 'lodash'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport { ROLES_CONSTANT } from '../../../utility/constant'\r\nimport Select from 'react-select'\r\n\r\nconst AddSubscription = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const subscriptionObj = useSelector(state => state.subscription.selectedSubscription)\r\n  const [selectedSubscription, setSelectedSubscription] = useState({})\r\n\r\n  const [includesFlashSales, setIncludesFlashSales] = useState(false)\r\n  const [includesAdvertisements, setIncludesAdvertisements] = useState(false)\r\n  const [includesValidity, setIncludesValidity] = useState(false)\r\n\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setname] = useState(\"\")\r\n  const [noOfMonth, setNoOfMonth] = useState(1)\r\n  const [price, setPrice] = useState(0)\r\n  const [description, setDescription] = useState(\"\")\r\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\r\n  const [numberOfSales, setNumberOfSales] = useState(0)\r\n  const [saleDays, setSaleDays] = useState(0)\r\n  const [numberOfAdvertisement, setNumberOfAdvertisement] = useState(0)\r\n  const [advertisementDays, setAdvertisementDays] = useState(0)\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [role, setRole] = useState(\"\")\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n\r\n    if (`${price}` === '' || price <= 0) {\r\n      toastError('Please Fill Price with a valid input (more than 0)')\r\n      return 0\r\n    }\r\n    // if (`${description}` === '') {\r\n    //   toastError('Please Fill Description')\r\n    //   return 0\r\n    // }\r\n    if (includesValidity) {\r\n      if (`${noOfMonth}` === '' || noOfMonth <= 0) {\r\n        toastError('Please Fill No of months with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n    }\r\n    if (includesAdvertisements) {\r\n\r\n      if (parseInt(numberOfAdvertisement) < 0) {\r\n        toastError('Please Fill No of Advertisement with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n\r\n      if (parseInt(advertisementDays) < 0) {\r\n        toastError('Please Fill No of days of Advertisement with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n\r\n    }\r\n\r\n    if (includesFlashSales) {\r\n\r\n      if (parseInt(numberOfSales) < 0) {\r\n        toastError('Please Fill No of Flashsales with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n      if (parseInt(saleDays) < 0) {\r\n        toastError('Please Fill No of days of Flashsales with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n\r\n    }\r\n\r\n    if (parseInt(price) < 0) {\r\n      toastError('Please Fill Price with a valid input (more than 0)')\r\n      return 0\r\n    }\r\n\r\n    if (!role || !role?.value) {\r\n      toastError('Please Select Role for Subscription')\r\n      return 0\r\n    }\r\n\r\n    const obj = {\r\n      name,\r\n      price,\r\n      description,\r\n      messageArr,\r\n      includesFlashSales,\r\n      includesAdvertisements,\r\n      includesValidity,\r\n      role: role?.value\r\n    }\r\n\r\n    if (includesAdvertisements) {\r\n      obj.numberOfAdvertisement = numberOfAdvertisement\r\n      obj.advertisementDays = advertisementDays\r\n    }\r\n\r\n\r\n    if (includesFlashSales) {\r\n      obj.numberOfSales = numberOfSales\r\n      obj.saleDays = saleDays\r\n    }\r\n    if (includesValidity) {\r\n      obj.noOfMonth = noOfMonth\r\n    }\r\n    if (isEditing === true) {\r\n      dispatch(\r\n        updateSubscription({\r\n          ...obj,\r\n          id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addSubscription(obj)\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (subscriptionObj && subscriptionObj.name && isEditing) {\r\n      setname(subscriptionObj?.name ? subscriptionObj?.name : \"\")\r\n      if (subscriptionObj?.role) {\r\n        setRole({ label: subscriptionObj?.role, value: subscriptionObj?.role })\r\n      }\r\n      setDescription(subscriptionObj?.description ? subscriptionObj?.description : \"\")\r\n      setNoOfMonth(subscriptionObj?.noOfMonth ? subscriptionObj?.noOfMonth : \"\")\r\n      setPrice(subscriptionObj?.price ? subscriptionObj?.price : \"\")\r\n      setSaleDays(subscriptionObj?.saleDays ? subscriptionObj?.saleDays : \"\")\r\n      setNumberOfSales(subscriptionObj?.numberOfSales ? subscriptionObj?.numberOfSales : \"\")\r\n      setMessageArr(subscriptionObj?.messageArr ? subscriptionObj?.messageArr : [{ message: \"\" }])\r\n      setIncludesFlashSales(subscriptionObj?.includesFlashSales)\r\n      setIncludesAdvertisements(subscriptionObj?.includesAdvertisements)\r\n      setIncludesValidity(subscriptionObj?.includesValidity)\r\n      setNumberOfAdvertisement(subscriptionObj?.numberOfAdvertisement)\r\n      setAdvertisementDays(subscriptionObj?.advertisementDays)\r\n    } else {\r\n      setname(\"\")\r\n      setDescription(\"\")\r\n      setRole(\"\")\r\n      setNoOfMonth(1)\r\n      setPrice(1)\r\n      setSaleDays(0)\r\n      setIncludesFlashSales(false)\r\n      setIncludesAdvertisements(false)\r\n      setIncludesValidity(false)\r\n      setNumberOfAdvertisement(0)\r\n      setAdvertisementDays(0)\r\n      setNumberOfSales(1)\r\n      setMessageArr([{ message: \"\" }])\r\n    }\r\n\r\n  }, [subscriptionObj, isEditing])\r\n\r\n\r\n  const handleGetSubscriptionById = () => {\r\n    dispatch(getSubscriptionById(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(id ? \"true\" : \"false\")\r\n    const roleSelect = Object.values(ROLES_CONSTANT).map(el => {\r\n      return { label: el, value: el }\r\n    }).filter((el => el.label !== \"ADMIN\"))\r\n    // console.log(store, \"storestorestorestore\")\r\n    setrolesOptions([...roleSelect])\r\n\r\n    if (id) {\r\n      handleGetSubscriptionById()\r\n      setIsEditing(true)\r\n    }\r\n\r\n  }, [id])\r\n\r\n\r\n  const handleAddSubscription = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    tempArr.push({ message: \"\" })\r\n    setMessageArr([...tempArr])\r\n  }\r\n\r\n\r\n  const handleRemoveSubscription = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    if (tempArr.length > 1) {\r\n      tempArr.pop()\r\n      setMessageArr([...tempArr])\r\n    }\r\n  }\r\n\r\n  const handleSetMessge = (value, index) => {\r\n    const tempArr = _.cloneDeep(messageArr)\r\n    // setMessageArr(messageArr.map((ele, indexX) => {\r\n    //   if (indexX === index) {\r\n    //     ele.message = value\r\n    //   }\r\n    //   return ele\r\n    // }))\r\n    tempArr[index].message = value\r\n    setMessageArr([...tempArr])\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/subscription/View\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Subscription</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Name\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Subscription Name' />\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Description\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Description' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Role\r\n            </Label>\r\n            <Select\r\n              isClearable={false}\r\n              value={role}\r\n              options={rolesOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              onChange={(val) => setRole(val)}\r\n            />\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col className='mb-1 my-3' xl='2' md='2' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Flash sales\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesFlashSales} onChange={(e) => setIncludesFlashSales(e.target.checked)} />\r\n          </Col>\r\n          <Col className='mb-1  my-3' xl='3' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Advertisements\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesAdvertisements} onChange={(e) => setIncludesAdvertisements(e.target.checked)} />\r\n          </Col>\r\n          <Col className='mb-1  my-3' xl='2' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Validity\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesValidity} onChange={(e) => setIncludesValidity(e.target.checked)} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\r\n            includesFlashSales &&\r\n            <>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of sales allowed in this subscription\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={numberOfSales} onChange={(e) => setNumberOfSales(e.target.value)} placeholder='Enter number Of sales allowed in this subscription' />\r\n              </Col>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of days for which Sales are allowed in this subscription\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={saleDays} onChange={(e) => setSaleDays(e.target.value)} placeholder='Enter the number Of days for which Sales are allowed in this subscription' />\r\n              </Col>\r\n            </>\r\n          }\r\n        </Row>\r\n        <Row>\r\n          {\r\n            includesAdvertisements &&\r\n            <>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of advertisements allowed in this subscription\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={numberOfAdvertisement} onChange={(e) => setNumberOfAdvertisement(e.target.value)} placeholder=' Number Of advertisements allowed in this subscription' />\r\n              </Col>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of days for which advertisements are allowed in this subscription\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={advertisementDays} onChange={(e) => setAdvertisementDays(e.target.value)} placeholder='Number Of days for which advertisements are allowed in this subscription' />\r\n              </Col>\r\n            </>\r\n          }\r\n          {\r\n            includesValidity &&\r\n            <Col className='mb-1' xl='6' md='6' sm='12'>\r\n              <Label className='form-label' for='basicInput'>\r\n                Duration in months ({noOfMonth})\r\n              </Label>\r\n              <Input type='number' id='basicInput' value={`${noOfMonth}`} onChange={(e) => setNoOfMonth(e.target.value)} placeholder='Enter Duration in days' />\r\n            </Col>\r\n          }\r\n        </Row>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Price\r\n            </Label>\r\n            <Input type='number' id='basicInput' value={price} onChange={(e) => setPrice(e.target.value)} placeholder='Enter Subscription Price' />\r\n          </Col>\r\n\r\n\r\n          <Col className='mb-1 d-flex justify-content-between' xl='12' md='12' sm='12'>\r\n            <Label for='basicInput'>\r\n              Message\r\n            </Label>\r\n            <div>\r\n              <Button type='button' className='me-1' color='primary' onClick={() => handleAddSubscription()}>\r\n                +\r\n              </Button>\r\n              <Button type='button' className='me-1' color='danger' onClick={() => handleRemoveSubscription()}>\r\n                -\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Row className='mb-1' xl='12' md='12' sm='12'>\r\n\r\n            {\r\n              messageArr && messageArr.length > 0 && messageArr.map((el, index) => {\r\n                return (\r\n                  <Col key={index} className=\"mt-2\" xl='4' md='4' sm='4'>\r\n                    <Input type='text' id='basicInput' value={el?.message} onChange={(e) => handleSetMessge(e.target.value, index)} placeholder={`Message ${index + 1}`} />\r\n                  </Col>\r\n                )\r\n              })\r\n            }\r\n          </Row>\r\n\r\n          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card >\r\n  )\r\n}\r\nexport default AddSubscription\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteSubscription } from '../store'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"10%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'Description',\r\n    sortable: false,\r\n    sortField: 'description',\r\n    width: \"25%\",\r\n    cell: row => row?.description\r\n  },\r\n  {\r\n    name: 'Duration in months',\r\n    sortable: false,\r\n    sortField: 'noOfMonth',\r\n    width: \"15%\",\r\n    cell: row => `${row?.noOfMonth} ${row.noOfMonth === 1 ? \"month\" : \"months\"}`\r\n  },\r\n  {\r\n    name: 'Price',\r\n    sortable: false,\r\n    sortField: 'Price',\r\n    width: \"15%\",\r\n    cell: row => `₹ ${row?.price}`\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Link color='primary' to={`/subscription/edit/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Edit size={14} />\r\n        </Link>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteSubscription(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getSubscription } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.subscription)\r\n  const subscriptionArr = useSelector(state => state.subscription.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getSubscription({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getSubscription({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetSubscriptions = () => {\r\n    dispatch(getSubscription({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetSubscriptions()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getSubscription({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/subscription/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Database, Edit2, Eye, Settings, Slack, User } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport moment from 'moment'\r\nimport { updateProductApi } from '../../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"5.6%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Owner Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"15%\",\r\n    cell: row => row?.userId?.name\r\n  },\r\n  {\r\n    name: 'Product Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.productId?.name\r\n  },\r\n  {\r\n    name: 'Discount Type',\r\n    sortable: false,\r\n    sortField: 'discounttype',\r\n    // width: \"25%\",\r\n    cell: row => row?.discountType\r\n  },\r\n  {\r\n    name: 'Discount Value',\r\n    sortable: false,\r\n    sortField: 'DiscountValue',\r\n    // width: \"15%\",\r\n    cell: row => `${row?.discountValue} ${row.discountType === \"Percentage\" ? \"%\" : \"flat\"} OFF`\r\n  },\r\n  {\r\n    name: 'Offer Price',\r\n    sortable: false,\r\n    sortField: 'Price',\r\n    // width: \"15%\",\r\n    cell: row => `₹ ${row?.salePrice}`\r\n  },\r\n  // {\r\n  //   name: 'Product Price',\r\n  //   sortable: false,\r\n  //   sortField: 'PPrice',\r\n  //   cell: row => `₹ ${row?.price}`\r\n  // },\r\n  {\r\n    name: 'Start Date',\r\n    sortable: false,\r\n    sortField: 'S Date',\r\n    cell: row => `${moment(row?.startDate).format(\"DD-MM-YYYY\")}`\r\n  },\r\n  {\r\n    name: 'End Date',\r\n    sortable: false,\r\n    sortField: 'e Date',\r\n    cell: row => `${moment(row?.endDate).format(\"DD-MM-YYYY\")}`\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Link color='primary' to={`/flash-sales/view-details/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Eye size={14} />\r\n        </Link>\r\n        {/* <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            // store.dispatch(deleteSubscription(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button> */}\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFlashSales } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.FlashSales)\r\n  const FlashSalesArr = useSelector(state => state.FlashSales.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getFlashSales({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getFlashSales({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetFlashSales = () => {\r\n    dispatch(getFlashSales({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetFlashSales()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getFlashSales({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={FlashSalesArr}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","\r\n\r\n// ** Reactstrap Imports\r\nimport moment from 'moment'\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Card, CardBody, CardHeader, CardTitle, Row } from 'reactstrap'\r\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\r\nimport { getFlashSalebyId } from '../../../../services/FlashSales.service'\r\nimport { toastError } from '../../../../utility/toastutill'\r\nexport default function FlashSalesDetails() {\r\n    const { id } = useParams()\r\n    const [flashSaleObj, setFlashSaleObj] = useState({})\r\n    // ** States\r\n    const handleGetUsersSubscriptionById = async (query) => {\r\n        try {\r\n            const { data: res } = await getFlashSalebyId(query)\r\n            if (res.data) {\r\n                console.log(res, \"userSUb\")\r\n                setFlashSaleObj(res.data)\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(id ? \"true\" : \"false\")\r\n        if (id) {\r\n            handleGetUsersSubscriptionById(id)\r\n        }\r\n\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <Link to=\"/flash-sales/view\" className=' btn btn-sm btn-warning' color='primary'>\r\n                    <ArrowUpLeft />Back\r\n                </Link>\r\n\r\n\r\n                <CardTitle tag='h4'>User's Subscriptions</CardTitle>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n                <Row>\r\n                    <div>\r\n                        <table class=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Owner Name</td>\r\n                                    <td>{flashSaleObj?.userId?.name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Product Name</td>\r\n                                    <td>{flashSaleObj?.productId?.name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Discount Type</td>\r\n                                    <td>{flashSaleObj?.discountType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Discount Value</td>\r\n                                    <td>{flashSaleObj?.discountValue}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Sale Price</td>\r\n                                    <td>{flashSaleObj?.salePrice}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Product Price</td>\r\n                                    <td>{flashSaleObj?.price}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Sale Starts on</td>\r\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Sale ends on</td>\r\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </Row>\r\n            </CardBody>\r\n        </Card >\r\n    )\r\n}","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteSubscription } from '../store'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"5.3%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"15%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'Description',\r\n    sortable: false,\r\n    sortField: 'description',\r\n    width: \"15%\",\r\n    cell: row => row?.description\r\n  },\r\n  {\r\n    name: 'Avertisements',\r\n    sortable: false,\r\n    sortField: 'noOfMonth',\r\n    width: \"15%\",\r\n    cell: row => `${row?.numberOfAdvertisements}`\r\n  },\r\n  {\r\n    name: 'Days Allowed',\r\n    sortable: false,\r\n    sortField: 'Days Allowed',\r\n    width: \"15%\",\r\n    cell: row => `${row?.advertisementDays} ${row?.advertisementDays === 1 ? \"Day\" : \"Days\"}`\r\n  },\r\n  {\r\n    name: 'Price',\r\n    sortable: false,\r\n    sortField: 'Price',\r\n    width: \"15%\",\r\n    cell: row => `₹ ${row?.price}`\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Link color='primary' to={`/subscription/advertisement/edit/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Edit size={14} />\r\n        </Link>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteSubscription(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getSubscription } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst AdverisementSubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.subscription)\r\n  const subscriptionArr = useSelector(state => state.subscription.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getSubscription({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getSubscription({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetSubscriptions = () => {\r\n    dispatch(getSubscription({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetSubscriptions()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getSubscription({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/subscription/advertisement/add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AdverisementSubscriptionList\r\n","// ** Reactstrap Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\nimport { addSubscription, getSubscriptionById, updateSubscription } from '../store'\r\nimport _ from 'lodash'\r\nconst AddAdvertisementSubscription = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const subscriptionObj = useSelector(state => state.subscription.selectedSubscription)\r\n  const [selectedSubscription, setSelectedSubscription] = useState({})\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setname] = useState(\"\")\r\n  const [noOfMonth, setNoOfMonth] = useState(1)\r\n  const [price, setPrice] = useState(0)\r\n  const [description, setDescription] = useState(\"\")\r\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\r\n  const [numberOfAdvertisements, setNumberOfAdvertisements] = useState(0)\r\n  const [advertisementDays, setAdvertisementDays] = useState(0)\r\n\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n\r\n    if (`${price}` === '' || price <= 0) {\r\n      toastError('Please Fill Price with a valid input (more than 0)')\r\n      return 0\r\n    }\r\n\r\n    if (`${description}` === '') {\r\n      toastError('Please Fill Description')\r\n      return 0\r\n    }\r\n\r\n\r\n    if (isEditing === true) {\r\n      dispatch(\r\n        updateSubscription({\r\n          name,\r\n          price,\r\n          description,\r\n          advertisementDays,\r\n          numberOfAdvertisements: numberOfAdvertisements ? numberOfAdvertisements : 0,\r\n          id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addSubscription({\r\n          name,\r\n          price,\r\n          description,\r\n          advertisementDays,\r\n          numberOfAdvertisements: numberOfAdvertisements ? numberOfAdvertisements : 0\r\n        })\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (subscriptionObj && subscriptionObj.name && isEditing) {\r\n      setname(subscriptionObj?.name ? subscriptionObj?.name : \"\")\r\n      setDescription(subscriptionObj?.description ? subscriptionObj?.description : \"\")\r\n      setPrice(subscriptionObj?.price ? subscriptionObj?.price : \"\")\r\n      setAdvertisementDays(subscriptionObj?.advertisementDays ? subscriptionObj?.advertisementDays : \"\")\r\n      setNumberOfAdvertisements(subscriptionObj?.numberOfAdvertisements ? subscriptionObj?.numberOfAdvertisements : \"\")\r\n    } else {\r\n      setname(\"\")\r\n      setDescription(\"\")\r\n      setPrice(\"\")\r\n      setAdvertisementDays(0)\r\n      setNumberOfAdvertisements(\"\")\r\n    }\r\n\r\n  }, [subscriptionObj, isEditing])\r\n\r\n\r\n  const handleGetSubscriptionById = () => {\r\n    dispatch(getSubscriptionById(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(id ? \"true\" : \"false\")\r\n    if (id) {\r\n      handleGetSubscriptionById()\r\n      setIsEditing(true)\r\n    }\r\n\r\n  }, [id])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/subscription/advertisement/view\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Advertisement Subscription</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Name\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Subscription Name' />\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Description\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Description' />\r\n          </Col>\r\n\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Number Of advertisements allowed in this subscription\r\n            </Label>\r\n            <Input type='number' id='basicInput' value={numberOfAdvertisements} onChange={(e) => setNumberOfAdvertisements(e.target.value)} placeholder='Enter number Of sales allowed in this subscription' />\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Number Of days for which Advertisements are allowed in this subscription\r\n            </Label>\r\n            <Input type='number' id='basicInput' value={advertisementDays} onChange={(e) => setAdvertisementDays(e.target.value)} placeholder='Enter the number Of days for which Sales are allowed in this subscription' />\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Price\r\n            </Label>\r\n            <Input type='number' id='basicInput' value={price} onChange={(e) => setPrice(e.target.value)} placeholder='Enter Subscription Price' />\r\n          </Col>\r\n\r\n\r\n          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card >\r\n  )\r\n}\r\nexport default AddAdvertisementSubscription\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit, Eye } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteSubscription, deleteTicket } from '../store'\r\nimport moment from 'moment'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"5.6%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Heading',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'User Name',\r\n    sortable: false,\r\n    sortField: 'sname',\r\n    cell: row => row?.userId?.name\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Link color='primary' to={`/User-Tickets/View/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Eye size={14} />\r\n        </Link>\r\n      <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteTicket(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button> \r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTickets } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst TicketList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Tickets)\r\n  const FlashSalesArr = useSelector(state => state.Tickets.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getTickets({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getTickets({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetFlashSales = () => {\r\n    dispatch(getTickets({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetFlashSales()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getTickets({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={[...FlashSalesArr]}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TicketList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst Tickets = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tickets\r\n","\r\n\r\n// ** Reactstrap Imports\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AddTicketMessage, getTicketMessagesbyId } from '../../../services/UserTicketMessage.service'\r\nimport { DisplayDate } from '../../../utility/DateUtils'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nexport default function UserTicketDetails() {\r\n    const { id } = useParams()\r\n    const params = useParams()\r\n    const [messageArr, setMessageArr] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n    const [ticketObj, setTicketObj] = useState({})\r\n    const userId = useSelector(state => state.auth.userData.userId)\r\n\r\n\r\n    const handleGetUserTickets = async () => {\r\n        try {\r\n            const { data: res } = await getTicketMessagesbyId(params.id)\r\n            if (res.data) {\r\n                setMessageArr(res.data.ticketMessageArr)\r\n                setTicketObj(res.data)\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        handleGetUserTickets()\r\n    }, [params])\r\n\r\n\r\n    const commentsEndRef = useRef()\r\n    const commentsContainerRef = useRef()\r\n\r\n    const handleAddComment = async () => {\r\n        try {\r\n            const obj = {\r\n                message,\r\n                userTicketsId: params.id,\r\n                userId\r\n            }\r\n            const { data: res } = await AddTicketMessage(obj)\r\n            if (res.message) {\r\n                toastSuccess(res.message)\r\n                setMessage(\"\")\r\n                handleGetUserTickets()\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n\r\n            <div className=\"row mt-4\">\r\n                <h3 className=' mb-3'>Ticket for - {ticketObj?.name}</h3>\r\n\r\n                <div className='col-12' ref={commentsContainerRef} style={{ border: \"solid 1px rgba(0,0,0,0.2)\", padding: 15, borderRadius: 15, minHeight: \"40vh\", maxHeight: \"60vh\", overflowY: \"auto\", display: \"grid\", placeItems: \"center\" }}>\r\n                    {messageArr && messageArr.length > 0 && messageArr.map((el, index) => {\r\n                        return (\r\n                            <div style={{ border: \"solid 1px white\", borderRadius: 5, width: \"80%\", marginLeft: el?.userId !== userId ? \"-20%\" : \"20%\", marginBottom: 15, backgroundColor: el?.userId !== userId ? \"#E7B84E\" : \"grey\", padding: 10 }} key={index}>\r\n                                <div style={{ fontSize: 17, fontWeight: \"600\", color: \"white\" }}>\r\n                                    {el.message}\r\n                                </div>\r\n                                <div className=\"row d-flex justify-content-between mt-3\">\r\n                                    <div className='col-11' style={{ fontSize: 12, color: \"white\" }}>\r\n                                        by {el?.userId === userId ? \"You\" : \"Team cloud bazar\"}\r\n                                    </div>\r\n                                    <div className='col-1 d-flex justify-content-end' style={{ fontSize: 12, color: \"white\" }}>\r\n                                        {DisplayDate(el?.createdAt, \"dd/mm/yyyy\")}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div ref={commentsEndRef} style={{ marginTop: 170 }} />\r\n                </div>\r\n\r\n\r\n                <div className=\"row d-flex justify-content-between my-4\">\r\n                    <textarea className=\"form-control col-10\" style={{ width: \"80%\" }} onChange={(e) => setMessage(e.target.value)} value={message} name=\"name\" type=\"text\" />\r\n                    <button onClick={() => handleAddComment()} className=\"btn btn-custom btn-yellow mt-2\" style={{ height: 40, width: \"15%\" }}>\r\n                        send message\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export const DisplayDate = (value, format) => {\r\n    if (format) {\r\n        if (`${format}`.toLowerCase() === \"dd/mm/yyyy\".toLowerCase()) {\r\n            return `${new Date(value).getDate()}/${new Date(value).getMonth() + 1}/${new Date(value).getFullYear()}`\r\n        } else if (`${format}`.toLowerCase() === \"dd-mm-yyyy\".toLowerCase()) {\r\n            return `${new Date(value).getDate()}-${new Date(value).getMonth() + 1}-${new Date(value).getFullYear()}`\r\n        } else if (`${format}`.toLowerCase() === \"mm-dd-yyyy\".toLowerCase()) {\r\n            return `${new Date(value).getMonth() + 1}-${new Date(value).getDate()}-${new Date(value).getFullYear()}`\r\n        } else if (`${format}`.toLowerCase() === \"mm/dd/yyyy\".toLowerCase()) {\r\n            return `${new Date(value).getMonth() + 1}/${new Date(value).getDate()}/${new Date(value).getFullYear()}`\r\n        }\r\n    } else {\r\n        return `${new Date(value).getDate()}/${new Date(value).getMonth() + 1}/${new Date(value).getFullYear()}`\r\n    }\r\n}","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Database, Edit2, Eye, Settings, Slack, User } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport moment from 'moment'\r\nimport { updateProductApi } from '../../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"5.6%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Owner Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"15%\",\r\n    cell: row => row?.userId?.name\r\n  },\r\n  {\r\n    name: 'Product Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.productId?.name\r\n  },\r\n  {\r\n    name: 'Message',\r\n    sortable: false,\r\n    sortField: 'discounttype',\r\n    // width: \"25%\",\r\n    cell: row => row?.message\r\n  },\r\n  {\r\n    name: 'Start Date',\r\n    sortable: false,\r\n    sortField: 'S Date',\r\n    cell: row => `${moment(row?.startDate).format(\"DD-MM-YYYY\")}`\r\n  },\r\n  {\r\n    name: 'End Date',\r\n    sortable: false,\r\n    sortField: 'e Date',\r\n    cell: row => `${moment(row?.endDate).format(\"DD-MM-YYYY\")}`\r\n  }\r\n  // {\r\n  //   name: 'Actions',\r\n  //   cell: row => (\r\n  //     <>\r\n\r\n  //       <Link color='primary' to={`/Promotions/view-details/${row._id}`} className='btn-sm  btn-primary'>\r\n  //         <Eye size={14} />\r\n  //       </Link>\r\n\r\n  //     </>\r\n  //   )\r\n  // }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPromotions } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Promotions)\r\n  const FlashSalesArr = useSelector(state => state.Promotions.data)\r\n  // const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getPromotions({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getPromotions({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handlegetPromotions = () => {\r\n    dispatch(getPromotions({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handlegetPromotions()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getPromotions({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={FlashSalesArr}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst PromotionList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PromotionList\r\n","\r\n\r\n// ** Reactstrap Imports\r\nimport moment from 'moment'\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Card, CardBody, CardHeader, CardTitle, Row } from 'reactstrap'\r\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\r\nimport { getFlashSalebyId } from '../../../../services/FlashSales.service'\r\nimport { toastError } from '../../../../utility/toastutill'\r\nexport default function PromotionDetails() {\r\n    const { id } = useParams()\r\n    const [flashSaleObj, setFlashSaleObj] = useState({})\r\n    // ** States\r\n    const handleGetUsersSubscriptionById = async (query) => {\r\n        try {\r\n            const { data: res } = await getFlashSalebyId(query)\r\n            if (res.data) {\r\n                console.log(res, \"userSUb\")\r\n                setFlashSaleObj(res.data)\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(id ? \"true\" : \"false\")\r\n        if (id) {\r\n            handleGetUsersSubscriptionById(id)\r\n        }\r\n\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <Link to=\"/flash-sales/view\" className=' btn btn-sm btn-warning' color='primary'>\r\n                    <ArrowUpLeft />Back\r\n                </Link>\r\n\r\n\r\n                <CardTitle tag='h4'>User's Subscriptions</CardTitle>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n                <Row>\r\n                    <div>\r\n                        <table class=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Owner Name</td>\r\n                                    <td>{flashSaleObj?.userId?.name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Product Name</td>\r\n                                    <td>{flashSaleObj?.productId?.name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Discount Type</td>\r\n                                    <td>{flashSaleObj?.discountType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Discount Value</td>\r\n                                    <td>{flashSaleObj?.discountValue}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Sale Price</td>\r\n                                    <td>{flashSaleObj?.salePrice}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Product Price</td>\r\n                                    <td>{flashSaleObj?.price}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Sale Starts on</td>\r\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Sale ends on</td>\r\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </Row>\r\n            </CardBody>\r\n        </Card >\r\n    )\r\n}","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\n// ** Axios Imports\r\nimport { addSubscriptionApi, deleteSubscriptionApi, getByIdApi, getSubscriptionApi, getSubscriptionWithSubscriberCountApi, updateSubscriptionApi } from '../../../../services/subscription.service'\r\nimport { getSubscriptionSubscribedbyUserId } from '../../../../services/UserSubscription.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n\r\nexport const getSubscription = createAsyncThunk('Subscription/getSubscription', async params => {\r\n  let query = ``\r\n  if (params) {\r\n    if (params.q) {\r\n      query = `${query}&q=${params.q}`\r\n    }\r\n    if (params.perPage) {\r\n      query = `${query}&perPage=${params.perPage}`\r\n    }\r\n    if (params.page) {\r\n      query = `${query}&page=${params.page}`\r\n    }\r\n    if (params.status) {\r\n      query = `${query}&status=${params.status}`\r\n    }\r\n  }\r\n  const response = await getSubscriptionWithSubscriberCountApi(query)\r\n  return {\r\n    params,\r\n    data: response.data.data,\r\n    subscriptionCount: response.data.subscriptionCount\r\n  }\r\n})\r\nexport const getSubscriptionSubscribedUser = createAsyncThunk('Subscription/getSubscriptionSubscribedUser', async params => {\r\n  let query = ``\r\n  if (params) {\r\n    if (params.q) {\r\n      query = `${query}&q=${params.q}`\r\n    }\r\n    if (params.perPage) {\r\n      query = `${query}&perPage=${params.perPage}`\r\n    }\r\n    if (params.page) {\r\n      query = `${query}&page=${params.page}`\r\n    }\r\n    if (params.status) {\r\n      query = `${query}&status=${params.status}`\r\n    }\r\n  }\r\n  const response = await getSubscriptionSubscribedbyUserId(query, params.id)\r\n  console.log(response.data.data, \"response.data.data\")\r\n  return {\r\n    params,\r\n    data: response.data.data,\r\n    subscriptionCount: response.data.subscriptionCount\r\n  }\r\n})\r\n\r\nexport const getSubscriptionById = createAsyncThunk('Subscription/getSubscriptionById', async id => {\r\n  try {\r\n    const response = await getByIdApi(id)\r\n    toastSuccess(response.data.message)\r\n    return response.data.data\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n})\r\n\r\nexport const addSubscription = createAsyncThunk('Subscription/addSubscription', async (formData, { dispatch }) => {\r\n\r\n  try {\r\n    const res = await addSubscriptionApi(formData)\r\n    if (res.data) {\r\n      toastSuccess(res.data.message)\r\n      await dispatch(getSubscription())\r\n    }\r\n\r\n    return res.data.success ? res.data.success : false\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n\r\n})\r\n\r\nexport const updateSubscription = createAsyncThunk('Subscription/updateSubscription', async (formData, { dispatch }) => {\r\n\r\n  try {\r\n    const res = await updateSubscriptionApi(formData, formData.id)\r\n    if (res.data.success) {\r\n      toastSuccess(res.data.message)\r\n      await dispatch(getSubscription())\r\n    }\r\n\r\n    return res.data.success ? res.data.success : false\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n\r\n})\r\n\r\nexport const deleteSubscription = createAsyncThunk('Subscription/deleteSubscription', async (id, { dispatch }) => {\r\n  try {\r\n    const res = await deleteSubscriptionApi(id)\r\n    if (res.data.success) {\r\n      toastSuccess(res.data.message)\r\n      await dispatch(getSubscription())\r\n    }\r\n    return id\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n})\r\n\r\nexport const SubscriptionSlice = createSlice({\r\n  name: 'Subscription',\r\n  initialState: {\r\n    data: [],\r\n    params: {},\r\n    allData: [],\r\n    selectedSubscription: null,\r\n    success: false\r\n  },\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getSubscription.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.subscriptionCount\r\n      })\r\n      .addCase(getSubscriptionSubscribedUser.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.subscriptionCount\r\n      })\r\n  }\r\n})\r\n\r\nexport default SubscriptionSlice.reducer\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit, Eye } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\nimport { deleteSubscription } from '../store'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    // width: \"10%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    // width: \"25%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'Description',\r\n    sortable: false,\r\n    sortField: 'description',\r\n    // width: \"25%\",\r\n    cell: row => row?.description\r\n  },\r\n  {\r\n    name: 'Duration in months',\r\n    sortable: false,\r\n    sortField: 'noOfMonth',\r\n    // width: \"15%\",\r\n    cell: row => `${row?.noOfMonth} ${row.noOfMonth === 1 ? \"month\" : \"months\"}`\r\n  },\r\n  {\r\n    name: 'Users Subscribed',\r\n    sortable: false,\r\n    sortField: 'usersCount',\r\n    // width: \"15%\",\r\n    cell: row => `${row?.usersCount}`\r\n  },\r\n  {\r\n    name: 'Price',\r\n    sortable: false,\r\n    sortField: 'Price',\r\n    // width: \"15%\",\r\n    cell: row => `₹ ${row?.price}`\r\n  }\r\n  // {\r\n  //   name: 'Actions',\r\n  //   cell: row => (\r\n  //     <>\r\n\r\n  //       <Link color='primary' to={`/Subscription/view-users/${row._id}`} className='btn-sm  btn-primary'>\r\n  //         <Eye size={14} />\r\n  //       </Link>\r\n\r\n  //     </>\r\n  //   )\r\n  // }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getSubscription } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.subscription)\r\n  const subscriptionArr = useSelector(state => state.subscription.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getSubscription({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getSubscription({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetSubscriptions = () => {\r\n    dispatch(getSubscription({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetSubscriptions()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getSubscription({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                {/* <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/subscription/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div> */}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst AllSubscriptionList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllSubscriptionList\r\n","\r\n// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getSubscriptionSubscribedUser } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n\r\nconst AllSubscribedUsers = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const params = useParams()\r\n  const store = useSelector(state => state.subscription)\r\n  const subscriptionArr = useSelector(state => state.subscription.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getSubscriptionSubscribedUser({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        id: params.id\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getSubscriptionSubscribedUser({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1,\r\n      id: params.id\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handlegetSubscriptionSubscribedUsers = () => {\r\n    dispatch(getSubscriptionSubscribedUser({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage,\r\n      id: params.id\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handlegetSubscriptionSubscribedUsers()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getSubscriptionSubscribedUser({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage,\r\n        id: params.id\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'S.no',\r\n      sortable: false,\r\n      sortField: 'index',\r\n      // width: \"10%\",\r\n      cell: (row, index) => (index + 1)\r\n    },\r\n    {\r\n      name: 'Name',\r\n      sortable: false,\r\n      sortField: 'name',\r\n      // width: \"25%\",\r\n      cell: row => row?.name\r\n    },\r\n    {\r\n      name: 'Description',\r\n      sortable: false,\r\n      sortField: 'description',\r\n      // width: \"25%\",\r\n      cell: row => row?.description\r\n    },\r\n    {\r\n      name: 'Duration in months',\r\n      sortable: false,\r\n      sortField: 'noOfMonth',\r\n      // width: \"15%\",\r\n      cell: row => `${row?.noOfMonth} ${row.noOfMonth === 1 ? \"month\" : \"months\"}`\r\n    },\r\n    {\r\n      name: 'Users Subscribed',\r\n      sortable: false,\r\n      sortField: 'usersCount',\r\n      // width: \"15%\",\r\n      cell: row => `${row?.usersCount}`\r\n    },\r\n    {\r\n      name: 'Price',\r\n      sortable: false,\r\n      sortField: 'Price',\r\n      // width: \"15%\",\r\n      cell: row => `₹ ${row?.price}`\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: row => (\r\n        <>\r\n\r\n          {/* <Link color='primary' to={`/Subscription/view-users/${row._id}`} className='btn-sm  btn-primary'>\r\n            <Eye size={14} />\r\n          </Link> */}\r\n\r\n        </>\r\n        // <div className='column-action'>\r\n        //   <UncontrolledDropdown>\r\n        //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n        //       <MoreVertical size={14} className='cursor-pointer' />\r\n        //     </DropdownToggle>\r\n        //     <DropdownMenu>\r\n        //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n        //         e.preventDefault() \r\n        //         store.dispatch(getProduct(row._id))\r\n        //         }}\r\n        //         >\r\n        //         <Archive size={14} className='me-50' />\r\n        //         <span className='align-middle'>Edit</span>\r\n        //       </DropdownItem>\r\n        //       <DropdownItem\r\n        //         tag='a'\r\n        //         href='/'\r\n        //         className='w-100'\r\n        //         onClick={e => {\r\n        //           e.preventDefault()\r\n        //           store.dispatch(deleteProduct(row._id))\r\n        //         }}\r\n        //       >\r\n        //         <Trash2 size={14} className='me-50' />\r\n        //         <span className='align-middle'>Delete</span>\r\n        //       </DropdownItem>\r\n        //     </DropdownMenu>\r\n        //   </UncontrolledDropdown>\r\n        // </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/subscription/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AllSubscribedUsers\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Database, Edit2, Eye, Settings, Slack, User } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport moment from 'moment'\r\nimport { updateProductApi } from '../../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"5.6%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Created By Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"15%\",\r\n    cell: row => (row?.createdByObj.companyObj?.name ? row?.createdByObj.companyObj?.name : row.name)\r\n  },\r\n  {\r\n    name: 'Product Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.productObj?.name\r\n  },\r\n  {\r\n    name: 'Lead sent to',\r\n    sortable: false,\r\n    sortField: 'e Date',\r\n    cell: row => (row?.userObj.companyObj?.name ? row?.userObj.companyObj?.name : row.name)\r\n  },\r\n  {\r\n    name: 'Created On',\r\n    sortable: false,\r\n    sortField: 'e Date',\r\n    cell: row => `${moment(row?.createdAt).format(\"DD-MM-YYYY\")}`\r\n\r\n  }\r\n\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getLeads } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button,\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Leads)\r\n  const FlashSalesArr = useSelector(state => state.Leads.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n        const [startDate, setstartDate] = useState()\r\n        const [endDate, setEndDate] = useState()\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getLeads({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getLeads({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetFlashSales = () => {\r\n    dispatch(getLeads({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetFlashSales()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n     const handleFilterByDate = () => {\r\n     dispatch(\r\n       getLeads({\r\n         sort,\r\n         sortColumn,\r\n        startDate,\r\n       endDate\r\n       })\r\n     )\r\n     }\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getLeads({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"react-dataTable\">\r\n          <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2\">\r\n            <Row>\r\n              <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n                <div className=\"d-flex align-items-center w-100\">\r\n                  <label htmlFor=\"rows-per-page\">Show</label>\r\n                  <Input\r\n                    className=\"mx-50\"\r\n                    type=\"select\"\r\n                    id=\"rows-per-page\"\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: \"5rem\" }}\r\n                  >\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"25\">25</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                    <option value=\"500\">500</option>\r\n                  </Input>\r\n                  <label htmlFor=\"rows-per-page\">Entries</label>\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                    Filter\r\n                  </label>\r\n                  <Input\r\n                    id=\"search-invoice\"\r\n                    className=\"ms-50 w-100\"\r\n                    type=\"date\"\r\n                    value={startDate}\r\n                    onChange={(e) => setstartDate(e.target.value)}\r\n                  />\r\n                  <Input\r\n                    id=\"search-invoice\"\r\n                    className=\"ms-50 w-100\"\r\n                    type=\"date\"\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                  />\r\n                </div>\r\n                <Button color=\"primary\" onClick={() => handleFilterByDate()}>\r\n                  Filter\r\n                </Button>\r\n              </Col>\r\n              <Col xl=\"6\" className=\"d-flex justify-content-end pe-3\">\r\n                <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n                  <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id=\"search-invoice\"\r\n                    className=\"ms-50 w-100\"\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={FlashSalesArr}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst LeadsList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeadsList\r\n","// ** React Imports\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n// ** Custom Components\r\n// ** Store & Actions\r\n// ** Icons Imports\r\nimport { approveUserById } from '../../../../services/user.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\n\r\n// ** Table Columns\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteUserRequirement, getAllUserRequirement } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User, Eye } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\nimport { store } from \"@store/store\"\r\n\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\r\n  Label, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\n// import AddModal from './AddModal'\r\n// import EditModal from './EditModal'\r\n\r\nconst UsersWithSubscription = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const userData = useSelector(state => state.UserRequirements)\r\n  const [selectedUser, setSelectedUser] = useState({})\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [editModal, setEditModal] = useState(false)\r\n  const [startDate, setstartDate] = useState()\r\n  const [endDate, setEndDate] = useState()\r\n  // ** Function to toggle sidebar\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    // dispatch(getAllData())\r\n    dispatch(\r\n      getAllUserRequirement({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        showName: true\r\n        // currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    // ** Set Roles\r\n\r\n\r\n  }, [dispatch, userData?.data?.length, sort, sortColumn, currentPage])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getAllUserRequirement({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n    dispatch(\r\n      getAllUserRequirement({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getAllUserRequirement({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleFilterByDate = () => {\r\n    dispatch(\r\n      getAllUserRequirement({\r\n        sort,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        startDate,\r\n        endDate\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(userData.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  const handleStatus = async (id, status) => {\r\n    try {\r\n      const obj = {\r\n        status\r\n      }\r\n      const { data: res } = await approveUserById(id, obj)\r\n      if (res.message) {\r\n        toastSuccess(res.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n\r\n  // ** Renders Role Columns\r\n  const renderRole = row => {\r\n    const roleObj = {\r\n      USER: {\r\n        class: 'text-primary',\r\n        icon: User\r\n      },\r\n      MANUFACTURER: {\r\n        class: 'text-success',\r\n        icon: Database\r\n      },\r\n      editor: {\r\n        class: 'text-info',\r\n        icon: Edit2\r\n      },\r\n      DISTRIBUTOR: {\r\n        class: 'text-warning',\r\n        icon: Settings\r\n      },\r\n      DEALER: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      },\r\n      APPROVERS: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      }\r\n    }\r\n\r\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n    return (\r\n      <span className='text-truncate text-capitalize align-middle'>\r\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n        {row.role}\r\n      </span>\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(userData, \"userData\")\r\n  }, [userData])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: 'User',\r\n      sortable: true,\r\n      minWidth: '300px',\r\n      sortField: 'fullName',\r\n      selector: row => row.name,\r\n      cell: row => (\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          {/* {renderClient(row)} */}\r\n          <div className='d-flex flex-column'>\r\n            <Link\r\n              to={``}\r\n              className='user_name text-truncate text-body'\r\n              onClick={() => dispatch(getUser(row.id))}\r\n            >\r\n              <span className='fw-bolder'>{row.name}</span>\r\n            </Link>\r\n            <small className=' mb-0'>{row.email}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    // {\r\n    //   name: 'Role',\r\n    //   sortable: true,\r\n    //   minWidth: '172px',\r\n    //   sortField: 'role',\r\n    //   selector: row => row?.role,\r\n    //   cell: row => renderRole(row)\r\n    // },\r\n    // {\r\n    //   name: 'Plan',\r\n    //   minWidth: '138px',\r\n    //   sortable: true,\r\n    //   sortField: 'currentPlan',\r\n    //   selector: row => row.currentPlan,\r\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n    // },\r\n    {\r\n      name: 'Phone',\r\n      minWidth: '230px',\r\n      sortable: true,\r\n      sortField: 'phone',\r\n      selector: row => row.phone,\r\n      cell: row => <span className='text-capitalize'>{row.phone}</span>\r\n    },\r\n    {\r\n      name: 'Product',\r\n      minWidth: '230px',\r\n      sortable: true,\r\n      sortField: 'productName',\r\n      selector: row => row.productName,\r\n      cell: row => <span className='text-capitalize'>{row.productName}</span>\r\n    },\r\n    {\r\n      name: 'Address',\r\n      minWidth: '230px',\r\n      sortable: true,\r\n      sortField: 'address',\r\n      selector: row => row.address,\r\n      cell: row => <span className='text-capitalize'>{row.address}</span>\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      minWidth: '100px',\r\n      cell: row => (\r\n        <>\r\n\r\n          <Button color='danger' className='ms-2 btn-sm'\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              store.dispatch(deleteUserRequirement(row._id))\r\n            }}\r\n          >    <Trash2 size={14} /></Button>\r\n        </>\r\n\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"mx-2 pt-2 \">\r\n          <Row>\r\n            <Col xl=\"3\" className=\"d-flex justify-content-start\">\r\n              <h3>\r\n                <b>User's Requirements</b>\r\n              </h3>\r\n            </Col>\r\n            <Col xl=\"2\" className=\"d-flex align-items-center p-0\">\r\n              <div className=\"d-flex align-items-center w-100\">\r\n                <label htmlFor=\"rows-per-page\">Show</label>\r\n                <Input\r\n                  className=\"mx-50\"\r\n                  type=\"select\"\r\n                  id=\"rows-per-page\"\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: \"5rem\" }}\r\n                >\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                  <option value=\"100\">100</option>\r\n                  <option value=\"500\">500</option>\r\n                </Input>\r\n                <label htmlFor=\"rows-per-page\">Entries</label>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Filter\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setstartDate(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\r\n                Filter\r\n              </Button>\r\n            </Col>\r\n            <Col xl=\"7\" className=\"d-flex justify-content-end\">\r\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {/* <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                Add New User\r\n              </Button> */}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            columns={columns}\r\n            paginationServer\r\n            paginationComponent={CustomPagination}\r\n            // sortIcon={<ChevronDown />}\r\n            data={userData.data}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersWithSubscription\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UserRequirements = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserRequirements\r\n","// ** React Imports\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n// ** Custom Components\r\n// ** Store & Actions\r\n// ** Icons Imports\r\nimport { approveUserById } from '../../../../services/user.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\n\r\n// ** Table Columns\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deletequickenquries, getAllquickenquries } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User, Eye } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\nimport { store } from \"@store/store\"\r\n\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\r\n  Label, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\n// import AddModal from './AddModal'\r\n// import EditModal from './EditModal'\r\n\r\nconst UsersWithSubscription = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const userData = useSelector(state => state.quickenqury)\r\n  const [selectedUser, setSelectedUser] = useState({})\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [editModal, setEditModal] = useState(false)\r\n  const [startDate, setstartDate] = useState()\r\n  const [endDate, setEndDate] = useState()\r\n  // ** Function to toggle sidebar\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    // dispatch(getAllData())\r\n    dispatch(\r\n      getAllquickenquries({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        showName: true\r\n        // currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    // ** Set Roles\r\n\r\n\r\n  }, [dispatch, userData?.data?.length, sort, sortColumn, currentPage])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getAllquickenquries({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n    dispatch(\r\n      getAllquickenquries({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getAllquickenquries({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleFilterByDate = () => {\r\n    dispatch(\r\n      getAllquickenquries({\r\n        sort,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        startDate,\r\n        endDate\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(userData.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  const handleStatus = async (id, status) => {\r\n    try {\r\n      const obj = {\r\n        status\r\n      }\r\n      const { data: res } = await approveUserById(id, obj)\r\n      if (res.message) {\r\n        toastSuccess(res.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n\r\n  // ** Renders Role Columns\r\n  const renderRole = row => {\r\n    const roleObj = {\r\n      USER: {\r\n        class: 'text-primary',\r\n        icon: User\r\n      },\r\n      MANUFACTURER: {\r\n        class: 'text-success',\r\n        icon: Database\r\n      },\r\n      editor: {\r\n        class: 'text-info',\r\n        icon: Edit2\r\n      },\r\n      DISTRIBUTOR: {\r\n        class: 'text-warning',\r\n        icon: Settings\r\n      },\r\n      DEALER: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      },\r\n      APPROVERS: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      }\r\n    }\r\n\r\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n    return (\r\n      <span className='text-truncate text-capitalize align-middle'>\r\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n        {row.role}\r\n      </span>\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(userData, \"userData\")\r\n  }, [userData])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: 'User',\r\n      sortable: true,\r\n      minWidth: '300px',\r\n      sortField: 'fullName',\r\n      selector: row => row.name,\r\n      cell: row => (\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          {/* {renderClient(row)} */}\r\n          <div className='d-flex flex-column'>\r\n            <Link\r\n              to={``}\r\n              className='user_name text-truncate text-body'\r\n              onClick={() => dispatch(getUser(row.id))}\r\n            >\r\n              <span className='fw-bolder'>{row.name}</span>\r\n            </Link>\r\n            <small className=' mb-0'>{row.email}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    // {\r\n    //   name: 'Role',\r\n    //   sortable: true,\r\n    //   minWidth: '172px',\r\n    //   sortField: 'role',\r\n    //   selector: row => row?.role,\r\n    //   cell: row => renderRole(row)\r\n    // },\r\n    // {\r\n    //   name: 'Plan',\r\n    //   minWidth: '138px',\r\n    //   sortable: true,\r\n    //   sortField: 'currentPlan',\r\n    //   selector: row => row.currentPlan,\r\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n    // },\r\n    {\r\n      name: 'Phone',\r\n      minWidth: '230px',\r\n      sortable: true,\r\n      sortField: 'phone',\r\n      selector: row => row.phone,\r\n      cell: row => <span className='text-capitalize'>{row.phone}</span>\r\n    },\r\n    {\r\n      name: 'Meassage',\r\n      minWidth: '230px',\r\n      sortable: true,\r\n      sortField: 'meassage',\r\n      selector: row => row.productName,\r\n      cell: row => <span className='text-capitalize'>{row.meassage}</span>\r\n    },\r\n\r\n    {\r\n      name: 'Actions',\r\n      minWidth: '100px',\r\n      cell: row => (\r\n        <>\r\n\r\n          <Button color='danger' className='ms-2 btn-sm'\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              store.dispatch(deletequickenquries(row._id))\r\n            }}\r\n          >    <Trash2 size={14} /></Button>\r\n        </>\r\n\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"mx-2 pt-2 \">\r\n          <Row>\r\n            <Col xl=\"3\" className=\"d-flex justify-content-start\">\r\n              <h3>\r\n                <b> Quick enquiry</b>\r\n              </h3>\r\n            </Col>\r\n            <Col xl=\"2\" className=\"d-flex align-items-center p-0\">\r\n              <div className=\"d-flex align-items-center w-100\">\r\n                <label htmlFor=\"rows-per-page\">Show</label>\r\n                <Input\r\n                  className=\"mx-50\"\r\n                  type=\"select\"\r\n                  id=\"rows-per-page\"\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: \"5rem\" }}\r\n                >\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                  <option value=\"100\">100</option>\r\n                  <option value=\"500\">500</option>\r\n                </Input>\r\n                <label htmlFor=\"rows-per-page\">Entries</label>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Filter\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setstartDate(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\r\n                Filter\r\n              </Button>\r\n            </Col>\r\n            <Col xl=\"7\" className=\"d-flex justify-content-end\">\r\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              {/* <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                Add New User\r\n              </Button> */}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            columns={columns}\r\n            paginationServer\r\n            paginationComponent={CustomPagination}\r\n            // sortIcon={<ChevronDown />}\r\n            data={userData.data}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersWithSubscription\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst QuickEnquiery = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuickEnquiery\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteBlogs } from '../store'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"10%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'Image',\r\n    sortable: false,\r\n    sortField: 'image',\r\n    width: \"25%\",\r\n    cell: row => <a href={generateFilePath(row.image)} target='_blank'> <img src={generateFilePath(row.image)} style={{ width: 20, height: 20 }} alt=\"\" srcset=\"\" /></a>\r\n  },\r\n  // {\r\n  //   name: 'Description',\r\n  //   sortable: false,\r\n  //   sortField: 'description',\r\n  //   width: \"25%\",\r\n  //   cell: row => row?.description\r\n  // },\r\n  // {\r\n  //   name: 'Duration in days',\r\n  //   sortable: false,\r\n  //   sortField: 'durationInDays',\r\n  //   width: \"15%\",\r\n  //   cell: row => `${row?.durationInDays} days`\r\n  // },\r\n  {\r\n    name: 'Created On',\r\n    sortable: false,\r\n    sortField: 'created On',\r\n    width: \"15%\",\r\n    cell: row => new Date(row.createdAt).toDateString()\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Link color='primary' to={`/Blogs/edit/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Edit size={14} />\r\n        </Link>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteBlogs(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBlogs } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Blogs)\r\n  const subscriptionArr = useSelector(state => state.Blogs.data)\r\n  // const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getBlogs({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getBlogs({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handlegetBlogss = () => {\r\n    dispatch(getBlogs({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handlegetBlogss()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getBlogs({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/Blogs/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst Blogs = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs\r\n","import React, { useEffect, useState } from 'react'\r\nimport ReactQuill, { Quill } from 'react-quill'\r\n\r\nconst modules = {\r\n    toolbar: [\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\r\n        [{ script: 'sub' }, { script: 'super' }],\r\n        [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\r\n        ['link', 'image', 'video'],\r\n        [{ color: [] }, { background: [] }],\r\n        [{ font: [] }],\r\n        [{ align: [] }],\r\n        ['clean']\r\n    ]\r\n}\r\n\r\nconst formats = [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image', 'video',\r\n    'script',\r\n    'color', 'background',\r\n    'font', 'align'\r\n]\r\n\r\n\r\nexport default function QuillEditor({ handleChange, value }) {\r\n    const [quillValue, setQuillValue] = useState(value ? value : \"\")\r\n    useEffect(() => {\r\n        if (value) {\r\n            setQuillValue(value)\r\n        } else {\r\n            setQuillValue(\"\")\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            <ReactQuill\r\n                theme=\"snow\"\r\n                value={quillValue}\r\n                style={{ height: 400 }}\r\n                scrollingContaine={{ height: 400 }}\r\n                onChange={(e) => { setQuillValue(e); handleChange(e) }}\r\n                placeholder={\"Write something awesome...\"}\r\n                modules={modules}\r\n                formats={formats}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","// ** Reactstrap Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\nimport { addBlogs, getBlogsById, updateBlogs } from '../store'\r\nimport _ from 'lodash'\r\nimport QuillEditor from '../../../QuillEditor'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { generateFilePath } from '../../../services/url.service'\r\nconst Addblog = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const blogObj = useSelector(state => state.Blogs.selectedBlogs)\r\n  const [selectedSubscription, setSelectedSubscription] = useState({})\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setname] = useState(\"\")\r\n  const [durationInDays, setDurationInDays] = useState(0)\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\r\n  const [numberOfPromotions, setNumberOfPromotions] = useState(0)\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n\r\n    if (`${description}` === '') {\r\n      toastError('Please Fill Description')\r\n      return 0\r\n    }\r\n\r\n    if (isEditing === true) {\r\n      dispatch(\r\n        updateBlogs({\r\n          name,\r\n          description,\r\n          image,\r\n          id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addBlogs({\r\n          name,\r\n          description\r\n        })\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (blogObj && blogObj.name && isEditing) {\r\n      setname(blogObj?.name ? blogObj?.name : \"\")\r\n      setDescription(blogObj?.description ? blogObj?.description : \"\")\r\n      setDurationInDays(blogObj?.durationInDays ? blogObj?.durationInDays : \"\")\r\n      setImage(blogObj?.image ? blogObj?.image : \"\")\r\n      setPrice(blogObj?.price ? blogObj?.price : \"\")\r\n      setNumberOfPromotions(blogObj?.numberOfPromotions ? blogObj?.numberOfPromotions : \"\")\r\n      setMessageArr(blogObj?.messageArr ? blogObj?.messageArr : [{ message: \"\" }])\r\n    } else {\r\n      setname(\"\")\r\n      setDescription(\"\")\r\n      setDurationInDays(\"\")\r\n      setPrice(\"\")\r\n      setNumberOfPromotions(\"\")\r\n      setMessageArr([])\r\n    }\r\n\r\n  }, [blogObj, isEditing])\r\n\r\n\r\n  const handlegetBlogsById = () => {\r\n    dispatch(getBlogsById(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(id ? \"true\" : \"false\")\r\n    if (id) {\r\n      handlegetBlogsById()\r\n      setIsEditing(true)\r\n    }\r\n\r\n  }, [id])\r\n\r\n\r\n  const handleaddBlogs = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    tempArr.push({ message: \"\" })\r\n    setMessageArr([...tempArr])\r\n  }\r\n\r\n\r\n  const handleRemoveSubscription = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    if (tempArr.length > 1) {\r\n      tempArr.pop()\r\n      setMessageArr([...tempArr])\r\n    }\r\n  }\r\n\r\n  const handleSetMessge = (value, index) => {\r\n    const tempArr = _.cloneDeep(messageArr)\r\n    // setMessageArr(messageArr.map((ele, indexX) => {\r\n    //   if (indexX === index) {\r\n    //     ele.message = value\r\n    //   }\r\n    //   return ele\r\n    // }))\r\n    tempArr[index].message = value\r\n    setMessageArr([...tempArr])\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/blogs/view\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Blog</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Name\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Subscription Name' />\r\n          </Col>\r\n          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Image (width:522px and height:280px)\r\n            </Label>\r\n            <div>\r\n              {\r\n                image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" />\r\n              }\r\n            </div>\r\n            <FileUpload onFileChange={setImage} />\r\n          </Col>\r\n\r\n          <Col className='mb-1 d-flex justify-content-between' xl='12' md='12' sm='12'>\r\n            <Label for='basicInput'>\r\n              Message\r\n            </Label>\r\n\r\n          </Col>\r\n          <Col className='mb-1 d-flex' xl='12' md='12' sm='12'>\r\n            <QuillEditor handleChange={setDescription} value={description} />\r\n          </Col>\r\n\r\n          <Col className='mb-1 mt-4' xl='12' md='12' sm='12'>\r\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card >\r\n  )\r\n}\r\nexport default Addblog\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteBlogVideo } from '../store'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"10%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'URL',\r\n    sortable: false,\r\n    sortField: 'imagurl',\r\n    width: \"25%\",\r\n    cell: row => row.url\r\n  },\r\n  // {\r\n  //   name: 'Description',\r\n  //   sortable: false,\r\n  //   sortField: 'description',\r\n  //   width: \"25%\",\r\n  //   cell: row => row?.description\r\n  // },\r\n  // {\r\n  //   name: 'Duration in days',\r\n  //   sortable: false,\r\n  //   sortField: 'durationInDays',\r\n  //   width: \"15%\",\r\n  //   cell: row => `${row?.durationInDays} days`\r\n  // },\r\n  {\r\n    name: 'Created On',\r\n    sortable: false,\r\n    sortField: 'created On',\r\n    width: \"15%\",\r\n    cell: row => new Date(row.createdAt).toDateString()\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n        <Link color='primary' to={`/Blogs-video/edit/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Edit size={14} />\r\n        </Link>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteBlogVideo(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBlogVideo } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Video)\r\n  const subscriptionArr = useSelector(state => state.BlogVideo.data)\r\n  // const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getBlogVideo({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getBlogVideo({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handlegetBlogss = () => {\r\n    dispatch(getBlogVideo({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handlegetBlogss()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getBlogVideo({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store?.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n  useEffect(() => {\r\n    console.log(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/Blogs-video/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst BlogVideo = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogVideo\r\n","// ** Reactstrap Imports\r\nimport _ from 'lodash'\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label } from 'reactstrap'\r\nimport { addBlogVideoApi } from '../../../services/BlogVideo.service'\r\nimport { generateFilePath } from '../../../services/url.service'\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport { addBlogVideo, getBlogVideoById, updateBlogVideo } from '../store'\r\nconst AddblogVideo = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const blogObj = useSelector(state => state.BlogVideo.selectedBlogVideo)\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setname] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n\r\n    if (isEditing === true) {\r\n      dispatch(\r\n        updateBlogVideo({\r\n          name,\r\n          url,\r\n          id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addBlogVideo({\r\n          name,\r\n          url\r\n        })\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (blogObj && blogObj.name && isEditing) {\r\n      setname(blogObj?.name ? blogObj?.name : \"\")\r\n      setUrl(blogObj?.url ? blogObj?.url : \"\")\r\n    } else {\r\n      setname(\"\")\r\n      setUrl([])\r\n    }\r\n\r\n  }, [blogObj, isEditing])\r\n\r\n\r\n  const handlegetBlogsById = () => {\r\n    dispatch(getBlogVideoById(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(id ? \"true\" : \"false\")\r\n    if (id) {\r\n      handlegetBlogsById()\r\n      setIsEditing(true)\r\n    }\r\n\r\n  }, [id])\r\n\r\n\r\n  const handleaddBlogs = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    tempArr.push({ message: \"\" })\r\n    setMessageArr([...tempArr])\r\n  }\r\n\r\n\r\n  const handleRemoveSubscription = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    if (tempArr.length > 1) {\r\n      tempArr.pop()\r\n      setMessageArr([...tempArr])\r\n    }\r\n  }\r\n\r\n  const handleSetMessge = (value, index) => {\r\n    const tempArr = _.cloneDeep(messageArr)\r\n    // setMessageArr(messageArr.map((ele, indexX) => {\r\n    //   if (indexX === index) {\r\n    //     ele.message = value\r\n    //   }\r\n    //   return ele\r\n    // }))\r\n    tempArr[index].message = value\r\n    setMessageArr([...tempArr])\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/blogs-video/view\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Blog Video</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        {/* <Row> */}\r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Name\r\n          </Label>\r\n          <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Name' />\r\n        </Col>\r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Video Url\r\n          </Label>\r\n          <Input type='text' id='basicInput' value={url} onChange={(e) => setUrl(e.target.value)} placeholder='Enter Url' />\r\n        </Col>\r\n\r\n        <Col className='mb-1 mt-4' xl='12' md='12' sm='12'>\r\n          <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n        {/* </Row> */}\r\n      </CardBody>\r\n    </Card >\r\n  )\r\n}\r\nexport default AddblogVideo\r\n","// ** Reactstrap Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\nimport { addTopup, getTopupById, updateTopup } from '../store'\r\nimport _ from 'lodash'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport { ROLES_CONSTANT } from '../../../utility/constant'\r\nimport Select from 'react-select'\r\n\r\nconst AddTopup = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const TopupObj = useSelector(state => state.topup.selectedTopup)\r\n  const [selectedTopup, setSelectedTopup] = useState({})\r\n\r\n  const [includesFlashSales, setIncludesFlashSales] = useState(false)\r\n  const [includesAdvertisements, setIncludesAdvertisements] = useState(false)\r\n  const [includesOpportunities, setIncludesOpportunities] = useState(false)\r\n  const [includesBannerImages, setIncludesBannerImages] = useState(false)\r\n\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setname] = useState(\"\")\r\n  const [price, setPrice] = useState(0)\r\n  const [description, setDescription] = useState(\"\")\r\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\r\n  const [numberOfSales, setNumberOfSales] = useState(0)\r\n  const [saleDays, setSaleDays] = useState(0)\r\n  const [numberOfAdvertisement, setNumberOfAdvertisement] = useState(0)\r\n  const [advertisementDays, setAdvertisementDays] = useState(0)\r\n\r\n  const [numberOfOpportunity, setNumberOfOpportunity] = useState(0)\r\n  const [opportunityDays, setOpportunityDays] = useState(0)\r\n\r\n  const [numberOfBannerImages, setNumberOfBannerImages] = useState(0)\r\n  const [bannerimagesDays, setBannerImagesDays] = useState(0)\r\n\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [role, setRole] = useState(\"\")\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n\r\n    if (`${price}` === '' || price <= 0) {\r\n      toastError('Please Fill Price with a valid input (more than 0)')\r\n      return 0\r\n    }\r\n    // if (`${description}` === '') {\r\n    //   toastError('Please Fill Description')\r\n    //   return 0\r\n    // }\r\n\r\n    if (includesAdvertisements) {\r\n\r\n      if (parseInt(numberOfAdvertisement) < 0) {\r\n        toastError('Please Fill No of Advertisement with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n\r\n      if (parseInt(advertisementDays) < 0) {\r\n        toastError('Please Fill No of days of Advertisement with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n\r\n    }\r\n\r\n    if (includesFlashSales) {\r\n\r\n      if (parseInt(numberOfSales) < 0) {\r\n        toastError('Please Fill No of Flashsales with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n      if (parseInt(saleDays) < 0) {\r\n        toastError('Please Fill No of days of Flashsales with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n\r\n    }\r\n\r\n    if (includesOpportunities) {\r\n\r\n      if (parseInt(numberOfOpportunity) < 0) {\r\n        toastError('Please Fill No of Opportunity with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n      if (parseInt(opportunityDays) < 0) {\r\n        toastError('Please Fill No of days of Opportunity with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n    }\r\n\r\n    if (includesBannerImages) {\r\n\r\n      if (parseInt(numberOfBannerImages) < 0) {\r\n        toastError('Please Fill No of Banner with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n      if (parseInt(bannerimagesDays) < 0) {\r\n        toastError('Please Fill No of days of Banner with a valid input (more than 0)')\r\n        return 0\r\n      }\r\n    }\r\n\r\n    if (parseInt(price) < 0) {\r\n      toastError('Please Fill Price with a valid input (more than 0)')\r\n      return 0\r\n    }\r\n\r\n    if (!role || !role?.value) {\r\n      toastError('Please Select Role for Topup')\r\n      return 0\r\n    }\r\n\r\n    const obj = {\r\n      name,\r\n      price,\r\n      description,\r\n      messageArr,\r\n      includesFlashSales,\r\n      includesAdvertisements,\r\n      includesOpportunities,\r\n      includesBannerImages,\r\n      role: role?.value\r\n    }\r\n\r\n    if (includesAdvertisements) {\r\n      obj.numberOfAdvertisement = numberOfAdvertisement\r\n      obj.advertisementDays = advertisementDays\r\n    }\r\n\r\n\r\n    if (includesFlashSales) {\r\n      obj.numberOfSales = numberOfSales\r\n      obj.saleDays = saleDays\r\n    }\r\n\r\n    if (includesOpportunities) {\r\n      obj.numberOfOpportunity = numberOfOpportunity\r\n      obj.opportunityDays = opportunityDays\r\n    }\r\n\r\n    if (includesBannerImages) {\r\n      obj.numberOfBannerImages = numberOfBannerImages\r\n      obj.bannerimagesDays = bannerimagesDays\r\n    }\r\n\r\n    if (isEditing === true) {\r\n      dispatch(\r\n        updateTopup({\r\n          ...obj,\r\n          id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addTopup(obj)\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (TopupObj && TopupObj.name && isEditing) {\r\n      setname(TopupObj?.name ? TopupObj?.name : \"\")\r\n      if (TopupObj?.role) {\r\n        setRole({ label: TopupObj?.role, value: TopupObj?.role })\r\n      }\r\n      setDescription(TopupObj?.description ? TopupObj?.description : \"\")\r\n      setPrice(TopupObj?.price ? TopupObj?.price : \"\")\r\n      setSaleDays(TopupObj?.saleDays ? TopupObj?.saleDays : \"\")\r\n      setNumberOfSales(TopupObj?.numberOfSales ? TopupObj?.numberOfSales : \"\")\r\n      setMessageArr(TopupObj?.messageArr ? TopupObj?.messageArr : [{ message: \"\" }])\r\n      setIncludesFlashSales(TopupObj?.includesFlashSales)\r\n      setIncludesAdvertisements(TopupObj?.includesAdvertisements)\r\n      setNumberOfAdvertisement(TopupObj?.numberOfAdvertisement)\r\n      setAdvertisementDays(TopupObj?.advertisementDays)\r\n\r\n      setIncludesOpportunities(TopupObj?.includesOpportunities)\r\n      setNumberOfOpportunity(TopupObj?.numberOfOpportunity)\r\n      setOpportunityDays(TopupObj?.opportunityDays)\r\n\r\n      setIncludesBannerImages(TopupObj?.includesBannerImages)\r\n      setNumberOfBannerImages(TopupObj?.numberOfBannerImages)\r\n      setBannerImagesDays(TopupObj?.bannerimagesDays)\r\n    } else {\r\n      setname(\"\")\r\n      setDescription(\"\")\r\n      setRole(\"\")\r\n      setPrice(1)\r\n      setSaleDays(0)\r\n      setIncludesFlashSales(false)\r\n      setIncludesAdvertisements(false)\r\n      setNumberOfAdvertisement(0)\r\n      setAdvertisementDays(0)\r\n\r\n      setIncludesOpportunities(false)\r\n      setNumberOfOpportunity(0)\r\n      setOpportunityDays(0)\r\n\r\n      setIncludesBannerImages(false)\r\n      setNumberOfBannerImages(0)\r\n      setBannerImagesDays(0)\r\n\r\n      setNumberOfSales(1)\r\n      setMessageArr([{ message: \"\" }])\r\n    }\r\n\r\n  }, [TopupObj, isEditing])\r\n\r\n\r\n  const handlegetTopupById = () => {\r\n    dispatch(getTopupById(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const roleSelect = [...Object.values(ROLES_CONSTANT).map(el => {\r\n      return { label: el, value: el }\r\n    })].filter((el => (el.label !== \"ADMIN\" || el.label !== ROLES_CONSTANT.FIELDUSER || el.label !== ROLES_CONSTANT.SUBADMIN)))\r\n    setrolesOptions([...roleSelect])\r\n\r\n    if (id) {\r\n      handlegetTopupById()\r\n      setIsEditing(true)\r\n    }\r\n\r\n  }, [id])\r\n\r\n\r\n  const handleaddTopup = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    tempArr.push({ message: \"\" })\r\n    setMessageArr([...tempArr])\r\n  }\r\n\r\n\r\n  const handleRemoveTopup = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    if (tempArr.length > 1) {\r\n      tempArr.pop()\r\n      setMessageArr([...tempArr])\r\n    }\r\n  }\r\n\r\n  const handleSetMessge = (value, index) => {\r\n    const tempArr = _.cloneDeep(messageArr)\r\n    // setMessageArr(messageArr.map((ele, indexX) => {\r\n    //   if (indexX === index) {\r\n    //     ele.message = value\r\n    //   }\r\n    //   return ele\r\n    // }))\r\n    tempArr[index].message = value\r\n    setMessageArr([...tempArr])\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/Topup/View\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Topup</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Name\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Topup Name' />\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Description\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Description' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Role\r\n            </Label>\r\n            <Select\r\n              isClearable={false}\r\n              value={role}\r\n              options={rolesOptions}\r\n              className='react-select'\r\n              classNamePrefix='select'\r\n              onChange={(val) => setRole(val)}\r\n            />\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col className='mb-1 my-3' xl='2' md='2' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Flash sales\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesFlashSales} onChange={(e) => setIncludesFlashSales(e.target.checked)} />\r\n          </Col>\r\n          <Col className='mb-1  my-3' xl='3' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Advertisements\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesAdvertisements} onChange={(e) => setIncludesAdvertisements(e.target.checked)} />\r\n          </Col>\r\n\r\n          <Col className='mb-1 my-3' xl='2' md='2' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Opprtunities\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesOpportunities} onChange={(e) => setIncludesOpportunities(e.target.checked)} />\r\n          </Col>\r\n\r\n          <Col className='mb-1 my-3' xl='2' md='2' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Includes Banner\r\n            </Label>\r\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesBannerImages} onChange={(e) => setIncludesBannerImages(e.target.checked)} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\r\n            includesFlashSales &&\r\n            <>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of sales allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={numberOfSales} onChange={(e) => setNumberOfSales(e.target.value)} placeholder='Enter number Of sales allowed in this Topup' />\r\n              </Col>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of days for which Sales are allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={saleDays} onChange={(e) => setSaleDays(e.target.value)} placeholder='Enter the number Of days for which Sales are allowed in this Topup' />\r\n              </Col>\r\n            </>\r\n          }\r\n        </Row>\r\n        <Row>\r\n          {\r\n            includesAdvertisements &&\r\n            <>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of advertisements allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={numberOfAdvertisement} onChange={(e) => setNumberOfAdvertisement(e.target.value)} placeholder=' Number Of advertisements allowed in this Topup' />\r\n              </Col>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of days for which advertisements are allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={advertisementDays} onChange={(e) => setAdvertisementDays(e.target.value)} placeholder='Number Of days for which advertisements are allowed in this Topup' />\r\n              </Col>\r\n            </>\r\n          }\r\n        </Row>\r\n        <Row>\r\n          {\r\n            includesOpportunities &&\r\n            <>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of Opportunities allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={numberOfOpportunity} onChange={(e) => setNumberOfOpportunity(e.target.value)} placeholder='Enter number Of Opportunities allowed in this Topup' />\r\n              </Col>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of days for which Opportunity are allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={opportunityDays} onChange={(e) => setOpportunityDays(e.target.value)} placeholder='Enter the number Of days for which Opportunities are allowed in this Topup' />\r\n              </Col>\r\n            </>\r\n          }\r\n        </Row>\r\n        <Row>\r\n          {\r\n            includesBannerImages &&\r\n            <>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of Banners allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={numberOfBannerImages} onChange={(e) => setNumberOfBannerImages(e.target.value)} placeholder='Enter number Of Banners allowed in this Topup' />\r\n              </Col>\r\n              <Col className='mb-1' xl='6' md='6' sm='12'>\r\n                <Label className='form-label' for='basicInput'>\r\n                  Number Of days for which Banners are allowed in this Topup\r\n                </Label>\r\n                <Input type='number' id='basicInput' value={bannerimagesDays} onChange={(e) => setBannerImagesDays(e.target.value)} placeholder='Enter the number Of days for which Banners are allowed in this Topup' />\r\n              </Col>\r\n            </>\r\n          }\r\n        </Row>  \r\n\r\n        <Row>\r\n          <Col className='mb-1' xl='6' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Price\r\n            </Label>\r\n            <Input type='number' id='basicInput' value={price} onChange={(e) => setPrice(e.target.value)} placeholder='Enter Topup Price' />\r\n          </Col>\r\n\r\n\r\n          <Col className='mb-1 d-flex justify-content-between' xl='12' md='12' sm='12'>\r\n            <Label for='basicInput'>\r\n              Message\r\n            </Label>\r\n            <div>\r\n              <Button type='button' className='me-1' color='primary' onClick={() => handleaddTopup()}>\r\n                +\r\n              </Button>\r\n              <Button type='button' className='me-1' color='danger' onClick={() => handleRemoveTopup()}>\r\n                -\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Row className='mb-1' xl='12' md='12' sm='12'>\r\n\r\n            {\r\n              messageArr && messageArr.length > 0 && messageArr.map((el, index) => {\r\n                return (\r\n                  <Col key={index} className=\"mt-2\" xl='4' md='4' sm='4'>\r\n                    <Input type='text' id='basicInput' value={el?.message} onChange={(e) => handleSetMessge(e.target.value, index)} placeholder={`Message ${index + 1}`} />\r\n                  </Col>\r\n                )\r\n              })\r\n            }\r\n          </Row>\r\n\r\n          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card >\r\n  )\r\n}\r\nexport default AddTopup\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Database, Edit, Edit2, Settings, Slack, Trash2, User } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteTopup } from '../store'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"10%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'Description',\r\n    sortable: false,\r\n    sortField: 'description',\r\n    width: \"25%\",\r\n    cell: row => row?.description\r\n  },\r\n  {\r\n    name: 'Role',\r\n    sortable: false,\r\n    sortField: 'role',\r\n    width: \"15%\",\r\n    cell: row => row?.role\r\n  },\r\n  {\r\n    name: 'Price',\r\n    sortable: false,\r\n    sortField: 'Price',\r\n    width: \"15%\",\r\n    cell: row => `₹ ${row?.price}`\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Link color='primary' to={`/topup/edit/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Edit size={14} />\r\n        </Link>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteTopup(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTopup } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst TopupList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.topup)\r\n  const TopupArr = useSelector(state => state.topup.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(TopupArr)\r\n  }, [TopupArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getTopup({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getTopup({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handlegetTopups = () => {\r\n    dispatch(getTopup({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handlegetTopups()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getTopup({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/topup/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={TopupArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TopupList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst TopupList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopupList\r\n","// ** React Imports\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\n\r\n// ** Icons Imports\r\nimport { Database, Edit2, Settings, Slack, User } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\nimport { generateFilePath } from '../../../../services/url.service'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Email',\r\n    sortable: true,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row.email\r\n  }\r\n  // {\r\n  //   name: 'Image',\r\n  //   sortable: true,\r\n  //   sortField: 'level',\r\n  //   width: \"25%\",\r\n  //   cell: row => <a href={generateFilePath(row.image)} target=\"_blank\"><img src={generateFilePath(row.image)} style={{ height: 50, width: 50 }} alt=\"\" srcset=\"\" /></a>\r\n  // },\r\n  // {\r\n  //   name: 'Status',\r\n  //   sortable: true,\r\n  //   sortField: 'status',\r\n  //   selector: row => row.status,\r\n  //   cell: row => (\r\n  //     <Badge className='text-capitalize' color={statusObj[row.status === true ? 'active' : 'inactive']} pill>\r\n  //       {row.status === true ? 'Active' : 'Inactive'}\r\n  //     </Badge>\r\n  //   )\r\n  // }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import { getnewsLetters } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Input,\r\n  Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { getnewsLetters } from '../store'\r\n\r\n// ** Table Header\r\n\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const newsLetter = useSelector(state => state.newsLetter)\r\n  // const brand = useSelector(state => state.brands.brand)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n      const [startDate, setstartDate] = useState()\r\n      const [endDate, setEndDate] = useState()\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getnewsLetters({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage,\r\n      role: currentRole.value,\r\n      status: currentStatus.value\r\n    }))\r\n  }, [])\r\n  useEffect(() => {\r\n\r\n\r\n  }, [dispatch, sort, sortColumn, currentPage])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getnewsLetters({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n    dispatch(\r\n      getnewsLetters({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getnewsLetters({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(newsLetter.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    console.log(newsLetter, \"newsLetterdsdds\")\r\n    if (newsLetter.newsLetter.length > 0) {\r\n      return newsLetter.newsLetter\r\n    } else if (!newsLetter || (newsLetter.newsLetter.length === 0 && isFiltered)) {\r\n      return []\r\n    } else {\r\n      return newsLetter?.newsLetter?.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getnewsLetters({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n  const handleFilterByDate = () => {\r\n       dispatch(\r\n         getnewsLetters({\r\n           sort,\r\n           sortColumn,\r\n           page: currentPage,\r\n           perPage: rowsPerPage,\r\n           startDate,\r\n           endDate\r\n         })\r\n       )\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className=\"overflow-hidden\">\r\n        <div className=\"invoice-list-table-header w-100 px-4 ms-50 mt-2\">\r\n          <Row>\r\n            <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n              <div className=\"d-flex align-items-center w-100\">\r\n                <label htmlFor=\"rows-per-page\">Show</label>\r\n                <Input\r\n                  className=\"mx-50\"\r\n                  type=\"select\"\r\n                  id=\"rows-per-page\"\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: \"5rem\" }}\r\n                >\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"50\">50</option>\r\n                </Input>\r\n                <label htmlFor=\"rows-per-page\">Entries</label>\r\n              </div>\r\n              <div className=\"d-flex align-items-center\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Filter\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setstartDate(e.target.value)}\r\n                />\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\r\n                Filter\r\n              </Button>\r\n            </Col>\r\n            <Col\r\n              xl=\"6\"\r\n              className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n            >\r\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id=\"search-invoice\"\r\n                  className=\"ms-50 w-100\"\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center table-header-actions\">\r\n                <Button\r\n                  className=\"add-new-user\"\r\n                  color=\"primary\"\r\n                  onClick={toggleSidebar}\r\n                >\r\n                  Add New\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"react-dataTable\">\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className=\"react-dataTable\"\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\n\r\n// ** Custom Components\r\n\r\n// ** Icons Imports\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst NewsLetterList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewsLetterList\r\n","// ** React Import\r\n\r\n// ** Custom Components\r\n\r\n// ** Utils\r\n\r\n// ** Third Party Components\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useSelector } from 'react-redux'\r\nimport DataTable from 'react-data-table-component'\r\nimport moment from 'moment'\r\n\r\nconst AddModal = ({ open, toggleSidebar, selectedUser }) => {\r\n    // ** States\r\n    const store = useSelector(state => state.categories)\r\n    const handleSidebarClosed = () => {\r\n        // toggleSidebar()\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'S.no',\r\n            sortable: false,\r\n            sortField: 'index',\r\n            width: \"15.6%\",\r\n            cell: (row, index) => (index + 1)\r\n        },\r\n        {\r\n            name: 'Name',\r\n            sortable: false,\r\n            sortField: 'name',\r\n            width: \"55%\",\r\n            cell: row => row?.name\r\n        },\r\n        {\r\n            name: 'Joined On',\r\n            sortable: false,\r\n            sortField: 'e Date',\r\n            cell: row => `${moment(row?.createdAt).format(\"DD-MM-YYYY\")}`\r\n        }\r\n\r\n    ]\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={handleSidebarClosed}\r\n                toggle={toggleSidebar}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>List of users</h2>\r\n                    </div>\r\n\r\n                    <DataTable\r\n                        noHeader\r\n                        pagination\r\n                        paginationServer\r\n                        columns={columns}\r\n                        className='react-dataTable'\r\n                        // paginationComponent={CustomPagination}\r\n                        data={selectedUser}\r\n                    />\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n        // <Sidebar\r\n        //   size='lg'\r\n        //   open={open}\r\n        //   title='New User'\r\n        //   headerClassName='mb-1'\r\n        //   contentClassName='pt-0'\r\n        //   toggleSidebar={toggleSidebar}\r\n        //   onClosed={handleSidebarClosed}\r\n        // >\r\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='fullName'>\r\n        //         Full Name <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='fullName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='lastName'>\r\n        //         lastName <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='lastName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='userEmail'>\r\n        //         Email <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='email'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input\r\n        //             type='email'\r\n        //             id='userEmail'\r\n        //             placeholder='john.doe@example.com'\r\n        //             invalid={errors.email && true}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        //     </div>\r\n\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='phone'>\r\n        //         phone <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='phone'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='company'>\r\n        //         Company <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='company'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='country'>\r\n        //         Country <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='country'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\r\n        //           <Select\r\n        //             isClearable={false}\r\n        //             classNamePrefix='select'\r\n        //             options={countryOptions}\r\n        //             theme={selectThemeColors}\r\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='user-role'>\r\n        //         User Role\r\n        //       </Label>\r\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n        //         <option value='subscriber'>Subscriber</option>\r\n        //         <option value='editor'>Editor</option>\r\n        //         <option value='maintainer'>Maintainer</option>\r\n        //         <option value='author'>Author</option>\r\n        //         <option value='admin'>Admin</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\r\n        //       <Label className='form-label' for='select-plan'>\r\n        //         Select Plan\r\n        //       </Label>\r\n        //       <Input type='select' id='select-plan' name='select-plan'>\r\n        //         <option value='basic'>Basic</option>\r\n        //         <option value='enterprise'>Enterprise</option>\r\n        //         <option value='company'>Company</option>\r\n        //         <option value='team'>Team</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <Button type='submit' className='me-1' color='primary'>\r\n        //       Submit\r\n        //     </Button>\r\n        //     <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n        //       Cancel\r\n        //     </Button>\r\n        //   </Form>\r\n        // </Sidebar>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getLeads } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\n\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport moment from 'moment'\r\nimport AddModal from './AddModal'\r\n\r\nimport { User } from 'react-feather'\r\nimport {\r\n  Button, Card,\r\n  Col, Input,\r\n  Row\r\n} from 'reactstrap'\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Leads)\r\n  const FlashSalesArr = useSelector(state => state.Leads.data)\r\n  const allData = useSelector(state => state.products.allData)\r\n\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [endDate, setEndDate] = useState(new Date())\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  const [selectedUser, setSelectedUser] = useState({})\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const tempDate = new Date()\r\n    tempDate.setMonth(tempDate.getMonth() - 1)\r\n    setStartDate(tempDate)\r\n\r\n  }, [])\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getLeads({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        startDate,\r\n        endDate,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getLeads({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      startDate,\r\n      endDate,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetFlashSales = () => {\r\n    dispatch(getLeads({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      startDate,\r\n      endDate,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetFlashSales()\r\n  }, [startDate, endDate])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getLeads({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        startDate,\r\n        endDate,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: 'S.no',\r\n      sortable: false,\r\n      sortField: 'index',\r\n      width: \"5.6%\",\r\n      cell: (row, index) => (index + 1)\r\n    },\r\n    {\r\n      name: 'Name',\r\n      sortable: false,\r\n      sortField: 'name',\r\n      width: \"15%\",\r\n      cell: row => row?.name\r\n    },\r\n    {\r\n      name: 'Sale count',\r\n      sortable: false,\r\n      sortField: 'name',\r\n      width: \"25%\",\r\n      cell: row => row?.salesCount\r\n    },\r\n    {\r\n      name: 'Role',\r\n      sortable: false,\r\n      sortField: 'e Date',\r\n      cell: row => row?.role\r\n    },\r\n    {\r\n      name: 'Joined On',\r\n      sortable: false,\r\n      sortField: 'e Date',\r\n      cell: row => `${moment(row?.createdAt).format(\"DD-MM-YYYY\")}`\r\n\r\n    },\r\n    {\r\n      name: 'View Users',\r\n      sortable: false,\r\n      sortField: 'aaaaa',\r\n      selector: row => <Button color='primary' onClick={(e) => { e.preventDefault(); setSelectedUser(row.salesArr); toggleSidebar() }} className='btn-sm ms-2 '\r\n\r\n      >\r\n        <User size={14} />\r\n      </Button>\r\n\r\n    }\r\n\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='8' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center' style={{ margin: \"0px 35px 0px 0px\" }}>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n\r\n\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label>Start Date</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='date'\r\n                    value={moment(startDate).format(\"YYYY-MM-DD\")}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                    style={{ width: '15rem' }}\r\n                  />\r\n                </div>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label>End Date</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='date'\r\n                    value={moment(endDate).format(\"YYYY-MM-DD\")}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                    style={{ width: '15rem' }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='4'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={FlashSalesArr}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <AddModal open={sidebarOpen} selectedUser={selectedUser} toggleSidebar={toggleSidebar} />\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst SalesReportList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalesReportList\r\n","// ** React Import\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n    Button,\r\n    Form,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { addHomepageBanners, updateHomepageBanner } from '../store'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\nconst AddModal = ({ open, toggleSidebar }) => {\r\n    // ** States\r\n    const store = useSelector(state => state.homepageBanners)\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n    const [image, setimage] = useState()\r\n    // ** Store Vars\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    // ** Function to handle form submit\r\n    const onSubmit = () => {\r\n        toggleSidebar()\r\n        if (isUpdated === true) {\r\n            dispatch(\r\n                updateHomepageBanner({\r\n                    image,\r\n                    id: store?.selectedObj?._id\r\n                })\r\n            )\r\n        } else {\r\n            dispatch(\r\n                addHomepageBanners({\r\n                    image\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const handleSidebarClosed = () => {\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.selectedObj !== null && store.selectedObj?.image) {\r\n            const category = store.selectedObj\r\n            setimage(category?.image)\r\n            setIsUpdated(true)\r\n        } else {\r\n            setimage(\"\")\r\n            setIsUpdated(false)\r\n        }\r\n    }, [store.selectedObj])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={handleSidebarClosed}\r\n                toggle={toggleSidebar}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>{isUpdated ? \"Update\" : \"Add\"}  Homepage Banner</h2>\r\n                    </div>\r\n                    <Form className=\"row\">\r\n\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label'>\r\n                                Image (width:1920px and height:460px)\r\n                            </Label>\r\n                            <div>\r\n                                {\r\n                                    image && image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} />\r\n                                }\r\n                            </div>\r\n                            <FileUpload onFileChange={(val) => setimage(val)} />\r\n                        </div>\r\n                        <div className='mb-1 col-md-12'>\r\n                            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteHomepageBanners, getHomepageBanners, getHomepageBannerssById } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button,\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport AddModal from './AddModal'\r\nimport { generateFilePath } from '../../../services/url.service'\r\nimport { Eye, Trash } from 'react-feather'\r\n\r\n\r\nconst TicketList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.homepageBanners)\r\n  const FlashSalesArr = useSelector(state => state.homepageBanners.data)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getHomepageBanners({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getHomepageBanners({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetFlashSales = () => {\r\n    dispatch(getHomepageBanners({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetFlashSales()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getHomepageBanners({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  const handleDeleteHomePageBanners = (e, row) => {\r\n\r\n    e.preventDefault()\r\n    if (confirm(\"Are you sure you want to delete this banner ?\")) {\r\n      dispatch(deleteHomepageBanners(row._id))\r\n    }\r\n  }\r\n\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'S.no',\r\n      sortable: false,\r\n      sortField: 'index',\r\n      width: \"5.6%\",\r\n      cell: (row, index) => (index + 1)\r\n    },\r\n    {\r\n      name: 'Image',\r\n      sortable: false,\r\n      sortField: 'image',\r\n      selector: row => <img src={generateFilePath(row?.image)} style={{ height: 50, width: 50 }} />\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: row => (\r\n        <>\r\n\r\n          <Button color='primary' onClick={(e) => { e.preventDefault(); dispatch(getHomepageBannerssById(row._id)); toggleSidebar() }} className='btn-sm  btn-primary'>\r\n            <Eye size={14} />\r\n          </Button>\r\n          <Button color='danger' onClick={(e) => { handleDeleteHomePageBanners(e, row) }} className='btn-sm  ms-3 btn-primary'>\r\n            <Trash size={14} />\r\n          </Button>\r\n\r\n        </>\r\n\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                    Add New\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={[...FlashSalesArr]}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TicketList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\n\r\n// ** Custom Components\r\n\r\n// ** Icons Imports\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst HomepageBanners = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomepageBanners\r\n","import axios from \"axios\"\r\nimport axiosInstance from \"./axios.service\"\r\n\r\nimport BaseUrl from './url.service'\r\n\r\nconst serverUrl = `${BaseUrl}/websiteData`\r\n\r\nexport const AddWebsiteData = async (obj) => {\r\n    return axiosInstance.post(`${serverUrl}/`, obj)\r\n}\r\n\r\nexport const getWebsiteData = async () => {\r\n    return axiosInstance.get(`${serverUrl}/`)\r\n}\r\n","\r\n// ** React Import\r\n\r\n// ** Custom Components\r\n\r\n// ** Utils\r\n\r\n// ** Third Party Components\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form, Input,\r\n  Label\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { useEffect, useState } from 'react'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport { AddWebsiteData, getWebsiteData } from '../../../services/WebsiteData.service'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\nconst WebsiteData = () => {\r\n  // ** States\r\n\r\n  // ** Store Vars\r\n  const [image, setImage] = useState(\"\")\r\n  const [previousImage, setPreviousImage] = useState(\"\")\r\n\r\n\r\n  const handleGetWebsiteData = async () => {\r\n    try {\r\n      const { data: res } = await getWebsiteData()\r\n      console.log(res)\r\n      if (res.data && res.data.shopImage) {\r\n        setPreviousImage(res.data.shopImage)\r\n      }\r\n\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n\r\n  const handleAddWebsiteData = async () => {\r\n    try {\r\n      const obj = {}\r\n      if (!(image && image !== \"\")) {\r\n        toastError(\"Please upload an image !!!\")\r\n        return\r\n      }\r\n\r\n      obj.image = image\r\n      const { data: res } = await AddWebsiteData(obj)\r\n      console.log(res)\r\n      if (res.message) {\r\n        handleGetWebsiteData()\r\n      }\r\n\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    handleGetWebsiteData()\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n\r\n            <div className='text-center'>\r\n              <h2>Add Website data</h2>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n              <div className='mb-1 col-md-6'>\r\n                <Label className='form-label'>\r\n                  Image (width:1920 height: 735px and aspect ratio:128:49)\r\n                </Label>\r\n                <div>\r\n                  Image on server\r\n                </div>\r\n                <div>\r\n\r\n                  <img src={generateFilePath(previousImage)} style={{ height: 100, width: 100 }} />\r\n                </div>\r\n                <div>\r\n                  Your uploaded Image\r\n                </div>\r\n                <div>\r\n\r\n                  <img src={image} style={{ height: 100, width: 100 }} />\r\n                </div>\r\n\r\n                <FileUpload onFileChange={(val) => setImage(val)} />\r\n              </div>\r\n\r\n\r\n              <div className='mb-1 col-md-12'>\r\n                <Button type='button' className='me-1' color='primary' onClick={() => { handleAddWebsiteData() }} >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WebsiteData\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\n// import { getProduct, deleteProduct } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\r\nimport { updateProductApi } from '../../../services/product.service'\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\nimport { deleteSeo } from '../store'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst handleStatus = async (id, status) => {\r\n  try {\r\n\r\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\r\n    const obj = {\r\n      approved: status\r\n    }\r\n    const { data: res } = await updateProductApi(obj, id)\r\n    if (res.message) {\r\n      toastSuccess(res.message)\r\n    }\r\n  } catch (error) {\r\n    toastError(error)\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'S.no',\r\n    sortable: false,\r\n    sortField: 'index',\r\n    width: \"10%\",\r\n    cell: (row, index) => (index + 1)\r\n  },\r\n  {\r\n    name: 'Name',\r\n    sortable: false,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row?.name\r\n  },\r\n  {\r\n    name: 'URL',\r\n    sortable: false,\r\n    sortField: 'imagurl',\r\n    width: \"25%\",\r\n    cell: row => row.url\r\n  },\r\n  // {\r\n  //   name: 'Description',\r\n  //   sortable: false,\r\n  //   sortField: 'description',\r\n  //   width: \"25%\",\r\n  //   cell: row => row?.description\r\n  // },\r\n  // {\r\n  //   name: 'Duration in days',\r\n  //   sortable: false,\r\n  //   sortField: 'durationInDays',\r\n  //   width: \"15%\",\r\n  //   cell: row => `${row?.durationInDays} days`\r\n  // },\r\n  {\r\n    name: 'Created On',\r\n    sortable: false,\r\n    sortField: 'created On',\r\n    width: \"15%\",\r\n    cell: row => new Date(row.createdAt).toDateString()\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n        <Link color='primary' to={`/seo/edit/${row._id}`} className='btn-sm  btn-primary'>\r\n          <Edit size={14} />\r\n        </Link>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteSeo(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getProduct(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteProduct(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getSeo } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst SubscriptionList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.Seo)\r\n  const subscriptionArr = useSelector(state => state.Seo.data)\r\n  // const allData = useSelector(state => state.products.allData)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n\r\n  useEffect(() => {\r\n    setDataArr(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getSeo({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getSeo({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handlegetBlogss = () => {\r\n    dispatch(getSeo({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handlegetBlogss()\r\n  }, [])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getSeo({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store?.total / rowsPerPage))\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n  }\r\n  useEffect(() => {\r\n    console.log(subscriptionArr)\r\n  }, [subscriptionArr])\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Link to=\"/seo/Add\" className='add-new-user btn btn-primary' color='primary'>\r\n                    Add New\r\n                  </Link>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            // subHeader\r\n            // sortServer\r\n            // responsive\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            // onSort={handleSort}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={subscriptionArr}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     store={dataArr}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handlePerPage={handlePerPage}\r\n          //     handleFilter={handleFilter}\r\n          //   // toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SubscriptionList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst Seo = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","// ** Reactstrap Imports\r\nimport _ from 'lodash'\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label } from 'reactstrap'\r\nimport { addSeoApi } from '../../../services/Seo.service'\r\nimport { generateFilePath } from '../../../services/url.service'\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport { addSeo, getSeoById, updateSeo } from '../store'\r\nconst AddSeo = () => {\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n  const blogObj = useSelector(state => state.Seo.selectedSeo)\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [name, setname] = useState(\"\")\r\n  const [title, setTitle] = useState(\"\")\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [keywords, setKeywords] = useState(\"\")\r\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\r\n\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n\r\n    if (`${url}` === '') {\r\n      toastError('Please Fill Url')\r\n      return 0\r\n    }\r\n\r\n    if (isEditing === true) {\r\n      dispatch(\r\n        updateSeo({\r\n          name,\r\n          title,\r\n          image,\r\n          description,\r\n          keywords,\r\n          url,\r\n          id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addSeo({\r\n          name,\r\n          url,\r\n          title,\r\n          image,\r\n          description,\r\n          keywords\r\n        })\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (blogObj && blogObj.name && isEditing) {\r\n      setname(blogObj?.name ? blogObj?.name : \"\")\r\n      setUrl(blogObj?.url ? blogObj?.url : \"\")\r\n      setTitle(blogObj?.title ? blogObj?.title : \"\")\r\n      setKeywords(blogObj?.keywords ? blogObj?.keywords : \"\")\r\n      setDescription(blogObj?.description ? blogObj?.description : \"\")\r\n      setImage(blogObj?.image ? blogObj?.image : \"\")\r\n    } else {\r\n      setname(\"\")\r\n      setUrl([])\r\n    }\r\n\r\n  }, [blogObj, isEditing])\r\n\r\n\r\n  const handlegetBlogsById = () => {\r\n    dispatch(getSeoById(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(id ? \"true\" : \"false\")\r\n    if (id) {\r\n      handlegetBlogsById()\r\n      setIsEditing(true)\r\n    }\r\n\r\n  }, [id])\r\n\r\n\r\n  const handleaddBlogs = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    tempArr.push({ message: \"\" })\r\n    setMessageArr([...tempArr])\r\n  }\r\n\r\n\r\n  const handleRemoveSubscription = () => {\r\n    let tempArr = messageArr\r\n    tempArr = [...tempArr]\r\n    if (tempArr.length > 1) {\r\n      tempArr.pop()\r\n      setMessageArr([...tempArr])\r\n    }\r\n  }\r\n\r\n  const handleSetMessge = (value, index) => {\r\n    const tempArr = _.cloneDeep(messageArr)\r\n    // setMessageArr(messageArr.map((ele, indexX) => {\r\n    //   if (indexX === index) {\r\n    //     ele.message = value\r\n    //   }\r\n    //   return ele\r\n    // }))\r\n    tempArr[index].message = value\r\n    setMessageArr([...tempArr])\r\n\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/seo/view\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Blog Seo</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        {/* <Row> */}\r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Name\r\n          </Label>\r\n          <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Name' />\r\n        </Col>\r\n        \r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Seo Url\r\n          </Label>\r\n          <Input type='text' id='basicInput' value={url} onChange={(e) => setUrl(e.target.value)} placeholder='Enter Page Url' />\r\n        </Col>\r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Title\r\n          </Label>\r\n          <Input type='text' id='basicInput' value={title} onChange={(e) => setTitle(e.target.value)} placeholder='Enter Page Title' />\r\n        </Col>\r\n\r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Description\r\n          </Label>\r\n          <Input type='textarea' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Page Description' />\r\n        </Col>\r\n\r\n\r\n        <Col className='mb-1' xl='6' md='6' sm='12'>\r\n          <Label className='form-label' for='basicInput'>\r\n            Keywords\r\n          </Label>\r\n          <Input type='text' id='basicInput' value={keywords} onChange={(e) => setKeywords(e.target.value)} placeholder='Enter Page Keywords' />\r\n        </Col>\r\n        \r\n        <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Image (width:522px and height:280px)\r\n            </Label>\r\n            <div>\r\n              {\r\n                image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" />\r\n              }\r\n            </div>\r\n            <FileUpload onFileChange={setImage} />\r\n          </Col>\r\n        <Col className='mb-1 mt-4' xl='12' md='12' sm='12'>\r\n          <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n        {/* </Row> */}\r\n      </CardBody>\r\n    </Card >\r\n  )\r\n}\r\nexport default AddSeo\r\n","// ** Redux Imports\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { addHomePageBannerImageApi, deleteBannersApi, getHomePageBannerImageApi, getByIdBannerApi, updateBannersApi } from '../../../services/homepageBanners.service'\r\n\r\n// ** Axios Imports\r\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\r\n\r\n\r\nexport const getHomepageBanners = createAsyncThunk('HomepageBanners/getHomepageBanners', async params => {\r\n  let query = ``\r\n  if (params) {\r\n    if (params.sort) {\r\n      query = `sort=${params.sort}`\r\n    }\r\n    if (params.sortColumn) {\r\n      query = `${query}&sortColumn=${params.sortColumn}`\r\n    }\r\n    if (params.q) {\r\n      query = `${query}&q=${params.q}`\r\n    }\r\n    if (params.perPage) {\r\n      query = `${query}&perPage=${params.perPage}`\r\n    }\r\n    if (params.page) {\r\n      query = `${query}&page=${params.page}`\r\n    }\r\n    if (params.status) {\r\n      query = `${query}&status=${params.status}`\r\n    }\r\n  }\r\n  const response = await getHomePageBannerImageApi(query)\r\n  return {\r\n    params,\r\n    data: response.data.bannerImages,\r\n    totalCount: response.data.totalCount\r\n  }\r\n})\r\n\r\nexport const getHomepageBannerssById = createAsyncThunk('HomepageBanners/getHomepageBannerssById', async id => {\r\n  try {\r\n    const response = await getByIdBannerApi(id)\r\n    toastSuccess(response.data.message)\r\n    return response.data.data\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n})\r\n\r\n\r\nexport const addHomepageBanners = createAsyncThunk('HomepageBanners/addHomepageBanners', async (params, { dispatch }) => {\r\n  try {\r\n    const response = await addHomePageBannerImageApi(params)\r\n    toastSuccess(response.data.message)\r\n    await dispatch(getHomepageBanners())\r\n\r\n    return response.data.data\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n})\r\n\r\n\r\nexport const updateHomepageBanner = createAsyncThunk('HomepageBanners/updateHomepageBanner', async (formData, { dispatch, getState }) => {\r\n\r\n  try {\r\n    const res = await updateBannersApi(formData, formData.id)\r\n    if (res.data.success) {\r\n      toastSuccess(res.data.message)\r\n      await dispatch(getHomepageBanners())\r\n    }\r\n\r\n    return res.data.success ? res.data.success : false\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n\r\n})\r\n\r\nexport const deleteHomepageBanners = createAsyncThunk('HomepageBanners/deleteHomepageBanners', async (id, { dispatch, getState }) => {\r\n  try {\r\n    const res = await deleteBannersApi(id)\r\n    if (res.data.success) {\r\n      toastSuccess(res.data.message)\r\n      await dispatch(getHomepageBanners())\r\n    }\r\n    return id\r\n  } catch (error) {\r\n    toastError(error)\r\n    return error\r\n  }\r\n})\r\n\r\n\r\nexport const HomepageBannerslice = createSlice({\r\n  name: 'HomepageBanners',\r\n  initialState: {\r\n    data: [],\r\n    params: {},\r\n    allData: [],\r\n    selectedObj: null,\r\n    success: false\r\n  },\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(getHomepageBanners.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.selectedObj = null\r\n        state.total = action.payload.totalCount\r\n      })\r\n      .addCase(getHomepageBannerssById.fulfilled, (state, action) => {\r\n        state.selectedObj = action.payload\r\n      })\r\n      .addCase(addHomepageBanners.fulfilled, (state, action) => {\r\n        // state.selectedFlashSales = null\r\n      })\r\n      // .addCase(updateHomepageBanner.fulfilled, (state, action) => {\r\n      //   state.selectedCategory = null\r\n      // })\r\n      .addCase(deleteHomepageBanners.fulfilled, (state, action) => {\r\n        state.selectedObj = null\r\n      })\r\n  }\r\n})\r\n\r\nexport default HomepageBannerslice.reducer\r\n","// ** React Import\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n    Button,\r\n    Form,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Input\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { addHomepageBanners, updateHomepageBanner } from '../store'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\nconst AddModal = ({ open, toggleSidebar }) => {\r\n    // ** States\r\n    const store = useSelector(state => state.homepageBanners)\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n    const [image, setimage] = useState()\r\n    const [url, seturl] = useState(\"\")\r\n    // ** Store Vars\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    // ** Function to handle form submit\r\n    const onSubmit = () => {\r\n        toggleSidebar()\r\n        if (isUpdated === true) {\r\n            dispatch(\r\n                updateHomepageBanner({\r\n                    image,\r\n                    id: store?.selectedObj?._id,\r\n                    url,\r\n                    type: \"Adminbanner\"\r\n                })\r\n            )\r\n        } else {\r\n            dispatch(\r\n                updateHomepageBanner({\r\n                    image,\r\n                    id: store?.selectedObj?._id,\r\n                    url,\r\n                    type: \"Adminbanner\"\r\n                })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const handleSidebarClosed = () => {\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.selectedObj !== null && store.selectedObj?.image) {\r\n            const category = store.selectedObj\r\n            setimage(category?.image)\r\n            setIsUpdated(true)\r\n        } else {\r\n            setimage(\"\")\r\n            setIsUpdated(false)\r\n        }\r\n    }, [store.selectedObj])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={handleSidebarClosed}\r\n                toggle={toggleSidebar}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>{isUpdated ? \"Update\" : \"Add\"}  Homepage Banner</h2>\r\n                    </div>\r\n                    <Form className=\"row\">\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label' for='fullName'>\r\n                                URl <span className='text-danger'>*</span>\r\n                            </Label>\r\n                            <Input className='form-control' value={url} onChange={(e) => seturl(e.target.value)} />\r\n                        </div>\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label'>\r\n                                Image (width:1920px and height:460px)\r\n                            </Label>\r\n                            <div>\r\n                                {\r\n                                    image && image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} />\r\n                                }\r\n                            </div>\r\n                            <FileUpload onFileChange={(val) => setimage(val)} />\r\n                        </div>\r\n                        <div className='mb-1 col-md-12'>\r\n                            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteHomepageBanners, getHomepageBanners, getHomepageBannerssById } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\n// ** Utils\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button,\r\n  Card, Col, Input, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport AddModal from './AddModal'\r\nimport { generateFilePath } from '../../../services/url.service'\r\nimport { Eye, Trash } from 'react-feather'\r\n\r\n\r\nconst TicketList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.homepageBanners)\r\n  const FlashSalesArr = useSelector(state => state.homepageBanners.data)\r\n\r\n  const [dataArr, setDataArr] = useState([])\r\n\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setDataArr(FlashSalesArr)\r\n  }, [FlashSalesArr])\r\n\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Function in get data on rows per page\r\n\r\n  const handleEditBanner = (row) => {\r\n    dispatch(getHomepageBannerssById(row._id)) // Fetch selected banner by ID\r\n    toggleSidebar() // Open modal for editing\r\n  }\r\n  \r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getHomepageBanners({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(getHomepageBanners({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: value,\r\n      page: 1\r\n    }))\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleGetFlashSales = () => {\r\n    dispatch(getHomepageBanners({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage\r\n    }))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    handleGetFlashSales()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(FlashSalesArr, \"FlashSalesArr\")\r\n  }, [FlashSalesArr])\r\n\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getHomepageBanners({\r\n        sort,\r\n        sortColumn,\r\n        q: val,\r\n        perPage: rowsPerPage,\r\n        page: currentPage\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  const handleDeleteHomePageBanners = (e, row) => {\r\n\r\n    e.preventDefault()\r\n    if (confirm(\"Are you sure you want to delete this banner ?\")) {\r\n      dispatch(deleteHomepageBanners(row._id))\r\n    }\r\n  }\r\n\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'S.no',\r\n      sortable: false,\r\n      sortField: 'index',\r\n      width: \"5.6%\",\r\n      cell: (row, index) => (index + 1)\r\n    },\r\n    {\r\n      name: 'Url',\r\n      sortable: false,\r\n      sortField: 'index',\r\n      selector: row => <>{row?.url}</>\r\n    },\r\n    {\r\n      name: 'Image',\r\n      sortable: false,\r\n      sortField: 'image',\r\n      selector: row => <img src={generateFilePath(row?.image)} style={{ height: 50, width: 50 }} />\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      cell: row => (\r\n        <>\r\n\r\n          <Button color='primary' onClick={(e) => { e.preventDefault(); dispatch(getHomepageBannerssById(row._id)); toggleSidebar() }} className='btn-sm  btn-primary'>\r\n            <Eye size={14} />\r\n          </Button>\r\n        \r\n\r\n          <Button color='danger' onClick={(e) => { handleDeleteHomePageBanners(e, row) }} className='btn-sm  ms-3 btn-primary'>\r\n            <Trash size={14} />\r\n          </Button>\r\n\r\n        </>\r\n\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\r\n            <Row>\r\n              <Col xl='6' className='d-flex align-items-center p-0'>\r\n                <div className='d-flex align-items-center w-100'>\r\n                  <label htmlFor='rows-per-page'>Show</label>\r\n                  <Input\r\n                    className='mx-50'\r\n                    type='select'\r\n                    id='rows-per-page'\r\n                    value={rowsPerPage}\r\n                    onChange={handlePerPage}\r\n                    style={{ width: '5rem' }}\r\n                  >\r\n                    <option value='1'>1</option>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                    <option value='100'>100</option>\r\n                    <option value='500'>500</option>\r\n                  </Input>\r\n                  <label htmlFor='rows-per-page'>Entries</label>\r\n                </div>\r\n              </Col>\r\n              <Col\r\n                xl='6'\r\n                className='d-flex justify-content-end pe-3'\r\n              >\r\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                  <label className='mb-0' htmlFor='search-invoice'>\r\n                    Search:\r\n                  </label>\r\n                  <Input\r\n                    id='search-invoice'\r\n                    className='ms-50 w-100'\r\n                    type='text'\r\n                    value={searchTerm}\r\n                    onChange={e => handleFilter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className='d-flex align-items-center table-header-actions'>\r\n                  <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                    Add New\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            paginationServer\r\n            columns={columns}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={[...FlashSalesArr]}\r\n          />\r\n        </div>\r\n      </Card>\r\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TicketList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\n\r\n// ** Custom Components\r\n\r\n// ** Icons Imports\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst HomepageBannersimges = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomepageBannersimges\r\n","// ** React Imports\r\nimport { lazy } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport UsersWithSubscription from '../../views/apps/UsersWithSubscription/list'\r\nimport UserWithSubscriptionDetail from '../../views/apps/UsersWithSubscription/list/UserWithSubscriptionDetail'\r\nimport AddSubscription from '../../views/Subscriptions/list/AddSubscription'\r\nimport SubscriptionList from '../../views/Subscriptions/list/Table'\r\nimport FlashSalesList from '../../views/Reports/FlashSales/list/Table'\r\nimport FlashSalesDetails from '../../views/Reports/FlashSales/list/FlashSalesDetails'\r\nimport AdverisementSubscriptionList from '../../views/AdvertisementSubsctiptions/list/Table'\r\nimport AddAdvertisementSubscription from '../../views/AdvertisementSubsctiptions/list/AddAdvertisementSubscription'\r\nimport Tickets from '../../views/UserTickets/list'\r\nimport UserTicketDetails from '../../views/UserTickets/list/UserTicketDetails'\r\nimport PromotionList from '../../views/Reports/Advertisements/list'\r\nimport PromotionDetails from '../../views/Reports/Advertisements/list/PromotionDetails'\r\nimport AllSubscriptionList from '../../views/Reports/SubscriptionsReport/list'\r\nimport AllSubscribedUsers from '../../views/Reports/SubscriptionsReport/list/AllSubscribedUsers'\r\nimport LeadsList from '../../views/Reports/Leads/list'\r\nimport UserRequirements from '../../views/apps/UserRequirements/list'\r\nimport QuickEnquiery from '../../views/apps/Quick reviews/list'\r\nimport Blogs from '../../views/Blogs/list'\r\nimport Addblog from '../../views/Blogs/list/AddBlog'\r\nimport BlogVideo from '../../views/BlogVideo/list'\r\nimport AddblogVideo from '../../views/BlogVideo/list/AddVideoBlog'\r\nimport AddTopup from '../../views/Topup/list/AddTopup'\r\nimport TopupList from '../../views/Topup/list'\r\nimport NewsLetterList from '../../views/products/newsLetter/list'\r\nimport SalesReportList from '../../views/Reports/SalesUsers/list'\r\nimport HomepageBanners from '../../views/homepageBanners/list'\r\nimport WebsiteData from '../../views/WebsiteData/list'\r\nimport Seo from '../../views/seo/list'\r\nimport AddSeo from '../../views/seo/list/AddSeo'\r\nimport HomepageBannersimges from '../../views/homepageBannersimges/list'\r\nconst Chat = lazy(() => import('../../views/apps/chat'))\r\nconst Todo = lazy(() => import('../../views/apps/todo'))\r\nconst Email = lazy(() => import('../../views/apps/email'))\r\nconst Kanban = lazy(() => import('../../views/apps/kanban'))\r\nconst Calendar = lazy(() => import('../../views/apps/calendar'))\r\n\r\nconst InvoiceAdd = lazy(() => import('../../views/apps/invoice/add'))\r\nconst InvoiceList = lazy(() => import('../../views/apps/invoice/list'))\r\nconst InvoiceEdit = lazy(() => import('../../views/apps/invoice/edit'))\r\nconst InvoicePrint = lazy(() => import('../../views/apps/invoice/print'))\r\nconst InvoicePreview = lazy(() => import('../../views/apps/invoice/preview'))\r\n\r\nconst EcommerceShop = lazy(() => import('../../views/apps/ecommerce/shop'))\r\nconst EcommerceDetail = lazy(() => import('../../views/apps/ecommerce/detail'))\r\nconst EcommerceWishlist = lazy(() => import('../../views/apps/ecommerce/wishlist'))\r\nconst EcommerceCheckout = lazy(() => import('../../views/apps/ecommerce/checkout'))\r\n\r\nconst UserList = lazy(() => import('../../views/apps/user/list'))\r\nconst UserView = lazy(() => import('../../views/apps/user/view'))\r\n\r\nconst Roles = lazy(() => import('../../views/apps/roles-permissions/roles'))\r\nconst Permissions = lazy(() => import('../../views/apps/roles-permissions/permissions'))\r\n\r\nconst AppRoutes = [\r\n  {\r\n    element: <Email />,\r\n    path: '/apps/email',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'email-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Email />,\r\n    path: '/apps/email/:folder',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'email-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Email />,\r\n    path: '/apps/email/label/:label',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'email-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Email />,\r\n    path: '/apps/email/:filter'\r\n  },\r\n  {\r\n    path: '/apps/chat',\r\n    element: <Chat />,\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'chat-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Todo />,\r\n    path: '/apps/todo',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'todo-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Todo />,\r\n    path: '/apps/todo/:filter',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'todo-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Todo />,\r\n    path: '/apps/todo/tag/:tag',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'todo-application'\r\n    }\r\n  },\r\n  {\r\n    element: <Calendar />,\r\n    path: '/apps/calendar'\r\n  },\r\n  {\r\n    element: <Kanban />,\r\n    path: '/apps/kanban',\r\n    meta: {\r\n      appLayout: true,\r\n      className: 'kanban-application'\r\n    }\r\n  },\r\n  {\r\n    element: <InvoiceList />,\r\n    path: '/apps/invoice/list'\r\n  },\r\n  {\r\n    element: <InvoicePreview />,\r\n    path: '/apps/invoice/preview/:id'\r\n  },\r\n  {\r\n    path: '/apps/invoice/preview',\r\n    element: <Navigate to='/apps/invoice/preview/4987' />\r\n  },\r\n  {\r\n    element: <InvoiceEdit />,\r\n    path: '/apps/invoice/edit/:id'\r\n  },\r\n  {\r\n    path: '/apps/invoice/edit',\r\n    element: <Navigate to='/apps/invoice/edit/4987' />\r\n  },\r\n  {\r\n    element: <InvoiceAdd />,\r\n    path: '/apps/invoice/add'\r\n  },\r\n  {\r\n    path: '/apps/invoice/print',\r\n    element: <InvoicePrint />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    element: <EcommerceShop />,\r\n    path: '/apps/ecommerce/shop',\r\n    meta: {\r\n      className: 'ecommerce-application'\r\n    }\r\n  },\r\n  {\r\n    element: <EcommerceWishlist />,\r\n    path: '/apps/ecommerce/wishlist',\r\n    meta: {\r\n      className: 'ecommerce-application'\r\n    }\r\n  },\r\n  {\r\n    path: '/apps/ecommerce/product-detail',\r\n    element: <Navigate to='/apps/ecommerce/product-detail/apple-i-phone-11-64-gb-black-26' />,\r\n    meta: {\r\n      className: 'ecommerce-application'\r\n    }\r\n  },\r\n  {\r\n    path: '/apps/ecommerce/product-detail/:product',\r\n    element: <EcommerceDetail />,\r\n    meta: {\r\n      className: 'ecommerce-application'\r\n    }\r\n  },\r\n  {\r\n    path: '/apps/ecommerce/checkout',\r\n    element: <EcommerceCheckout />,\r\n    meta: {\r\n      className: 'ecommerce-application'\r\n    }\r\n  },\r\n  {\r\n    element: <UserList />,\r\n    path: '/apps/user/list',\r\n    roleArr: [\"ADMIN\", \"APPROVERS\"]\r\n  },\r\n  {\r\n    element: <UsersWithSubscription />,\r\n    path: '/apps/user/Users-With-Subscription',\r\n    roleArr: [\"ADMIN\"]\r\n  },\r\n  {\r\n    element: <UserWithSubscriptionDetail />,\r\n    path: '/apps/user/View-Subscription-for-user/:id',\r\n    roleArr: [\"ADMIN\"]\r\n  },\r\n  {\r\n    path: '/apps/user/view',\r\n    element: <Navigate to='/apps/user/view/1' />\r\n  },\r\n  {\r\n    element: <UserView />,\r\n    path: '/apps/user/view/:id'\r\n  },\r\n  {\r\n    element: <Roles />,\r\n    path: '/apps/roles'\r\n  },\r\n  {\r\n    element: <Permissions />,\r\n    path: '/apps/permissions'\r\n  },\r\n  {\r\n    element: <SubscriptionList />,\r\n    path: '/subscription/view'\r\n  },\r\n  {\r\n    element: <AddSubscription />,\r\n    path: '/subscription/Add'\r\n  },\r\n  {\r\n    element: <AddSubscription />,\r\n    path: '/subscription/Edit/:id'\r\n  },\r\n  {\r\n    element: <TopupList />,\r\n    path: '/topup/view'\r\n  },\r\n  {\r\n    element: <AddTopup />,\r\n    path: '/topup/Add'\r\n  },\r\n  {\r\n    element: <AddTopup />,\r\n    path: '/topup/Edit/:id'\r\n  },\r\n  {\r\n    element: <AddSubscription />,\r\n    path: '/subscription/Add'\r\n  },\r\n  {\r\n    element: <AdverisementSubscriptionList />,\r\n    path: '/subscription/advertisement/view'\r\n  },\r\n  {\r\n    element: <AddAdvertisementSubscription />,\r\n    path: '/subscription/advertisement/add'\r\n  },\r\n  {\r\n    element: <AddAdvertisementSubscription />,\r\n    path: '/subscription/advertisement/Edit/:id'\r\n  },\r\n  {\r\n    element: <FlashSalesList />,\r\n    path: '/flash-sales/view'\r\n  },\r\n  {\r\n    element: <PromotionList />,\r\n    path: '/Promotions/view'\r\n  },\r\n  {\r\n    element: <FlashSalesDetails />,\r\n    path: '/flash-sales/view-details/:id'\r\n  },\r\n  {\r\n    element: <PromotionDetails />,\r\n    path: '/Promotions/view-details/:id'\r\n  },\r\n  {\r\n    element: <Tickets />,\r\n    path: '/Tickets'\r\n  },\r\n  {\r\n    element: <NewsLetterList />,\r\n    path: '/news-letters'\r\n  },\r\n  {\r\n    element: <UserTicketDetails />,\r\n    path: '/User-Tickets/View/:id'\r\n  },\r\n  {\r\n    element: <AllSubscriptionList />,\r\n    path: '/Subscription/view-user-count'\r\n  },\r\n  {\r\n    element: <AllSubscribedUsers />,\r\n    path: '/Subscription/view-users/:id'\r\n  },\r\n  {\r\n    element: <LeadsList />,\r\n    path: '/Leads/view'\r\n  },\r\n  {\r\n    element: <SalesReportList />,\r\n    path: '/sales/report'\r\n  },\r\n  {\r\n    element: <UserRequirements />,\r\n    path: '/user-requirements'\r\n  },\r\n  {\r\n    element: <QuickEnquiery />,\r\n    path: '/user-quickenqury'\r\n  },\r\n  {\r\n    element: <Blogs />,\r\n    path: '/blogs/view'\r\n  },\r\n  {\r\n    element: <Addblog />,\r\n    path: '/Blogs/Add'\r\n  },\r\n  {\r\n    element: <Addblog />,\r\n    path: '/Blogs/edit/:id'\r\n  },\r\n  {\r\n    element: <BlogVideo />,\r\n    path: '/blogs-video/view'\r\n  },\r\n  {\r\n    element: <AddblogVideo />,\r\n    path: '/Blogs-video/Add'\r\n  },\r\n  {\r\n    element: <AddblogVideo />,\r\n    path: '/Blogs-video/edit/:id'\r\n  },\r\n  {\r\n    element: <Seo />,\r\n    path: '/seo/view'\r\n  },\r\n  {\r\n    element: <AddSeo />,\r\n    path: '/seo/Add'\r\n  },\r\n  {\r\n    element: <AddSeo />,\r\n    path: '/seo/edit/:id'\r\n  },\r\n  {\r\n    element: <WebsiteData />,\r\n    path: '/apps/ShopImage',\r\n    roleArr: [\"ADMIN\"]\r\n  },\r\n  {\r\n    element: <HomepageBanners />,\r\n    path: '/apps/homepageBanners',\r\n    roleArr: [\"ADMIN\"]\r\n  },\r\n  {\r\n    element: <HomepageBannersimges/>,\r\n    path: '/apps/homepageBannersimges',\r\n    roleArr: [\"ADMIN\"]\r\n  }\r\n]\r\n\r\nexport default AppRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst Wizard = lazy(() => import('../../views/forms/wizard'))\r\nconst Validation = lazy(() => import('../../views/forms/validation'))\r\nconst FormLayouts = lazy(() => import('../../views/forms/form-layouts'))\r\nconst Radio = lazy(() => import('../../views/forms/form-elements/radio'))\r\nconst Input = lazy(() => import('../../views/forms/form-elements/input'))\r\nconst FormRepeater = lazy(() => import('../../views/forms/form-repeater'))\r\nconst Switch = lazy(() => import('../../views/forms/form-elements/switch'))\r\nconst Editor = lazy(() => import('../../views/forms/form-elements/editor'))\r\nconst Select = lazy(() => import('../../views/forms/form-elements/select'))\r\nconst Textarea = lazy(() => import('../../views/forms/form-elements/textarea'))\r\nconst InputMask = lazy(() => import('../../views/forms/form-elements/input-mask'))\r\nconst Checkboxes = lazy(() => import('../../views/forms/form-elements/checkboxes'))\r\nconst Datepickers = lazy(() => import('../../views/forms/form-elements/datepicker'))\r\nconst InputGroups = lazy(() => import('../../views/forms/form-elements/input-groups'))\r\nconst NumberInput = lazy(() => import('../../views/forms/form-elements/number-input'))\r\nconst FileUploader = lazy(() => import('../../views/forms/form-elements/file-uploader'))\r\n\r\nconst FormRoutes = [\r\n  {\r\n    element: <Input />,\r\n    path: '/forms/elements/input'\r\n  },\r\n  {\r\n    element: <InputGroups />,\r\n    path: '/forms/elements/input-group'\r\n  },\r\n  {\r\n    element: <InputMask />,\r\n    path: '/forms/elements/input-mask'\r\n  },\r\n  {\r\n    element: <Textarea />,\r\n    path: '/forms/elements/textarea'\r\n  },\r\n  {\r\n    element: <Checkboxes />,\r\n    path: '/forms/elements/checkbox'\r\n  },\r\n  {\r\n    element: <Radio />,\r\n    path: '/forms/elements/radio'\r\n  },\r\n  {\r\n    element: <Switch />,\r\n    path: '/forms/elements/switch'\r\n  },\r\n  {\r\n    element: <Select />,\r\n    path: '/forms/elements/select'\r\n  },\r\n  {\r\n    element: <NumberInput />,\r\n    path: '/forms/elements/number-input'\r\n  },\r\n  {\r\n    element: <FileUploader />,\r\n    path: '/forms/elements/file-uploader'\r\n  },\r\n  {\r\n    element: <Editor />,\r\n    path: '/forms/elements/editor'\r\n  },\r\n  {\r\n    element: <Datepickers />,\r\n    path: '/forms/elements/pickers'\r\n  },\r\n  {\r\n    element: <FormLayouts />,\r\n    path: '/forms/layout/form-layout'\r\n  },\r\n  {\r\n    element: <Wizard />,\r\n    path: '/forms/wizard'\r\n  },\r\n  {\r\n    element: <Validation />,\r\n    path: '/forms/form-validation'\r\n  },\r\n  {\r\n    element: <FormRepeater />,\r\n    path: '/forms/form-repeater'\r\n  }\r\n]\r\n\r\nexport default FormRoutes\r\n","import { lazy } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nconst Faq = lazy(() => import('../../views/pages/faq'))\r\nconst ApiKey = lazy(() => import('../../views/pages/api-key'))\r\nconst Profile = lazy(() => import('../../views/pages/profile'))\r\nconst Pricing = lazy(() => import('../../views/pages/pricing'))\r\nconst License = lazy(() => import('../../views/pages/license'))\r\nconst Error = lazy(() => import('../../views/pages/misc/Error'))\r\nconst BlogList = lazy(() => import('../../views/pages/blog/list'))\r\nconst BlogEdit = lazy(() => import('../../views/pages/blog/edit'))\r\nconst BlogDetails = lazy(() => import('../../views/pages/blog/details'))\r\nconst ComingSoon = lazy(() => import('../../views/pages/misc/ComingSoon'))\r\nconst ModalExamples = lazy(() => import('../../views/pages/modal-examples'))\r\nconst Maintenance = lazy(() => import('../../views/pages/misc/Maintenance'))\r\nconst AccountSettings = lazy(() => import('../../views/pages/account-settings'))\r\nconst NotAuthorized = lazy(() => import('../../views/pages/misc/NotAuthorized'))\r\nconst KnowledgeBase = lazy(() => import('../../views/pages/knowledge-base/KnowledgeBase'))\r\nconst KnowledgeBaseCategory = lazy(() => import('../../views/pages/knowledge-base/KnowledgeBaseCategory'))\r\nconst KBCategoryQuestion = lazy(() => import('../../views/pages/knowledge-base/KnowledgeBaseCategoryQuestion'))\r\n\r\nconst PagesRoutes = [\r\n  {\r\n    path: '/pages/profile',\r\n    element: <Profile />\r\n  },\r\n  {\r\n    path: '/pages/faq',\r\n    element: <Faq />\r\n  },\r\n  {\r\n    path: '/pages/knowledge-base',\r\n    element: <KnowledgeBase />\r\n  },\r\n  {\r\n    path: '/pages/knowledge-base/:category',\r\n    element: <KnowledgeBaseCategory />\r\n  },\r\n  {\r\n    path: '/pages/knowledge-base/:category/:question',\r\n    element: <KBCategoryQuestion />\r\n  },\r\n  {\r\n    path: '/pages/account-settings',\r\n    element: <AccountSettings />\r\n  },\r\n  {\r\n    path: '/pages/license',\r\n    element: <License />\r\n  },\r\n  {\r\n    path: '/pages/api-key',\r\n    element: <ApiKey />\r\n  },\r\n  {\r\n    path: '/pages/modal-examples',\r\n    element: <ModalExamples />\r\n  },\r\n  {\r\n    path: '/pages/blog/list',\r\n    element: <BlogList />\r\n  },\r\n  {\r\n    path: '/pages/blog/detail/:id',\r\n    element: <BlogDetails />\r\n  },\r\n  {\r\n    path: '/pages/blog/detail',\r\n    element: <Navigate to='/pages/blog/detail/1' />\r\n  },\r\n  {\r\n    path: '/pages/blog/edit/:id',\r\n    element: <BlogEdit />\r\n  },\r\n  {\r\n    path: '/pages/blog/edit',\r\n    element: <Navigate to='/pages/blog/edit/1' />\r\n  },\r\n  {\r\n    path: '/pages/pricing',\r\n    element: <Pricing />\r\n  },\r\n  {\r\n    path: '/misc/coming-soon',\r\n    element: <ComingSoon />,\r\n    meta: {\r\n      publicRoute: true,\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/not-authorized',\r\n    element: <NotAuthorized />,\r\n    meta: {\r\n      publicRoute: true,\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/maintenance',\r\n    element: <Maintenance />,\r\n    meta: {\r\n      publicRoute: true,\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/misc/error',\r\n    element: <Error />,\r\n    meta: {\r\n      publicRoute: true,\r\n      layout: 'blank'\r\n    }\r\n  }\r\n]\r\n\r\nexport default PagesRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst Reactstrap = lazy(() => import('../../views/tables/reactstrap'))\r\nconst DTBasic = lazy(() => import('../../views/tables/data-tables/basic'))\r\nconst DTAdvance = lazy(() => import('../../views/tables/data-tables/advance'))\r\n\r\nconst TablesRoutes = [\r\n  {\r\n    path: '/tables/reactstrap',\r\n    element: <Reactstrap />\r\n  },\r\n  {\r\n    path: '/datatables/basic',\r\n    element: <DTBasic />\r\n  },\r\n  {\r\n    path: '/datatables/advance',\r\n    element: <DTAdvance />\r\n  }\r\n]\r\n\r\nexport default TablesRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst ApexCharts = lazy(() => import('../../views/charts/apex'))\r\nconst ChartJS = lazy(() => import('../../views/charts/chart-js'))\r\nconst Recharts = lazy(() => import('../../views/charts/recharts'))\r\n\r\nconst ChartMapsRoutes = [\r\n  {\r\n    path: '/charts/apex',\r\n    element: <ApexCharts />\r\n  },\r\n  {\r\n    path: '/charts/chartjs',\r\n    element: <ChartJS />\r\n  },\r\n  {\r\n    path: '/charts/recharts',\r\n    element: <Recharts />\r\n  }\r\n]\r\n\r\nexport default ChartMapsRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst DashboardAnalytics = lazy(() => import('../../views/dashboard/analytics'))\r\nconst DashboardEcommerce = lazy(() => import('../../views/dashboard/ecommerce'))\r\n\r\nconst DashboardRoutes = [\r\n  // {\r\n  //   path: '/dashboard/analytics',\r\n  //   element: <DashboardAnalytics />\r\n  // },\r\n  {\r\n    path: '/dashboard',\r\n    element: <DashboardEcommerce />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  }\r\n]\r\n\r\nexport default DashboardRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst Typography = lazy(() => import('../../views/ui-elements/typography'))\r\nconst Icons = lazy(() => import('../../views/ui-elements/icons'))\r\nconst CardsBasic = lazy(() => import('../../views/ui-elements/cards/basic'))\r\nconst CardsAdvance = lazy(() => import('../../views/ui-elements/cards/advance'))\r\nconst CardsStatistics = lazy(() => import('../../views/ui-elements/cards/statistics'))\r\nconst CardsAnalytics = lazy(() => import('../../views/ui-elements/cards/analytics'))\r\nconst CardsActions = lazy(() => import('../../views/ui-elements/cards/actions'))\r\nconst Accordion = lazy(() => import('../../views/components/accordion'))\r\nconst Alerts = lazy(() => import('../../views/components/alerts'))\r\nconst Autocomplete = lazy(() => import('../../views/components/autocomplete'))\r\nconst Avatar = lazy(() => import('../../views/components/avatar'))\r\nconst Badge = lazy(() => import('../../views/components/badge'))\r\nconst BlockUI = lazy(() => import('../../views/components/block-ui'))\r\nconst Breadcrumbs = lazy(() => import('../../views/components/breadcrumbs'))\r\nconst Buttons = lazy(() => import('../../views/components/buttons'))\r\nconst Carousel = lazy(() => import('../../views/components/carousel'))\r\nconst Collapse = lazy(() => import('../../views/components/collapse'))\r\nconst Divider = lazy(() => import('../../views/components/divider'))\r\nconst Dropdown = lazy(() => import('../../views/components/dropdowns'))\r\nconst ListGroup = lazy(() => import('../../views/components/listGroup'))\r\nconst Modal = lazy(() => import('../../views/components/modal'))\r\nconst NavComponent = lazy(() => import('../../views/components/navComponent'))\r\nconst Offcanvas = lazy(() => import('../../views/components/offcanvas'))\r\nconst Pagination = lazy(() => import('../../views/components/pagination'))\r\nconst BadgePills = lazy(() => import('../../views/components/badgePills'))\r\nconst TabPills = lazy(() => import('../../views/components/tabPills'))\r\nconst Popovers = lazy(() => import('../../views/components/popovers'))\r\nconst Progress = lazy(() => import('../../views/components/progress'))\r\nconst Spinners = lazy(() => import('../../views/components/spinners'))\r\nconst Tabs = lazy(() => import('../../views/components/tabs'))\r\nconst Timeline = lazy(() => import('../../views/components/timeline'))\r\nconst Toasts = lazy(() => import('../../views/components/toasts'))\r\nconst Tooltips = lazy(() => import('../../views/components/tooltips'))\r\n\r\nconst UiElementRoutes = [\r\n  {\r\n    element: <Typography />,\r\n    path: '/ui-element/typography'\r\n  },\r\n  {\r\n    element: <Icons />,\r\n    path: '/icons/reactfeather'\r\n  },\r\n  {\r\n    path: '/cards/basic',\r\n    element: <CardsBasic />\r\n  },\r\n  {\r\n    path: '/cards/advance',\r\n    element: <CardsAdvance />\r\n  },\r\n  {\r\n    path: '/cards/statistics',\r\n    element: <CardsStatistics />\r\n  },\r\n  {\r\n    path: '/cards/analytics',\r\n    element: <CardsAnalytics />\r\n  },\r\n  {\r\n    path: '/cards/action',\r\n    element: <CardsActions />\r\n  },\r\n  {\r\n    element: <Accordion />,\r\n    path: '/components/accordion'\r\n  },\r\n  {\r\n    element: <Alerts />,\r\n    path: '/components/alerts'\r\n  },\r\n  {\r\n    element: <Autocomplete />,\r\n    path: '/components/auto-complete'\r\n  },\r\n  {\r\n    element: <Avatar />,\r\n    path: '/components/avatar'\r\n  },\r\n  {\r\n    element: <Badge />,\r\n    path: '/components/badges'\r\n  },\r\n  {\r\n    element: <BlockUI />,\r\n    path: '/components/blockui'\r\n  },\r\n  {\r\n    element: <Breadcrumbs />,\r\n    path: '/components/breadcrumbs'\r\n  },\r\n  {\r\n    element: <Buttons />,\r\n    path: '/components/buttons'\r\n  },\r\n  {\r\n    element: <Carousel />,\r\n    path: '/components/carousel'\r\n  },\r\n  {\r\n    element: <Collapse />,\r\n    path: '/components/collapse'\r\n  },\r\n  {\r\n    element: <Divider />,\r\n    path: '/components/divider'\r\n  },\r\n  {\r\n    element: <Dropdown />,\r\n    path: '/components/dropdowns'\r\n  },\r\n  {\r\n    element: <ListGroup />,\r\n    path: '/components/list-group'\r\n  },\r\n  {\r\n    element: <Modal />,\r\n    path: '/components/modals'\r\n  },\r\n  {\r\n    element: <NavComponent />,\r\n    path: '/components/nav-component'\r\n  },\r\n  {\r\n    element: <Offcanvas />,\r\n    path: '/components/offcanvas'\r\n  },\r\n  {\r\n    element: <Pagination />,\r\n    path: '/components/pagination'\r\n  },\r\n  {\r\n    element: <BadgePills />,\r\n    path: '/components/pill-badges'\r\n  },\r\n  {\r\n    element: <TabPills />,\r\n    path: '/components/pills-component'\r\n  },\r\n  {\r\n    element: <Popovers />,\r\n    path: '/components/popovers'\r\n  },\r\n  {\r\n    element: <Progress />,\r\n    path: '/components/progress'\r\n  },\r\n  {\r\n    element: <Spinners />,\r\n    path: '/components/spinners'\r\n  },\r\n  {\r\n    element: <Tabs />,\r\n    path: '/components/tabs-component'\r\n  },\r\n  {\r\n    element: <Timeline />,\r\n    path: '/components/timeline'\r\n  },\r\n  {\r\n    element: <Toasts />,\r\n    path: '/components/toasts'\r\n  },\r\n  {\r\n    element: <Tooltips />,\r\n    path: '/components/tooltips'\r\n  }\r\n]\r\n\r\nexport default UiElementRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst Tour = lazy(() => import('../../views/extensions/tour'))\r\nconst Swiper = lazy(() => import('../../views/extensions/swiper'))\r\nconst Ratings = lazy(() => import('../../views/extensions/ratings'))\r\nconst Sliders = lazy(() => import('../../views/extensions/sliders'))\r\nconst I18nComponent = lazy(() => import('../../views/extensions/i18n'))\r\nconst Pagination = lazy(() => import('../../views/extensions/pagination'))\r\nconst SweetAlert = lazy(() => import('../../views/extensions/sweet-alert'))\r\nconst ContextMenu = lazy(() => import('../../views/extensions/context-menu'))\r\nconst ReactPlayer = lazy(() => import('../../views/extensions/react-player'))\r\nconst DragAndDrop = lazy(() => import('../../views/extensions/drag-and-drop'))\r\nconst AccessControl = lazy(() => import('../../views/extensions/access-control'))\r\nconst ReactHotToast = lazy(() => import('../../views/extensions/react-hot-toasts'))\r\nconst CopyToClipboard = lazy(() => import('../../views/extensions/copy-to-clipboard'))\r\nconst ImportComponent = lazy(() => import('../../views/extensions/import-export/Import'))\r\nconst ExportComponent = lazy(() => import('../../views/extensions/import-export/Export'))\r\nconst ExportSelected = lazy(() => import('../../views/extensions/import-export/ExportSelected'))\r\n\r\nconst ExtensionsRoutes = [\r\n  {\r\n    element: <SweetAlert />,\r\n    path: '/extensions/sweet-alert'\r\n  },\r\n  {\r\n    element: <ReactHotToast />,\r\n    path: '/extensions/react-hot-toasts'\r\n  },\r\n  {\r\n    element: <Sliders />,\r\n    path: '/extensions/slider'\r\n  },\r\n  {\r\n    element: <DragAndDrop />,\r\n    path: '/extensions/drag-and-drop'\r\n  },\r\n  {\r\n    element: <Tour />,\r\n    path: '/extensions/tour'\r\n  },\r\n  {\r\n    element: <CopyToClipboard />,\r\n    path: '/extensions/clipboard'\r\n  },\r\n  {\r\n    element: <ReactPlayer />,\r\n    path: '/extensions/react-player'\r\n  },\r\n  {\r\n    element: <ContextMenu />,\r\n    path: '/extensions/context-menu'\r\n  },\r\n  {\r\n    element: <Swiper />,\r\n    path: '/extensions/swiper'\r\n  },\r\n  {\r\n    path: '/access-control',\r\n    element: <AccessControl />,\r\n    meta: {\r\n      action: 'read',\r\n      resource: 'ACL'\r\n    }\r\n  },\r\n  {\r\n    element: <Ratings />,\r\n    path: '/extensions/ratings'\r\n  },\r\n  {\r\n    element: <Pagination />,\r\n    path: '/extensions/pagination'\r\n  },\r\n  {\r\n    element: <ImportComponent />,\r\n    path: '/extensions/import'\r\n  },\r\n  {\r\n    element: <ExportComponent />,\r\n    path: '/extensions/export'\r\n  },\r\n  {\r\n    element: <ExportSelected />,\r\n    path: '/extensions/export-selected'\r\n  },\r\n  {\r\n    element: <I18nComponent />,\r\n    path: '/extensions/i18n'\r\n  }\r\n]\r\n\r\nexport default ExtensionsRoutes\r\n","import { lazy } from 'react'\r\n\r\nconst BoxedLayout = lazy(() => import('../../views/ui-elements/page-layouts/BoxedLayout'))\r\nconst WithoutMenu = lazy(() => import('../../views/ui-elements/page-layouts/WithoutMenu'))\r\nconst LayoutEmpty = lazy(() => import('../../views/ui-elements/page-layouts/LayoutEmpty'))\r\nconst LayoutBlank = lazy(() => import('../../views/ui-elements/page-layouts/LayoutBlank'))\r\nconst CollapsedMenu = lazy(() => import('../../views/ui-elements/page-layouts/CollapsedMenu'))\r\n\r\nconst PageLayoutRoutes = [\r\n  {\r\n    element: <CollapsedMenu />,\r\n    path: '/page-layout/collapse-menu',\r\n    meta: {\r\n      menuCollapsed: true\r\n    }\r\n  },\r\n  {\r\n    element: <BoxedLayout />,\r\n    path: '/page-layout/layout-boxed',\r\n    meta: {\r\n      contentWidth: 'boxed'\r\n    }\r\n  },\r\n  {\r\n    element: <WithoutMenu />,\r\n    path: '/page-layout/without-menu',\r\n    meta: {\r\n      menuHidden: true\r\n    }\r\n  },\r\n  {\r\n    element: <LayoutEmpty />,\r\n    path: '/page-layout/layout-empty'\r\n  },\r\n  {\r\n    element: <LayoutBlank />,\r\n    path: '/page-layout/layout-blank',\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  }\r\n]\r\n\r\nexport default PageLayoutRoutes\r\n","// ** React Imports\r\nimport { lazy } from 'react'\r\n\r\nconst Login = lazy(() => import('../../views/pages/authentication/Login'))\r\nconst LoginBasic = lazy(() => import('../../views/pages/authentication/LoginBasic'))\r\nconst LoginCover = lazy(() => import('../../views/pages/authentication/LoginCover'))\r\n\r\nconst Register = lazy(() => import('../../views/pages/authentication/Register'))\r\nconst RegisterBasic = lazy(() => import('../../views/pages/authentication/RegisterBasic'))\r\nconst RegisterCover = lazy(() => import('../../views/pages/authentication/RegisterCover'))\r\nconst RegisterMultiSteps = lazy(() => import('../../views/pages/authentication/register-multi-steps'))\r\n\r\nconst ForgotPassword = lazy(() => import('../../views/pages/authentication/ForgotPassword'))\r\nconst ForgotPasswordBasic = lazy(() => import('../../views/pages/authentication/ForgotPasswordBasic'))\r\nconst ForgotPasswordCover = lazy(() => import('../../views/pages/authentication/ForgotPasswordCover'))\r\n\r\nconst ResetPasswordBasic = lazy(() => import('../../views/pages/authentication/ResetPasswordBasic'))\r\nconst ResetPasswordCover = lazy(() => import('../../views/pages/authentication/ResetPasswordCover'))\r\n\r\nconst VerifyEmailBasic = lazy(() => import('../../views/pages/authentication/VerifyEmailBasic'))\r\nconst VerifyEmailCover = lazy(() => import('../../views/pages/authentication/VerifyEmailCover'))\r\n\r\nconst TwoStepsBasic = lazy(() => import('../../views/pages/authentication/TwoStepsBasic'))\r\nconst TwoStepsCover = lazy(() => import('../../views/pages/authentication/TwoStepsCover'))\r\n\r\nconst AuthenticationRoutes = [\r\n  {\r\n    path: '/login',\r\n    element: <Login />,\r\n    meta: {\r\n      layout: 'blank',\r\n      publicRoute: true,\r\n      restricted: true\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/login-basic',\r\n    element: <LoginBasic />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/login-cover',\r\n    element: <LoginCover />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/register',\r\n    element: <Register />,\r\n    meta: {\r\n      layout: 'blank',\r\n      publicRoute: true,\r\n      restricted: true\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/register-basic',\r\n    element: <RegisterBasic />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/register-cover',\r\n    element: <RegisterCover />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/register-multi-steps',\r\n    element: <RegisterMultiSteps />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n\r\n  {\r\n    path: '/forgot-password',\r\n    element: <ForgotPassword />,\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      layout: 'blank',\r\n      publicRoute: true,\r\n      restricted: true\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/forgot-password-basic',\r\n    element: <ForgotPasswordBasic />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/forgot-password-cover',\r\n    element: <ForgotPasswordCover />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/reset-password-basic',\r\n    element: <ResetPasswordBasic />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/reset-password-cover',\r\n    element: <ResetPasswordCover />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/verify-email-basic',\r\n    element: <VerifyEmailBasic />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/verify-email-cover',\r\n    element: <VerifyEmailCover />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/two-steps-basic',\r\n    element: <TwoStepsBasic />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/pages/two-steps-cover',\r\n    element: <TwoStepsCover />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  }\r\n]\r\n\r\nexport default AuthenticationRoutes\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { Settings, X } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Reactstrap Imports\r\nimport { Input, Label } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst Customizer = props => {\r\n  // ** Props\r\n  const {\r\n    skin,\r\n    isRtl,\r\n    layout,\r\n    setSkin,\r\n    setIsRtl,\r\n    isHidden,\r\n    setLayout,\r\n    navbarType,\r\n    footerType,\r\n    navbarColor,\r\n    setIsHidden,\r\n    contentWidth,\r\n    menuCollapsed,\r\n    setLastLayout,\r\n    setNavbarType,\r\n    setFooterType,\r\n    setNavbarColor,\r\n    setContentWidth,\r\n    setMenuCollapsed\r\n  } = props\r\n\r\n  // ** State\r\n  const [openCustomizer, setOpenCustomizer] = useState(false)\r\n\r\n  // ** Toggles Customizer\r\n  const handleToggle = e => {\r\n    e.preventDefault()\r\n    setOpenCustomizer(!openCustomizer)\r\n  }\r\n\r\n  // ** Render Layout Skin Options\r\n  const renderSkinsRadio = () => {\r\n    const skinsArr = [\r\n      {\r\n        name: 'light',\r\n        label: 'Light',\r\n        checked: skin === 'light'\r\n      },\r\n      {\r\n        name: 'bordered',\r\n        label: 'Bordered',\r\n        checked: skin === 'bordered'\r\n      },\r\n      {\r\n        name: 'dark',\r\n        label: 'Dark',\r\n        checked: skin === 'dark'\r\n      },\r\n      {\r\n        name: 'semi-dark',\r\n        label: 'Semi Dark',\r\n        checked: skin === 'semi-dark'\r\n      }\r\n    ]\r\n\r\n    return skinsArr.map((radio, index) => {\r\n      const marginCondition = index !== skinsArr.length - 1\r\n\r\n      if (layout === 'horizontal' && radio.name === 'semi-dark') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\r\n          <Label className='form-check-label' for={radio.name}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Navbar Colors Options\r\n  const renderNavbarColors = () => {\r\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\r\n\r\n    return colorsArr.map(color => (\r\n      <li\r\n        key={color}\r\n        className={classnames(`color-box bg-${color}`, {\r\n          selected: navbarColor === color,\r\n          border: color === 'white'\r\n        })}\r\n        onClick={() => setNavbarColor(color)}\r\n      ></li>\r\n    ))\r\n  }\r\n\r\n  // ** Render Navbar Type Options\r\n  const renderNavbarTypeRadio = () => {\r\n    const navbarTypeArr = [\r\n      {\r\n        name: 'floating',\r\n        label: 'Floating',\r\n        checked: navbarType === 'floating'\r\n      },\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: navbarType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: navbarType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: navbarType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return navbarTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== navbarTypeArr.length - 1\r\n\r\n      if (layout === 'horizontal' && radio.name === 'hidden') {\r\n        return null\r\n      }\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\r\n          <Label className='form-check-label' for={radio.name}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Render Footer Type Options\r\n  const renderFooterTypeRadio = () => {\r\n    const footerTypeArr = [\r\n      {\r\n        name: 'sticky',\r\n        label: 'Sticky',\r\n        checked: footerType === 'sticky'\r\n      },\r\n      {\r\n        name: 'static',\r\n        label: 'Static',\r\n        checked: footerType === 'static'\r\n      },\r\n      {\r\n        name: 'hidden',\r\n        label: 'Hidden',\r\n        checked: footerType === 'hidden'\r\n      }\r\n    ]\r\n\r\n    return footerTypeArr.map((radio, index) => {\r\n      const marginCondition = index !== footerTypeArr.length - 1\r\n\r\n      return (\r\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\r\n          <Input\r\n            type='radio'\r\n            checked={radio.checked}\r\n            id={`footer-${radio.name}`}\r\n            onChange={() => setFooterType(radio.name)}\r\n          />\r\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\r\n            {radio.label}\r\n          </Label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('customizer d-none d-md-block', {\r\n        open: openCustomizer\r\n      })}\r\n    >\r\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\r\n        <Settings size={14} className='spinner' />\r\n      </a>\r\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\r\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\r\n          <h4 className='mb-0'>Theme Customizer</h4>\r\n          <p className='m-0'>Customize & Preview in Real Time</p>\r\n          <a href='/' className='customizer-close' onClick={handleToggle}>\r\n            <X />\r\n          </a>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Skin</p>\r\n            <div className='d-flex'>{renderSkinsRadio()}</div>\r\n          </div>\r\n\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Content Width</p>\r\n            <div className='d-flex'>\r\n              <div className='form-check me-1'>\r\n                <Input\r\n                  type='radio'\r\n                  id='full-width'\r\n                  checked={contentWidth === 'full'}\r\n                  onChange={() => setContentWidth('full')}\r\n                />\r\n                <Label className='form-check-label' for='full-width'>\r\n                  Full Width\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input\r\n                  id='boxed'\r\n                  type='radio'\r\n                  checked={contentWidth === 'boxed'}\r\n                  onChange={() => setContentWidth('boxed')}\r\n                />\r\n                <Label className='form-check-label' for='boxed'>\r\n                  Boxed\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='form-switch mb-2 ps-0'>\r\n            <div className='d-flex'>\r\n              <p className='fw-bold me-auto mb-0'>RTL</p>\r\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <p className='fw-bold'>Menu Layout</p>\r\n          <div className='mb-2'>\r\n            <div className='d-flex align-items-center'>\r\n              <div className='form-check me-1'>\r\n                <Input\r\n                  type='radio'\r\n                  id='vertical-layout'\r\n                  checked={layout === 'vertical'}\r\n                  onChange={() => {\r\n                    setLayout('vertical')\r\n                    setLastLayout('vertical')\r\n                  }}\r\n                />\r\n                <Label className='form-check-label' for='vertical-layout'>\r\n                  Vertical\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input\r\n                  type='radio'\r\n                  id='horizontal-layout'\r\n                  checked={layout === 'horizontal'}\r\n                  onChange={() => {\r\n                    setLayout('horizontal')\r\n                    setLastLayout('horizontal')\r\n                  }}\r\n                />\r\n                <Label className='form-check-label' for='horizontal-layout'>\r\n                  Horizontal\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {layout !== 'horizontal' ? (\r\n            <div className='form-switch mb-2 ps-0'>\r\n              <div className='d-flex align-items-center'>\r\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\r\n                <Input\r\n                  type='switch'\r\n                  id='menu-collapsed'\r\n                  name='menu-collapsed'\r\n                  checked={menuCollapsed}\r\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='form-switch mb-2 ps-0'>\r\n            <div className='d-flex align-items-center'>\r\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\r\n              <Input\r\n                type='switch'\r\n                id='menu-hidden'\r\n                name='menu-hidden'\r\n                checked={isHidden}\r\n                onChange={() => setIsHidden(!isHidden)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          {layout !== 'horizontal' ? (\r\n            <div className='mb-2'>\r\n              <p className='fw-bold'>Navbar Color</p>\r\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>{layout === 'horizontal' ? 'Menu' : 'Navbar'} Type</p>\r\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className='px-2'>\r\n          <div className='mb-2'>\r\n            <p className='fw-bold'>Footer Type</p>\r\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\r\n          </div>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Customizer\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\n\r\nconst ScrollTop = props => {\r\n  // ** Props\r\n  const { showOffset, scrollBehaviour, children, ...rest } = props\r\n\r\n  // ** State\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (window) {\r\n      window.addEventListener('scroll', () => {\r\n        if (window.pageYOffset >= showOffset) {\r\n          setVisible(true)\r\n        } else {\r\n          setVisible(false)\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleScrollToTop = () => {\r\n    window.scroll({ top: 0, behavior: scrollBehaviour })\r\n  }\r\n\r\n  return (\r\n    visible && (\r\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\r\n        {children}\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ScrollTop\r\n\r\n// ** PropTypes\r\nScrollTop.propTypes = {\r\n  showOffset: Proptypes.number,\r\n  children: Proptypes.any.isRequired,\r\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\r\n}\r\n\r\nScrollTop.defaultProps = {\r\n  scrollBehaviour: 'smooth'\r\n}\r\n","// ** Icons Import\r\nimport { Heart } from 'react-feather'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <p className='clearfix mb-0'>\r\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\r\n        COPYRIGHT © {new Date().getFullYear()}{' '}\r\n        <a href='https://ebslon.com/' target='_blank' rel='noopener noreferrer'>\r\n          Ebslon Infotech\r\n        </a>\r\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\r\n      </span>\r\n      <span className='float-md-end d-none d-md-block'>\r\n        Hand-crafted & Made with\r\n        <Heart size={14} />\r\n      </span>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// ** Third Party Components\r\nimport { useTranslation } from 'react-i18next'\r\nimport ReactCountryFlag from 'react-country-flag'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\r\n\r\nconst IntlDropdown = () => {\r\n  // ** Hooks\r\n  const { i18n } = useTranslation()\r\n\r\n  // ** Vars\r\n  const langObj = {\r\n    en: 'English',\r\n    de: 'German',\r\n    fr: 'French',\r\n    pt: 'Portuguese'\r\n  }\r\n\r\n  // ** Function to switch Language\r\n  const handleLangUpdate = (e, lang) => {\r\n    e.preventDefault()\r\n    i18n.changeLanguage(lang)\r\n  }\r\n\r\n  return (\r\n    <UncontrolledDropdown href='/' tag='li' className='dropdown-language nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link' onClick={e => e.preventDefault()}>\r\n        <ReactCountryFlag\r\n          svg\r\n          className='country-flag flag-icon'\r\n          countryCode={i18n.language === 'en' ? 'us' : i18n.language}\r\n        />\r\n        <span className='selected-language'>{langObj[i18n.language]}</span>\r\n      </DropdownToggle>\r\n      <DropdownMenu className='mt-0' end>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'en')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='us' svg />\r\n          <span className='ms-1'>English</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'fr')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='fr' svg />\r\n          <span className='ms-1'>French</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'de')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='de' svg />\r\n          <span className='ms-1'>German</span>\r\n        </DropdownItem>\r\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'pt')}>\r\n          <ReactCountryFlag className='country-flag' countryCode='pt' svg />\r\n          <span className='ms-1'>Portuguese</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default IntlDropdown\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect, Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { ShoppingCart, X, Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem, Badge, Button } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCartItems, deleteCartItem, getProduct } from '@src/views/apps/ecommerce/store'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/input-number/input-number.scss'\r\n\r\nconst CartDropdown = () => {\r\n  // ** State\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.ecommerce)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getCartItems())\r\n  }, [])\r\n\r\n  // ** Function to toggle Dropdown\r\n  const toggle = () => setDropdownOpen(prevState => !prevState)\r\n\r\n  // ** Function to call on Dropdown Item Click\r\n  const handleDropdownItemClick = id => {\r\n    dispatch(getProduct(id))\r\n    toggle()\r\n  }\r\n\r\n  // ** Loops through Cart Array to return Cart Items\r\n  const renderCartItems = () => {\r\n    if (store.cart.length) {\r\n      let total = 0\r\n\r\n      return (\r\n        <Fragment>\r\n          <PerfectScrollbar\r\n            className='scrollable-container media-list'\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            {store.cart.map(item => {\r\n              total += item.price\r\n\r\n              return (\r\n                <div key={item.id} className='list-item align-items-center'>\r\n                  <img className='d-block rounded me-1' src={item.image} alt={item.name} width='62' />\r\n                  <div className='list-item-body flex-grow-1'>\r\n                    <X size={14} className='cart-item-remove' onClick={() => dispatch(deleteCartItem(item.id))} />\r\n                    <div className='media-heading'>\r\n                      <h6 className='cart-item-title'>\r\n                        <Link\r\n                          className='text-body'\r\n                          to={`/apps/ecommerce/product/${item.slug}`}\r\n                          onClick={() => handleDropdownItemClick(item.id)}\r\n                        >\r\n                          {item.name}\r\n                        </Link>\r\n                      </h6>\r\n                      <small className='cart-item-by'>by {item.brand}</small>\r\n                    </div>\r\n                    <div className='cart-item-qty'>\r\n                      <InputNumber\r\n                        min={1}\r\n                        max={10}\r\n                        upHandler={<Plus />}\r\n                        className='cart-input'\r\n                        defaultValue={item.qty}\r\n                        downHandler={<Minus />}\r\n                      />\r\n                    </div>\r\n                    <h5 className='cart-item-price'>${item.price}</h5>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </PerfectScrollbar>\r\n          <li className='dropdown-menu-footer'>\r\n            <div className='d-flex justify-content-between mb-1'>\r\n              <h6 className='fw-bolder mb-0'>Total:</h6>\r\n              <h6 className='text-primary fw-bolder mb-0'>${Number(total.toFixed(2))}</h6>\r\n            </div>\r\n            <Button tag={Link} to='/apps/ecommerce/checkout' color='primary' block onClick={toggle}>\r\n              Checkout\r\n            </Button>\r\n          </li>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return <p className='m-0 p-1 text-center'>Your cart is empty</p>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} tag='li' className='dropdown-cart nav-item me-25'>\r\n      <DropdownToggle tag='a' className='nav-link position-relative'>\r\n        <ShoppingCart className='ficon' />\r\n        {store.cart.length > 0 ? (\r\n          <Badge pill color='primary' className='badge-up'>\r\n            {store.cart.length}\r\n          </Badge>\r\n        ) : null}\r\n      </DropdownToggle>\r\n      <DropdownMenu end tag='ul' className='dropdown-menu-media dropdown-cart mt-0'>\r\n        <li className='dropdown-menu-header'>\r\n          <DropdownItem tag='div' className='d-flex' header>\r\n            <h4 className='notification-title mb-0 me-auto'>My Cart</h4>\r\n            <Badge color='light-primary' pill>\r\n              {store.cart.length || 0} Items\r\n            </Badge>\r\n          </DropdownItem>\r\n        </li>\r\n        {renderCartItems()}\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\nexport default CartDropdown\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/authentication'\r\n\r\n// ** Third Party Components\r\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\r\n\r\n// ** Default Avatar Image\r\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\nconst UserDropdown = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** State\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (isUserLoggedIn() && isUserLoggedIn() !== null) {\r\n      setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }\r\n  }, [])\r\n\r\n  //** Vars\r\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\r\n\r\n  return (\r\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\r\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\r\n        <div className='user-nav d-sm-flex d-none'>\r\n          {/* <span className='user-name fw-bold'>{(userData && userData.user && userData?.user['name']) || 'No Name'}</span> */}\r\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\r\n        </div>\r\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\r\n      </DropdownToggle>\r\n      <DropdownMenu end>\r\n        {/* <DropdownItem tag={Link} to='/apps/email'>\r\n          <Mail size={14} className='me-75' />\r\n          <span className='align-middle'>Inbox</span>\r\n        </DropdownItem> */}\r\n        {/* <DropdownItem tag={Link} to='/apps/todo'>\r\n          <CheckSquare size={14} className='me-75' />\r\n          <span className='align-middle'>Tasks</span>\r\n        </DropdownItem> */}\r\n        {/* <DropdownItem tag={Link} to='/apps/chat'>\r\n          <MessageSquare size={14} className='me-75' />\r\n          <span className='align-middle'>Chats</span>\r\n        </DropdownItem> */}\r\n        <DropdownItem divider />\r\n        {/* <DropdownItem tag={Link} to='/pages/account-settings'>\r\n          <Settings size={14} className='me-75' />\r\n          <span className='align-middle'>Settings</span>\r\n        </DropdownItem> */}\r\n        {/* <DropdownItem tag={Link} to='/pages/pricing'>\r\n          <CreditCard size={14} className='me-75' />\r\n          <span className='align-middle'>Pricing</span>\r\n        </DropdownItem> */}\r\n        {/* <DropdownItem tag={Link} to='/pages/faq'>\r\n          <HelpCircle size={14} className='me-75' />\r\n          <span className='align-middle'>FAQ</span>\r\n        </DropdownItem> */}\r\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\r\n          <Power size={14} className='me-75' />\r\n          <span className='align-middle'>Logout</span>\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  )\r\n}\r\n\r\nexport default UserDropdown\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport classnames from 'classnames'\r\nimport * as Icon from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleSearchQuery } from '@store/navbar'\r\n\r\n// ** Custom Components\r\nimport Autocomplete from '@components/autocomplete'\r\n\r\nconst NavbarSearch = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** States\r\n  const [suggestions, setSuggestions] = useState([])\r\n  const [navbarSearch, setNavbarSearch] = useState(false)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    axios.get('/api/main-search/data').then(({ data }) => {\r\n      setSuggestions(data.searchArr)\r\n    })\r\n  }, [])\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (navbarSearch === true) {\r\n      setNavbarSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!navbarSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to close search on ESC & ENTER Click\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setNavbarSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to handle search suggestion Click\r\n  const handleSuggestionItemClick = () => {\r\n    setNavbarSearch(false)\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle search list Click\r\n  const handleListItemClick = (func, link, e) => {\r\n    func(link, e)\r\n    setTimeout(() => {\r\n      setNavbarSearch(false)\r\n    }, 1)\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  return (\r\n    <NavItem className='nav-search' onClick={() => setNavbarSearch(true)}>\r\n      <NavLink className='nav-link-search'>\r\n        <Icon.Search className='ficon' />\r\n      </NavLink>\r\n      <div\r\n        className={classnames('search-input', {\r\n          open: navbarSearch === true\r\n        })}\r\n      >\r\n        <div className='search-input-icon'>\r\n          <Icon.Search />\r\n        </div>\r\n        {navbarSearch ? (\r\n          <Autocomplete\r\n            className='form-control'\r\n            suggestions={suggestions}\r\n            filterKey='title'\r\n            filterHeaderKey='groupTitle'\r\n            grouped={true}\r\n            placeholder='Explore Vuexy...'\r\n            autoFocus={true}\r\n            onSuggestionItemClick={handleSuggestionItemClick}\r\n            externalClick={handleExternalClick}\r\n            clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n            onKeyDown={onKeyDown}\r\n            onChange={e => dispatch(handleSearchQuery(e.target.value))}\r\n            customRender={(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => {\r\n              const IconTag = Icon[item.icon ? item.icon : 'X']\r\n              return (\r\n                <li\r\n                  className={classnames('suggestion-item', {\r\n                    active: filteredData.indexOf(item) === activeSuggestion\r\n                  })}\r\n                  key={i}\r\n                  onClick={e => handleListItemClick(onSuggestionItemClick, item.link, e)}\r\n                  onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                >\r\n                  <div\r\n                    className={classnames({\r\n                      'd-flex justify-content-between align-items-center': item.file || item.img\r\n                    })}\r\n                  >\r\n                    <div className='item-container d-flex'>\r\n                      {item.icon ? (\r\n                        <IconTag size={17} />\r\n                      ) : item.file ? (\r\n                        <img src={item.file} height='36' width='28' alt={item.title} />\r\n                      ) : item.img ? (\r\n                        <img className='rounded-circle mt-25' src={item.img} height='28' width='28' alt={item.title} />\r\n                      ) : null}\r\n                      <div className='item-info ms-1'>\r\n                        <p className='align-middle mb-0'>{item.title}</p>\r\n                        {item.by || item.email ? (\r\n                          <small className='text-muted'>{item.by ? item.by : item.email ? item.email : null}</small>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                    {item.size || item.date ? (\r\n                      <div className='meta-container'>\r\n                        <small className='text-muted'>{item.size ? item.size : item.date ? item.date : null}</small>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </li>\r\n              )\r\n            }}\r\n          />\r\n        ) : null}\r\n        <div className='search-input-close'>\r\n          <Icon.X\r\n            className='ficon'\r\n            onClick={e => {\r\n              e.stopPropagation()\r\n              setNavbarSearch(false)\r\n              handleClearQueryInStore()\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  )\r\n}\r\n\r\nexport default NavbarSearch\r\n","// ** Dropdowns Imports\r\nimport IntlDropdown from './IntlDropdown'\r\nimport CartDropdown from './CartDropdown'\r\nimport UserDropdown from './UserDropdown'\r\nimport NavbarSearch from './NavbarSearch'\r\nimport NotificationDropdown from './NotificationDropdown'\r\n\r\n// ** Third Party Components\r\nimport { Sun, Moon } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { NavItem, NavLink } from 'reactstrap'\r\n\r\nconst NavbarUser = props => {\r\n  // ** Props\r\n  const { skin, setSkin } = props\r\n\r\n  // ** Function to toggle Theme (Light/Dark)\r\n  const ThemeToggler = () => {\r\n    if (skin === 'dark') {\r\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\r\n    } else {\r\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ul className='nav navbar-nav align-items-center ms-auto'>\r\n      {/* <IntlDropdown /> */}\r\n      {/* <NavItem className='d-none d-lg-block'>\r\n        <NavLink className='nav-link-style'>\r\n          <ThemeToggler />\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavbarSearch />\r\n      <CartDropdown /> */}\r\n      {/* <NotificationDropdown /> */}\r\n      <UserDropdown />\r\n    </ul>\r\n  )\r\n}\r\nexport default NavbarUser\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport * as Icon from 'react-feather'\r\nimport classnames from 'classnames'\r\n\r\n// ** Custom Component\r\nimport Autocomplete from '@components/autocomplete'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  NavItem,\r\n  NavLink,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/navbar'\r\n\r\nconst NavbarBookmarks = props => {\r\n  // ** Props\r\n  const { setMenuVisibility } = props\r\n\r\n  // ** State\r\n  const [value, setValue] = useState('')\r\n  const [openSearch, setOpenSearch] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.navbar)\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    dispatch(getBookmarks())\r\n  }, [])\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const renderBookmarks = () => {\r\n    if (store.bookmarks.length) {\r\n      return store.bookmarks\r\n        .map(item => {\r\n          const IconTag = Icon[item.icon]\r\n          return (\r\n            <NavItem key={item.target} className='d-none d-lg-block'>\r\n              <NavLink tag={Link} to={item.link} id={item.target}>\r\n                <IconTag className='ficon' />\r\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\r\n              </NavLink>\r\n            </NavItem>\r\n          )\r\n        })\r\n        .slice(0, 10)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\r\n  const renderExtraBookmarksDropdown = () => {\r\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\r\n      return (\r\n        <NavItem className='d-none d-lg-block'>\r\n          <NavLink tag='span'>\r\n            <UncontrolledDropdown>\r\n              <DropdownToggle tag='span'>\r\n                <Icon.ChevronDown className='ficon' />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                {store.bookmarks\r\n                  .map(item => {\r\n                    const IconTag = Icon[item.icon]\r\n                    return (\r\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\r\n                        <IconTag className='me-50' size={14} />\r\n                        <span className='align-middle'>{item.title}</span>\r\n                      </DropdownItem>\r\n                    )\r\n                  })\r\n                  .slice(10)}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </NavLink>\r\n        </NavItem>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // ** Removes query in store\r\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\r\n\r\n  // ** Loops through Bookmarks Array to return Bookmarks\r\n  const onKeyDown = e => {\r\n    if (e.keyCode === 27 || e.keyCode === 13) {\r\n      setTimeout(() => {\r\n        setOpenSearch(false)\r\n        handleClearQueryInStore()\r\n      }, 1)\r\n    }\r\n  }\r\n\r\n  // ** Function to toggle Bookmarks\r\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\r\n\r\n  // ** Function to handle Bookmarks visibility\r\n  const handleBookmarkVisibility = () => {\r\n    setOpenSearch(!openSearch)\r\n    setValue('')\r\n    handleClearQueryInStore()\r\n  }\r\n\r\n  // ** Function to handle Input change\r\n  const handleInputChange = e => {\r\n    setValue(e.target.value)\r\n    dispatch(handleSearchQuery(e.target.value))\r\n  }\r\n\r\n  // ** Function to handle external Input click\r\n  const handleExternalClick = () => {\r\n    if (openSearch === true) {\r\n      setOpenSearch(false)\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  // ** Function to clear input value\r\n  const handleClearInput = setUserInput => {\r\n    if (!openSearch) {\r\n      setUserInput('')\r\n      handleClearQueryInStore()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className='navbar-nav d-xl-none'>\r\n        <NavItem className='mobile-menu me-auto'>\r\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\r\n            <Icon.Menu className='ficon' />\r\n          </NavLink>\r\n        </NavItem>\r\n      </ul>\r\n      <ul className='nav navbar-nav bookmark-icons'>\r\n        {renderBookmarks()}\r\n        {renderExtraBookmarksDropdown()}\r\n        <NavItem className='nav-item d-none d-lg-block'>\r\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\r\n            <Icon.Star className='ficon text-warning' />\r\n          </NavLink>\r\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\r\n            <div className='bookmark-input-icon'>\r\n              <Icon.Search size={14} />\r\n            </div>\r\n            {openSearch && store.suggestions.length ? (\r\n              <Autocomplete\r\n                wrapperClass={classnames('search-list search-list-bookmark', {\r\n                  show: openSearch\r\n                })}\r\n                className='form-control'\r\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\r\n                filterKey='title'\r\n                autoFocus={true}\r\n                defaultSuggestions\r\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\r\n                placeholder='Search...'\r\n                externalClick={handleExternalClick}\r\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\r\n                onKeyDown={onKeyDown}\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                customRender={(\r\n                  item,\r\n                  i,\r\n                  filteredData,\r\n                  activeSuggestion,\r\n                  onSuggestionItemClick,\r\n                  onSuggestionItemHover\r\n                ) => {\r\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\r\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\r\n                        active: filteredData.indexOf(item) === activeSuggestion\r\n                      })}\r\n                    >\r\n                      <Link\r\n                        to={item.link}\r\n                        className='d-flex align-items-center justify-content-between p-0'\r\n                        onClick={() => {\r\n                          setOpenSearch(false)\r\n                          handleClearQueryInStore()\r\n                        }}\r\n                        style={{\r\n                          width: 'calc(90%)'\r\n                        }}\r\n                      >\r\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\r\n                          <IconTag size={17.5} className='me-75' />\r\n                          <span className='text-truncate'>{item.title}</span>\r\n                        </div>\r\n                      </Link>\r\n                      <Icon.Star\r\n                        size={17.5}\r\n                        className={classnames('bookmark-icon float-end', {\r\n                          'text-warning': item.isBookmarked\r\n                        })}\r\n                        onClick={() => handleBookmarkUpdate(item.id)}\r\n                      />\r\n                    </li>\r\n                  )\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </NavItem>\r\n      </ul>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NavbarBookmarks\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport NavbarUser from './NavbarUser'\r\nimport NavbarBookmarks from './NavbarBookmarks'\r\n\r\nconst ThemeNavbar = props => {\r\n  // ** Props\r\n  const { skin, setSkin, setMenuVisibility } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='bookmark-wrapper d-flex align-items-center'>\r\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\r\n      </div>\r\n      <NavbarUser skin={skin} setSkin={setSkin} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ThemeNavbar\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Disc, X, Circle } from 'react-feather'\r\n\r\n// ** Config\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Utils\r\nimport { getUserData, getHomeRouteForLoggedInUser } from '@utils'\r\n\r\nconst VerticalMenuHeader = props => {\r\n  // ** Props\r\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\r\n\r\n  // ** Vars\r\n  const user = getUserData()\r\n\r\n  // ** Reset open group\r\n  useEffect(() => {\r\n    if (!menuHover && menuCollapsed) setGroupOpen([])\r\n  }, [menuHover, menuCollapsed])\r\n\r\n  // ** Menu toggler component\r\n  const Toggler = () => {\r\n    if (!menuCollapsed) {\r\n      return (\r\n        <Disc\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(true)}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Circle\r\n          size={20}\r\n          data-tour='toggle-icon'\r\n          className='text-primary toggle-icon d-none d-xl-block'\r\n          onClick={() => setMenuCollapsed(false)}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='navbar-header'>\r\n      <ul className='nav navbar-nav flex-row'>\r\n        <li className='nav-item me-auto'>\r\n          <NavLink to={user ? getHomeRouteForLoggedInUser(user.role) : '/'} className='navbar-brand'>\r\n            <span className='brand-logo'>\r\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n            </span>\r\n            <h3 className='brand-text mb-0'>{themeConfig.app.appName} asd</h3>\r\n          </NavLink>\r\n        </li>\r\n        <li className='nav-item nav-toggle'>\r\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\r\n            <Toggler />\r\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalMenuHeader\r\n","// ** React Imports\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item.externalLink ? 'a' : NavLink\r\nconsole.log(item, \"itemitem\")\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <li\r\n      className={classnames({\r\n        'nav-item': !item.children,\r\n        disabled: item.disabled,\r\n        active: item.navLink === activeItem\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className='d-flex align-items-center'\r\n        target={item.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item.externalLink === true\r\n          ? {\r\n              href: item.navLink || '/'\r\n            }\r\n          : {\r\n              to: item.navLink || '/',\r\n              className: ({ isActive }) => {\r\n                if (isActive && !item.disabled) {\r\n                  return 'd-flex align-items-center active'\r\n                }\r\n              }\r\n            })}\r\n        onClick={e => {\r\n          if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\r\n            e.preventDefault()\r\n          }\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuLink\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n// ** React Imports\r\nimport { useContext } from 'react'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveVerticalNavMenuItemComponent = item => {\r\n  if (item.header) return 'VerticalNavMenuSectionHeader'\r\n  if (item.children) return 'VerticalNavMenuGroup'\r\n  return 'VerticalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Return which component to render based on it's data/context\r\n * @param {Object} item nav menu item\r\n */\r\nexport const resolveHorizontalNavMenuItemComponent = item => {\r\n  if (item?.children) return 'HorizontalNavMenuGroup'\r\n  return 'HorizontalNavMenuLink'\r\n}\r\n\r\n/**\r\n * Check if nav-link is active\r\n * @param {Object} link nav-link object\r\n */\r\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\r\n  return (\r\n    currentURL === link ||\r\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\r\n  )\r\n  // return currentURL === link\r\n}\r\n\r\n/**\r\n * Check if the given item has the given url\r\n * in one of its children\r\n *\r\n * @param item\r\n * @param activeItem\r\n */\r\nexport const hasActiveChild = (item, currentUrl) => {\r\n  const { children } = item\r\n\r\n  if (!children) {\r\n    return false\r\n  }\r\n\r\n  for (const child of children) {\r\n    if (child.children) {\r\n      if (hasActiveChild(child, currentUrl)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    // Check if the child has a link and is active\r\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Check if this is a children\r\n * of the given item\r\n *\r\n * @param children\r\n * @param openGroup\r\n * @param currentActiveGroup\r\n */\r\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\r\n  children.forEach(child => {\r\n    if (!currentActiveGroup.includes(child.id)) {\r\n      const index = openGroup.indexOf(child.id)\r\n      if (index > -1) openGroup.splice(index, 1)\r\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\r\n    }\r\n  })\r\n}\r\n\r\nconst checkForVisibleChild = (arr, ability) => {\r\n  return arr.some(i => {\r\n    if (i.children) {\r\n      return checkForVisibleChild(i.children, ability)\r\n    } else {\r\n      return ability.can(i.action, i.resource)\r\n    }\r\n  })\r\n}\r\n\r\nexport const canViewMenuGroup = item => {\r\n  const ability = useContext(AbilityContext)\r\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\r\n  const hasAnyVisibleChild = item.children && checkForVisibleChild(item.children, ability)\r\n\r\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\r\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\r\n  if (!(item.action && item.resource)) {\r\n    return hasAnyVisibleChild\r\n  }\r\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\r\n}\r\n\r\nexport const canViewMenuItem = item => {\r\n  const ability = useContext(AbilityContext)\r\n  return ability.can(item.action, item.resource)\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Reactstrap Imports\r\nimport { Collapse, Badge } from 'reactstrap'\r\n\r\n// ** Vertical Menu Items Component\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\n// ** Utils\r\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\r\n\r\nconst VerticalNavMenuGroup = ({\r\n  item,\r\n  groupOpen,\r\n  menuHover,\r\n  activeItem,\r\n  parentItem,\r\n  groupActive,\r\n  setGroupOpen,\r\n  menuCollapsed,\r\n  setGroupActive,\r\n  currentActiveGroup,\r\n  setCurrentActiveGroup,\r\n  ...rest\r\n}) => {\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const location = useLocation()\r\n\r\n  // ** Current Val\r\n  const currentURL = useLocation().pathname\r\n\r\n  // ** Toggle Open Group\r\n  const toggleOpenGroup = (item, parent) => {\r\n    let openGroup = groupOpen\r\n    const activeGroup = groupActive\r\n\r\n    // ** If Group is already open and clicked, close the group\r\n    if (openGroup.includes(item.id)) {\r\n      openGroup.splice(openGroup.indexOf(item.id), 1)\r\n\r\n      // ** If clicked Group has open group children, Also remove those children to close those groups\r\n      if (item.children) {\r\n        removeChildren(item.children, openGroup, groupActive)\r\n      }\r\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\r\n      // ** If Group clicked is Active Group\r\n\r\n      // ** If Active group is closed and clicked again, we should open active group else close active group\r\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\r\n        activeGroup.push(item.id)\r\n      } else {\r\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\r\n      }\r\n\r\n      // ** Update Active Group\r\n      setGroupActive([...activeGroup])\r\n    } else if (parent) {\r\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\r\n      if (parent.children) {\r\n        removeChildren(parent.children, openGroup, groupActive)\r\n      }\r\n\r\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    } else {\r\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\r\n\r\n      // ** Empty Open Group array\r\n      openGroup = []\r\n\r\n      // ** Push current clicked group item to Open Group array\r\n      if (!openGroup.includes(item.id)) {\r\n        openGroup.push(item.id)\r\n      }\r\n    }\r\n    setGroupOpen([...openGroup])\r\n  }\r\n\r\n  // ** On Group Item Click\r\n  const onCollapseClick = (e, item) => {\r\n    toggleOpenGroup(item, parentItem)\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  // ** Checks url & updates active item\r\n  useEffect(() => {\r\n    if (hasActiveChild(item, currentURL)) {\r\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\r\n    } else {\r\n      const index = groupActive.indexOf(item.id)\r\n      if (index > -1) groupActive.splice(index, 1)\r\n    }\r\n    setGroupActive([...groupActive])\r\n    setCurrentActiveGroup([...groupActive])\r\n    setGroupOpen([])\r\n  }, [location])\r\n\r\n  // ** Returns condition to add open class\r\n  const openClassCondition = id => {\r\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\r\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\r\n        return true\r\n      }\r\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\r\n      return false\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={classnames('nav-item has-sub', {\r\n        open: openClassCondition(item.id),\r\n        'menu-collapsed-open': groupActive.includes(item.id),\r\n        'sidebar-group-active':\r\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\r\n      })}\r\n    >\r\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\r\n        {item.icon}\r\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\r\n\r\n        {item.badge && item.badgeText ? (\r\n          <Badge className='ms-auto me-1' color={item.badge} pill>\r\n            {item.badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </Link>\r\n\r\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\r\n      <ul className='menu-content'>\r\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\r\n          <VerticalNavMenuItems\r\n            {...rest}\r\n            items={item.children}\r\n            groupActive={groupActive}\r\n            setGroupActive={setGroupActive}\r\n            currentActiveGroup={currentActiveGroup}\r\n            setCurrentActiveGroup={setCurrentActiveGroup}\r\n            groupOpen={groupOpen}\r\n            setGroupOpen={setGroupOpen}\r\n            parentItem={item}\r\n            menuCollapsed={menuCollapsed}\r\n            menuHover={menuHover}\r\n            activeItem={activeItem}\r\n          />\r\n        </Collapse>\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuGroup\r\n","// ** Third Party Components\r\nimport { MoreHorizontal } from 'react-feather'\r\n\r\nconst VerticalNavMenuSectionHeader = ({ item }) => {\r\n  return (\r\n    <li className='navigation-header'>\r\n      <span>{item.header}</span>\r\n      <MoreHorizontal className='feather-more-horizontal' />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default VerticalNavMenuSectionHeader\r\n","// ** Vertical Menu Components\r\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\r\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\r\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\r\n\r\n// ** Utils\r\nimport {\r\n  canViewMenuItem,\r\n  canViewMenuGroup,\r\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\r\n} from '@layouts/utils'\r\n\r\nconst VerticalMenuNavItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    VerticalNavMenuLink,\r\n    VerticalNavMenuGroup,\r\n    VerticalNavMenuSectionHeader\r\n  }\r\n\r\n  // ** Render Nav Menu Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item.children) {\r\n      return <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return  <TagName key={item.id || item.header} item={item} {...props} />\r\n    if (item.children) {\r\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return canViewMenuItem(item) && <TagName key={item.id || item.header} item={item} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default VerticalMenuNavItems\r\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, menu, skin, menuData } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    setMenuHover(true)\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu({ ...props })\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={menuData}\r\n                  menuData={menuData}\r\n                  menuHover={menuHover}\r\n                  groupOpen={groupOpen}\r\n                  activeItem={activeItem}\r\n                  groupActive={groupActive}\r\n                  setGroupOpen={setGroupOpen}\r\n                  menuCollapsed={menuCollapsed}\r\n                  setActiveItem={setActiveItem}\r\n                  setGroupActive={setGroupActive}\r\n                  currentActiveGroup={currentActiveGroup}\r\n                  setCurrentActiveGroup={setCurrentActiveGroup}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","// ** Store Imports\r\nimport { handleNavbarType } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setNavbarType = type => {\r\n    dispatch(handleNavbarType(type))\r\n  }\r\n\r\n  return { navbarType: store.navbarType, setNavbarType }\r\n}\r\n","// ** Store Imports\r\nimport { handleFooterType } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useFooterType = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setFooterType = type => {\r\n    dispatch(handleFooterType(type))\r\n  }\r\n\r\n  return { setFooterType, footerType: store.footerType }\r\n}\r\n","// ** Store Imports\r\nimport { handleNavbarColor } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setNavbarColor = value => {\r\n    dispatch(handleNavbarColor(value))\r\n  }\r\n\r\n  return { navbarColor: store.navbarColor, setNavbarColor }\r\n}\r\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\r\n// import Button from 'react-bootstrap/Button';\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText,\r\n  Button\r\n} from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\n\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { menu, navbar, footer, children, menuData } = props\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { skin, setSkin } = useSkin()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const isHidden = layoutStore.menuHidden\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n  console.log(navbar, navbarClasses, bgColorCondition, menu, menuData, isHidden)\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {\r\n        windowWidth < 768 && (\r\n          <>\r\n            <SidebarComponent\r\n              skin={skin}\r\n              menu={menu}\r\n              menuData={menuData}\r\n              menuCollapsed={menuCollapsed}\r\n              menuVisibility={menuVisibility}\r\n              setMenuCollapsed={setMenuCollapsed}\r\n              setMenuVisibility={setMenuVisibility}\r\n            />     <Navbar\r\n              expand='lg'\r\n              container={false}\r\n              light={skin !== 'dark'}\r\n              dark={skin === 'dark' || bgColorCondition}\r\n              color={bgColorCondition ? navbarColor : undefined}\r\n              className={classnames(\r\n                `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n              )}\r\n            >\r\n              <div className='navbar-container d-flex content'>\r\n                {navbar ? (\r\n                  navbar({ skin, setSkin, setMenuVisibility })\r\n                ) : (\r\n                  <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\r\n                )}\r\n\r\n              </div>\r\n            </Navbar>\r\n          </>\r\n        )\r\n      }\r\n\r\n\r\n      {/* {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuData={menuData}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n        />\r\n      ) : null} */}\r\n\r\n      <div className='wrepaer_body' >\r\n        {children}\r\n\r\n        {/* Vertical Nav Menu Overlay */}\r\n        <div\r\n          className={classnames('sidenav-overlay', {\r\n            show: menuVisibility\r\n          })}\r\n          onClick={() => setMenuVisibility(false)}\r\n        ></div>\r\n        {/* Vertical Nav Menu Overlay */}\r\n\r\n        {themeConfig.layout.customizer === true ? (\r\n          <Customizer\r\n            skin={skin}\r\n            isRtl={isRtl}\r\n            layout={layout}\r\n            setSkin={setSkin}\r\n            setIsRtl={setIsRtl}\r\n            isHidden={isHidden}\r\n            setLayout={setLayout}\r\n            footerType={footerType}\r\n            navbarType={navbarType}\r\n            setIsHidden={setIsHidden}\r\n            themeConfig={themeConfig}\r\n            navbarColor={navbarColor}\r\n            contentWidth={contentWidth}\r\n            setFooterType={setFooterType}\r\n            setNavbarType={setNavbarType}\r\n            setLastLayout={setLastLayout}\r\n            menuCollapsed={menuCollapsed}\r\n            setNavbarColor={setNavbarColor}\r\n            setContentWidth={setContentWidth}\r\n            setMenuCollapsed={setMenuCollapsed}\r\n          />\r\n        ) : null}\r\n\r\n      </div>\r\n\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n\r\n\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// ** Icons Import\r\nimport {\r\n  Box,\r\n  Circle,\r\n  Map,\r\n  User\r\n} from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n  {\r\n    id: 'apps',\r\n    title: 'Apps',\r\n    icon: <Box />,\r\n    roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER],\r\n    children: [\r\n      {\r\n        id: 'users',\r\n        title: 'Users',\r\n        icon: <User size={12} />,\r\n        children: [\r\n          {\r\n            id: 'All Users',\r\n            title: 'All Users',\r\n            icon: <Circle />,\r\n            navLink: '/apps/user/list',\r\n            roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER]\r\n          },\r\n          {\r\n            id: 'Users With subscription',\r\n            title: 'Users With subscription',\r\n            icon: <Circle />,\r\n            navLink: '/apps/user/Users-With-Subscription',\r\n            roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER]\r\n          }\r\n\r\n        ],\r\n        roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER]\r\n\r\n      },\r\n      {\r\n        id: 'location',\r\n        title: 'Location',\r\n        icon: <Map />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n          {\r\n            id: 'locationCountry',\r\n            title: 'Country',\r\n            icon: <Circle />,\r\n            navLink: '/apps/location/country',\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN]\r\n          },\r\n          {\r\n            id: 'locationState',\r\n            title: 'State',\r\n            icon: <Circle />,\r\n            navLink: '/apps/location/state',\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN]\r\n          },\r\n          {\r\n            id: 'locationCity',\r\n            title: 'City',\r\n            icon: <Circle />,\r\n            navLink: '/apps/location/city',\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'Shop Image',\r\n        title: 'Shop Image',\r\n        icon: <Map />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n          {\r\n            id: 'Shop Image',\r\n            title: 'Shop Image',\r\n            icon: <Circle />,\r\n            navLink: '/apps/ShopImage',\r\n            roleArr: [\"ADMIN\", \"SUBADMIN\"]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'Hompage banners',\r\n        title: 'Hompage banners',\r\n        icon: <Map />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n          {\r\n            id: 'HomepageBanners',\r\n            title: 'Homepage Banners',\r\n            icon: <Circle />,\r\n            navLink: '/apps/homepageBannersimges',\r\n            roleArr: [\"ADMIN\", \"SUBADMIN\"]\r\n          }\r\n\r\n        ]\r\n      }\r\n\r\n\r\n    ]\r\n  }\r\n\r\n]\r\n","// ** Icons Import\r\nimport { Home, Activity, ShoppingCart } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    // id: 'dashboards',\r\n    // title: 'Dashboards',\r\n    // icon: <Home />,\r\n    // roleArr: [\"ADMIN\", \"DISTRIBUTOR\"],\r\n    // navLink: '/dashboard'\r\n    // children: [\r\n    //   {\r\n    //     id: 'analyticsDash',\r\n    //     title: 'Analytics',\r\n    //     icon: <Activity />,\r\n    //     navLink: '/dashboard/analytics'\r\n    //   },\r\n    //   {\r\n    //     id: 'eCommerceDash',\r\n    //     title: 'eCommerce',\r\n    //     icon: <ShoppingCart />,\r\n    //     navLink: '/dashboard/ecommerce'\r\n    //   }\r\n    // ]\r\n  }\r\n]\r\n","// ** Navigation imports\r\nimport apps from '../horizontal/apps'\r\n// import pages from './pages'\r\n// import others from './others'\r\n// import charts from './charts'\r\n// import uiElements from './ui-elements'\r\n// import formsAndTables from './forms-tables'\r\nimport dashboards from '../horizontal/dashboards'\r\n\r\n// ** Merge & Export\r\n// export default [...dashboards, ...apps, ...uiElements, ...formsAndTables, ...pages, ...charts, ...others]\r\nexport default [...dashboards, ...apps]\r\n","// ** React Imports\r\nimport { Outlet } from 'react-router-dom'\r\n\r\n// ** Core Layout Import\r\n// !Do not remove the Layout import\r\nimport Layout from '@layouts/VerticalLayout'\r\n\r\n// ** Menu Items Array\r\nimport navigation from '@src/navigation/vertical'\r\n\r\nconst VerticalLayout = props => {\r\n  // const [menuData, setMenuData] = useState([])\r\n\r\n  // ** For ServerSide navigation\r\n  // useEffect(() => {\r\n  //   axios.get(URL).then(response => setMenuData(response.data))\r\n  // }, [])\r\n\r\n  return (\r\n    <Layout menuData={navigation} {...props}>\r\n      <Outlet />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","// ** React Imports\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\r\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\r\n  const LinkTag = item?.externalLink ? 'a' : NavLink\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n\r\n  const handleClick = () => {\r\n    if (setMenuOpen) {\r\n      setMenuOpen(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      onClick={handleClick}\r\n      className={classnames('nav-item', {\r\n        disabled: item?.disabled\r\n      })}\r\n    >\r\n      <LinkTag\r\n        className={classnames('d-flex align-items-center', {\r\n          'dropdown-item': isChild,\r\n          'nav-link': !isChild\r\n        })}\r\n        target={item?.newTab ? '_blank' : undefined}\r\n        /*eslint-disable */\r\n        {...(item?.externalLink === true\r\n          ? {\r\n            href: item?.navLink || '/'\r\n          }\r\n          : {\r\n            to: item?.navLink || '/',\r\n            className: ({ isActive }) => {\r\n              const commonClass = 'd-flex align-items-center'\r\n              if (isActive && !item?.disabled && item?.navLink !== '#') {\r\n                if (isChild) {\r\n                  return `${commonClass} dropdown-item active`\r\n                } else {\r\n                  return `${commonClass} nav-link active`\r\n                }\r\n              } else {\r\n                if (isChild) {\r\n                  return `${commonClass} dropdown-item`\r\n                } else {\r\n                  return `${commonClass} nav-link`\r\n                }\r\n              }\r\n            }\r\n          })}\r\n      /*eslint-enable */\r\n      >\r\n        {item?.icon}\r\n        <span>{t(item?.title)}</span>\r\n      </LinkTag>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuLink\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { usePopper } from 'react-popper'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// ** Utils\r\nimport { hasActiveChild } from '@layouts/utils'\r\n\r\n// ** Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Horizontal Menu Items Component\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\n\r\nconst applyHeight = {\r\n  enabled: true,\r\n  name: 'applyHeight',\r\n  phase: 'beforeWrite',\r\n  fn: data => {\r\n    const pageHeight = window.innerHeight,\r\n      popperEl = data.state.elements.popper,\r\n      ddTop = popperEl.getBoundingClientRect().top,\r\n      ddHeight = popperEl.clientHeight\r\n    let maxHeight, stylesObj\r\n    // ** Calculate and set height\r\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\r\n      maxHeight = pageHeight - ddTop - 25\r\n      stylesObj = {\r\n        maxHeight,\r\n        overflowY: 'auto'\r\n      }\r\n    }\r\n    const ddRef = popperEl.getBoundingClientRect()\r\n    // ** If there is not space left to open sub menu open it to the right\r\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\r\n      popperEl.closest('.dropdown').classList.add('openLeft')\r\n    }\r\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\r\n  }\r\n}\r\n\r\nconst HorizontalNavMenuGroup = props => {\r\n  // ** Props\r\n  const { item, submenu, isChild } = props\r\n\r\n  // ** State\r\n  const [menuOpen, setMenuOpen] = useState(false)\r\n  const [popperElement, setPopperElement] = useState(null)\r\n  const [referenceElement, setReferenceElement] = useState(null)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** Vars\r\n  const popperOffsetHorizontal = isRtl ? 16 : -16\r\n  const popperPlacement = isRtl ? 'bottom-end' : 'bottom-start'\r\n  const popperPlacementSubMenu = isRtl ? 'left-start' : 'right-start'\r\n\r\n  // ** Hooks\r\n  const { t } = useTranslation()\r\n  const currentURL = useLocation().pathname\r\n  const { update, styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: isChild ? popperPlacementSubMenu : popperPlacement,\r\n    modifiers: [\r\n      applyHeight,\r\n      {\r\n        enabled: true,\r\n        name: 'offset',\r\n        options: {\r\n          offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\r\n        }\r\n      }\r\n    ]\r\n  })\r\n\r\n  const handleMouseEnter = () => {\r\n    setMenuOpen(true)\r\n    update()\r\n  }\r\n\r\n  return (\r\n    <li\r\n      ref={setReferenceElement}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={() => setMenuOpen(false)}\r\n      className={classnames('dropdown', {\r\n        show: menuOpen,\r\n        'nav-item': submenu === false,\r\n        'dropdown-submenu': submenu === true,\r\n        'sidebar-group-active active': hasActiveChild(item, currentURL)\r\n      })}\r\n    >\r\n      <Link\r\n        to='/'\r\n        onClick={e => e.preventDefault()}\r\n        className={classnames('dropdown-toggle d-flex align-items-center', {\r\n          'dropdown-item': submenu === true,\r\n          'nav-link': submenu === false\r\n        })}\r\n      >\r\n        {item.icon}\r\n        <span>{t(item.title)}</span>\r\n      </Link>\r\n      <ul\r\n        ref={setPopperElement}\r\n        style={{ ...styles.popper }}\r\n        {...attributes.popper}\r\n        className={classnames('dropdown-menu', { 'first-level': submenu === false })}\r\n      >\r\n        <HorizontalNavMenuItems\r\n          isChild={true}\r\n          submenu={true}\r\n          parentItem={item}\r\n          menuOpen={menuOpen}\r\n          items={item.children}\r\n          setMenuOpen={setMenuOpen}\r\n        />\r\n      </ul>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default HorizontalNavMenuGroup\r\n","// ** Menu Components Imports\r\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\r\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\r\nimport {\r\n  resolveHorizontalNavMenuItemComponent as resolveNavItemComponent,\r\n  canViewMenuGroup,\r\n  canViewMenuItem\r\n} from '@layouts/utils'\r\n\r\nconst HorizontalNavMenuItems = props => {\r\n  // ** Components Object\r\n  const Components = {\r\n    HorizontalNavMenuGroup,\r\n    HorizontalNavMenuLink\r\n  }\r\n\r\n  // ** Render Nav Items\r\n  const RenderNavItems = props.items.map((item, index) => {\r\n    const TagName = Components[resolveNavItemComponent(item)]\r\n    if (item?.children) {\r\n      return <TagName item={item} index={index} key={item?.id} {...props} />\r\n    }\r\n    return <TagName item={item} index={index} key={item?.id} {...props} />\r\n    if (item?.children) {\r\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n    }\r\n    return canViewMenuItem(item) && <TagName item={item} index={index} key={item.id} {...props} />\r\n  })\r\n\r\n  return RenderNavItems\r\n}\r\n\r\nexport default HorizontalNavMenuItems\r\n","// ** Horizontal Menu Components\r\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport NavbarUser from '../../navbar/NavbarUser'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nconst HorizontalMenu = ({ menuData }) => {\r\n  const role = useSelector(state => state?.auth?.userData?.role)\r\n  const [menuDataArr, setMenuDataArr] = useState(menuData)\r\n\r\n  const { skin, setSkin } = useSkin()\r\n  useEffect(() => {\r\n    let tempArr = menuData\r\n    // console.log(role, \"role\")\r\n    if (tempArr && tempArr.length > 0) {\r\n      tempArr = tempArr.filter(el => el.roleArr && el.roleArr.length > 0 && role && role !== \"\" && el.roleArr.some(ele => ele === role)).map(el => {\r\n        if (el.children && el.children.length) {\r\n          el.children = el.children.filter(ele => ele.roleArr && ele.roleArr.length > 0 && role && role !== \"\" && ele.roleArr.some(elex => elex === role)).map(elm => {\r\n            if (elm.children && elm.children.length) {\r\n              elm.children = elm.children.filter(elex => elex.roleArr && elex.roleArr.length > 0 && role && role !== \"\" && elex.roleArr.some(elexm => elexm === role))\r\n            }\r\n            return { ...elm }\r\n          })\r\n        }\r\n        return { ...el }\r\n      })\r\n    }\r\n    setMenuDataArr([...tempArr])\r\n  }, [menuData, role])\r\n  return (\r\n    <div className='navbar-container main-menu-content'>\r\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\r\n        <HorizontalNavMenuItems submenu={false} items={menuDataArr} />\r\n        <NavbarUser skin={skin} setSkin={setSkin} />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HorizontalMenu\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, NavItem, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\n\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport NavbarComponent from './components/navbar'\r\nimport FooterComponent from './components/footer'\r\nimport MenuComponent from './components/menu/horizontal-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\r\n\r\nconst HorizontalLayout = props => {\r\n  // ** Props\r\n  const { navbar, menuData, footer, children, menu } = props\r\n\r\n  // ** Hooks\r\n  const { skin, setSkin } = useSkin()\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Vars\r\n  const contentWidth = layoutStore.contentWidth\r\n  const isHidden = layoutStore.menuHidden\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  // ** UseEffect Cleanup\r\n  const cleanup = () => {\r\n    setIsMounted(false)\r\n    setNavbarScrolled(false)\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    window.addEventListener('scroll', function () {\r\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\r\n        setNavbarScrolled(true)\r\n      }\r\n      if (window.pageYOffset < 65) {\r\n        setNavbarScrolled(false)\r\n      }\r\n    })\r\n    return () => cleanup()\r\n  }, [])\r\n\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: contentWidth === 'boxed' ? 'floating-nav' : 'floating-nav',\r\n    sticky: 'fixed-top'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  // console.log(navbar)\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\r\n        } menu-expanded`\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {/* <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\r\n          'navbar-scrolled': navbarScrolled\r\n        })}\r\n      >\r\n        {!navbar && (\r\n          <div className='navbar-header d-xl-block d-none'>\r\n            <ul className='nav navbar-nav'>\r\n              <NavItem>\r\n                <Link to='/' className='navbar-brand'>\r\n                  <span className='brand-logo'>\r\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\r\n                  </span>\r\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\r\n                </Link>\r\n              </NavItem>\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\r\n        </div>\r\n      </Navbar> */}\r\n      {!isHidden ? (\r\n        <div className='horizontal-menu-wrapper'>\r\n          <Navbar\r\n            tag='div'\r\n            expand='sm'\r\n            light={skin !== 'dark'}\r\n            dark={skin === 'dark' || bgColorCondition}\r\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\r\n              [navbarClasses[navbarType]]: navbarType !== 'static',\r\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\r\n            })}\r\n          >\r\n            <NavItem style={{ listStyle: 'none', width: 200 }}>\r\n              <Link to='/dashboard' >\r\n                <h4 className='mx-2'>{themeConfig.app.appName}</h4>\r\n              </Link>\r\n            </NavItem>\r\n            {menu ? menu({ menuData, routerProps, currentActiveItem }) : <MenuComponent menuData={menuData} />}\r\n          </Navbar>\r\n        </div>\r\n      ) : null}\r\n      <div className='wrepaer_bodddy' >\r\n\r\n        {children}\r\n        {themeConfig.layout.customizer === true ? (\r\n          <Customizer\r\n            skin={skin}\r\n            isRtl={isRtl}\r\n            layout={layout}\r\n            setSkin={setSkin}\r\n            setIsRtl={setIsRtl}\r\n            isHidden={isHidden}\r\n            setLayout={setLayout}\r\n            footerType={footerType}\r\n            navbarType={navbarType}\r\n            setIsHidden={setIsHidden}\r\n            themeConfig={themeConfig}\r\n            navbarColor={navbarColor}\r\n            contentWidth={contentWidth}\r\n            setFooterType={setFooterType}\r\n            setNavbarType={setNavbarType}\r\n            setLastLayout={setLastLayout}\r\n            setNavbarColor={setNavbarColor}\r\n            setContentWidth={setContentWidth}\r\n          />\r\n        ) : null}\r\n\r\n      </div>\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HorizontalLayout\r\n","// ** Icons Import\r\nimport { Command, Eye } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n    {\r\n        id: 'blogs1',\r\n        title: 'Blog Video',\r\n        icon: <Command />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n            {\r\n                id: 'Blogssas',\r\n                title: 'View Blog Video',\r\n                icon: <Eye />,\r\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n                navLink: '/blogs-video/view'\r\n            }\r\n            // {\r\n            //     id: 'ViewAdvertisementSubscriptions',\r\n            //     title: 'View advertisement Subscriptions',\r\n            //     icon: <Eye />,\r\n            //     roleArr: [\"ADMIN\"],\r\n            //     navLink: '/subscription/advertisement/view'\r\n            // }\r\n        ]\r\n    }\r\n]\r\n","// ** Icons Import\r\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n    {\r\n        id: 'blogs',\r\n        title: 'Blogs',\r\n        icon: <Command />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n            {\r\n                id: 'Blogs',\r\n                title: 'View Blogs',\r\n                icon: <Eye />,\r\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n                navLink: '/blogs/view'\r\n            }\r\n            // {\r\n            //     id: 'ViewAdvertisementSubscriptions',\r\n            //     title: 'View advertisement Subscriptions',\r\n            //     icon: <Eye />,\r\n            //     roleArr: [\"ADMIN\"],\r\n            //     navLink: '/subscription/advertisement/view'\r\n            // }\r\n        ]\r\n    }\r\n]\r\n","// ** Icons Import\r\nimport { Edit, Copy, Circle, Box, Package, AlertTriangle, RotateCw, Server, Grid } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'formsAndTable',\r\n    title: 'Forms & Tables',\r\n    roleArr: [],\r\n    icon: <Edit />,\r\n    children: [\r\n      {\r\n        id: 'formElements',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'Form Elements',\r\n        icon: <Copy />,\r\n        children: [\r\n          {\r\n            id: 'input',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Input',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/input'\r\n          },\r\n          {\r\n            id: 'inputGroup',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Input Groups',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/input-group'\r\n          },\r\n          {\r\n            id: 'inputMask',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Input Mask',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/input-mask'\r\n          },\r\n          {\r\n            id: 'textarea',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Textarea',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/textarea'\r\n          },\r\n          {\r\n            id: 'checkbox',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Checkbox',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/checkbox'\r\n          },\r\n          {\r\n            id: 'radio',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Radio',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/radio'\r\n          },\r\n          {\r\n            id: 'switch',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Switch',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/switch'\r\n          },\r\n          {\r\n            id: 'select',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Select',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/select'\r\n          },\r\n          {\r\n            id: 'numberInput',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Number Input',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/number-input'\r\n          },\r\n          {\r\n            id: 'fileUploader',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'File Uploader',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/file-uploader'\r\n          },\r\n          {\r\n            id: 'quillEditor',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Editor',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/editor'\r\n          },\r\n          {\r\n            id: 'date_&_timePicker',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Date & Time Picker',\r\n            icon: <Circle />,\r\n            navLink: '/forms/elements/pickers'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 'formLayouts',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'Form Layout',\r\n        icon: <Box />,\r\n        navLink: '/forms/layout/form-layout'\r\n      },\r\n      {\r\n        id: 'wizard',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'Form Wizard',\r\n        icon: <Package />,\r\n        navLink: '/forms/wizard'\r\n      },\r\n      {\r\n        id: 'formValidation',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'Form Validation',\r\n        icon: <AlertTriangle size={12} />,\r\n        navLink: '/forms/form-validation'\r\n      },\r\n      {\r\n        id: 'formRepeater',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'Form Repeater',\r\n        icon: <RotateCw />,\r\n        navLink: '/forms/form-repeater'\r\n      },\r\n      {\r\n        id: 'tablesReactstrap',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'Table',\r\n        icon: <Server />,\r\n        navLink: '/tables/reactstrap'\r\n      },\r\n      {\r\n        id: 'dataTable',\r\n        roleArr: [\"ADMIN\"],\r\n        title: 'DataTable',\r\n        icon: <Grid />,\r\n        children: [\r\n          {\r\n            id: 'dtBasic',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Basic',\r\n            icon: <Circle />,\r\n            navLink: '/datatables/basic'\r\n          },\r\n          {\r\n            id: 'dtAdvance',\r\n            roleArr: [\"ADMIN\"],\r\n            title: 'Advanced',\r\n            icon: <Circle />,\r\n            navLink: '/datatables/advance'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n","// ** Icons Import\r\nimport { ShoppingCart, Circle, List } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n  {\r\n    id: 'productGroup',\r\n    title: 'Products',\r\n    icon: <ShoppingCart />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\", \"APPROVERS\", ROLES_CONSTANT.SUBADMIN],\r\n    children: [\r\n      {\r\n        id: 'category',\r\n        title: 'Category',\r\n        icon: <List />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        navLink: '/products/category'\r\n      },\r\n      {\r\n        id: 'brand',\r\n        title: 'Brand',\r\n        icon: <List />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        navLink: '/products/brands'\r\n      },\r\n      {\r\n        id: 'product',\r\n        title: 'Product',\r\n        icon: <List />,\r\n        roleArr: [\"ADMIN\", \"DISTRIBUTOR\", \"APPROVERS\", ROLES_CONSTANT.SUBADMIN],\r\n        navLink: '/products/product-lists'\r\n      },\r\n      {\r\n        id: 'review',\r\n        title: 'Review',\r\n        icon: <List />,\r\n        roleArr: [\"ADMIN\", \"DISTRIBUTOR\", \"APPROVERS\", ROLES_CONSTANT.SUBADMIN],\r\n        navLink: '/products/product-reviews'\r\n      }\r\n    ]\r\n  }\r\n]\r\n","// ** Icons Import\r\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n    {\r\n        id: 'topup',\r\n        title: 'Topup',\r\n        icon: <Command />,\r\n        roleArr: [\"ADMIN\"],\r\n        children: [\r\n            {\r\n                id: 'Viewtopup',\r\n                title: 'View Topups',\r\n                icon: <Eye />,\r\n                roleArr: [\"ADMIN\"],\r\n                navLink: '/topup/view'\r\n            }\r\n            // {\r\n            //     id: 'ViewAdvertisementSubscriptions',\r\n            //     title: 'View advertisement Subscriptions',\r\n            //     icon: <Eye />,\r\n            //     roleArr: [\"ADMIN\"],\r\n            //     navLink: '/subscription/advertisement/view'\r\n            // }\r\n        ]\r\n    },\r\n    {\r\n        id: 'subscriptions',\r\n        title: 'Subscriptions',\r\n        icon: <Command />,\r\n        roleArr: [\"ADMIN\"],\r\n        children: [\r\n            {\r\n                id: 'ViewSubscriptions',\r\n                title: 'View Subscriptions',\r\n                icon: <Eye />,\r\n                roleArr: [\"ADMIN\"],\r\n                navLink: '/subscription/view'\r\n            }\r\n            // {\r\n            //     id: 'ViewAdvertisementSubscriptions',\r\n            //     title: 'View advertisement Subscriptions',\r\n            //     icon: <Eye />,\r\n            //     roleArr: [\"ADMIN\"],\r\n            //     navLink: '/subscription/advertisement/view'\r\n            // }\r\n        ]\r\n    }\r\n]\r\n","// ** Icons Import\r\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n    {\r\n        id: 'tickets',\r\n        title: 'Tickets',\r\n        icon: <Command />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n            {\r\n                id: 'view-tickets',\r\n                title: 'View Tickets',\r\n                icon: <Eye />,\r\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n                navLink: '/Tickets'\r\n            }\r\n        ]\r\n    }\r\n]\r\n","// ** Icons Import\r\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n    {\r\n        id: 'seos',\r\n        title: 'Seos',\r\n        icon: <Command />,\r\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n        children: [\r\n            {\r\n                id: 'Seos',\r\n                title: 'View Seos',\r\n                icon: <Eye />,\r\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n                navLink: '/seo/view'\r\n            }\r\n            // {\r\n            //     id: 'ViewAdvertisementSubscriptions',\r\n            //     title: 'View advertisement Subscriptions',\r\n            //     icon: <Eye />,\r\n            //     roleArr: [\"ADMIN\"],\r\n            //     navLink: '/subscription/advertisement/view'\r\n            // }\r\n        ]\r\n    }\r\n]\r\n","import { Command, Eye, Users } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\nimport BlogVideos from './BlogVideos'\r\nimport blogs from './Blogs'\r\nimport apps from './apps'\r\nimport dashboards from './dashboards'\r\nimport flashSales from './flashSales'\r\nimport formsAndTables from './forms-tables'\r\nimport product from './product'\r\nimport subscriptions from './subscriptions'\r\nimport tickets from './tickets'\r\nimport Seo from './Seo'\r\nimport quickenquiry from './quickenquiry'\r\n// ** Merge & Export\r\n// export default [...dashboards, ...apps, ...uiElements, ...formsAndTables, ...pages, ...charts, ...others]\r\nexport default [...dashboards, ...apps, ...product, ...formsAndTables, ...subscriptions, ...flashSales, ...tickets, ...blogs, ...BlogVideos, ...Seo,\r\n{\r\n    id: 'dashboardas',\r\n    title: 'News Letter',\r\n    icon: <Users />,\r\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n    // navLink: '/news-letters'\r\n    children: [\r\n        {\r\n            id: 'view-News-Letter-flash-sales',\r\n            title: 'View News Letter',\r\n            icon: <Eye />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/news-letters'\r\n        }\r\n    ]\r\n},\r\n{\r\n    id: 'flash-sales',\r\n    title: 'Reports',\r\n    icon: <Command />,\r\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n    children: [\r\n        {\r\n            id: 'view-flash-sales',\r\n            title: 'Flash sales',\r\n            icon: <Eye />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/flash-sales/view'\r\n        },\r\n        {\r\n            id: 'view-Promotions',\r\n            title: 'Promotions',\r\n            icon: <Eye />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/Promotions/view'\r\n        },\r\n        {\r\n            id: 'view-Subscriptions',\r\n            title: 'Subscriptions',\r\n            icon: <Eye />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/Subscription/view-user-count'\r\n        },\r\n        {\r\n            id: 'view-Leads',\r\n            title: 'Leads',\r\n            icon: <Eye />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/Leads/view'\r\n        },\r\n        {\r\n            id: 'view-Sales-report',\r\n            title: 'Sales report',\r\n            icon: <Eye />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/sales/report'\r\n        }\r\n    ]\r\n},\r\n{\r\n    id: 'dashboards',\r\n    title: 'User Requirements',\r\n    icon: <Users />,\r\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n    navLink: '/user-requirements'\r\n},\r\n{\r\n    id: 'dashboards1',\r\n    title: 'Quick Enquiery',\r\n    icon: <Users />,\r\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n    navLink: '/user-quickenqury'\r\n}\r\n]\r\n","// ** Icons Import\r\nimport { ShoppingCart, Circle, List, Command, Plus, Eye, Users } from 'react-feather'\r\nimport { ROLES_CONSTANT } from '../../utility/constant'\r\n\r\nexport default [\r\n    {\r\n        \r\n            id: 'dashboards',\r\n            title: 'Quick Enquiry',\r\n            icon: <Users />,\r\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\r\n            navLink: '/user-quickenqury'\r\n        \r\n    }\r\n]\r\n","// ** React Imports\r\nimport { Outlet } from 'react-router-dom'\r\n\r\n// ** Core Layout Import\r\n// !Do not remove the Layout import\r\nimport Layout from '@layouts/HorizontalLayout'\r\n\r\n// ** Menu Items Array\r\nimport navigation from '@src/navigation/horizontal'\r\n\r\nconst HorizontalLayout = props => {\r\n  // const [menuData, setMenuData] = useState([])\r\n\r\n  // ** For ServerSide navigation\r\n  // useEffect(() => {\r\n  //   axios.get(URL).then(response => setMenuData(response.data))\r\n  // }, [])\r\n\r\n  return (\r\n    <Layout menuData={navigation} {...props}>\r\n      <Outlet />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default HorizontalLayout\r\n","// ** React Imports\r\nimport { Fragment, useEffect, memo } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\r\n\r\n// ** ThemeConfig\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\n\r\nconst LayoutWrapper = props => {\r\n  // ** Props\r\n  const { children, routeMeta } = props\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state)\r\n\r\n  const navbarStore = store.navbar\r\n  const layoutStored = store.layout.layout\r\n  const contentWidth = store.layout.contentWidth\r\n  //** Vars\r\n  const appLayoutCondition =\r\n    (layoutStored.layout === 'horizontal' && !routeMeta) ||\r\n    (layoutStored.layout === 'horizontal' && routeMeta && !routeMeta.appLayout)\r\n  const Tag = appLayoutCondition ? 'div' : Fragment\r\n\r\n  // ** Clean Up Function\r\n  const cleanUp = () => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth && routeMeta.contentWidth === store.layout.contentWidth) {\r\n        dispatch(handleContentWidth(themeConfig.layout.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed && routeMeta.menuCollapsed === store.layout.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(!store.layout.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden && routeMeta.menuHidden === store.layout.menuHidden) {\r\n        dispatch(handleMenuHidden(!store.layout.menuHidden))\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    if (routeMeta) {\r\n      if (routeMeta.contentWidth) {\r\n        dispatch(handleContentWidth(routeMeta.contentWidth))\r\n      }\r\n      if (routeMeta.menuCollapsed) {\r\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\r\n      }\r\n      if (routeMeta.menuHidden) {\r\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\r\n      }\r\n    }\r\n    return () => cleanUp()\r\n  }, [routeMeta])\r\n\r\n  return (\r\n    <div\r\n      className={classnames('app-content content overflow-hidden', {\r\n        [routeMeta ? routeMeta.className : '']: routeMeta && routeMeta.className,\r\n        'show-overlay': navbarStore.query.length\r\n      })}\r\n    >\r\n      <div className='content-overlay'></div>\r\n      <div className='header-navbar-shadow' />\r\n      <div\r\n        className={classnames({\r\n          'content-wrapper': routeMeta && !routeMeta.appLayout,\r\n          'content-area-wrapper': routeMeta && routeMeta.appLayout,\r\n          'container-xxl p-0': contentWidth === 'boxed'\r\n        })}\r\n      >\r\n        <Tag {...(appLayoutCondition ? { className: 'content-body' } : {})}>{children}</Tag>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(LayoutWrapper)\r\n","// ** React Imports\r\nimport { Navigate } from 'react-router-dom'\r\nimport {Suspense } from 'react'\r\n\r\n// ** Context Imports\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\n\r\nconst PrivateRoute = ({ children, route }) => {\r\n  // ** Hooks & Vars\r\n  // const ability = useContext(AbilityContext)\r\n  const user = JSON.parse(localStorage.getItem('userData'))\r\n\r\n  if (route) {\r\n    // let action = null\r\n    // let resource = null\r\n    // let restrictedRoute = false\r\n\r\n    // if (route.meta) {\r\n    //   action = route.meta.action\r\n    //   resource = route.meta.resource\r\n    //   restrictedRoute = route.meta.restricted\r\n    // }\r\n    if (!user) {\r\n      return <Navigate to='/login' />\r\n    }\r\n    // if (user && restrictedRoute) {\r\n    //   return <Navigate to='/' />\r\n    // }\r\n    // if (user && restrictedRoute && user.role === 'client') {\r\n    //   return <Navigate to='/access-control' />\r\n    // }\r\n    // if (user && !ability.can(action || 'read', resource)) {\r\n    //   return <Navigate to='/misc/not-authorized' replace />\r\n    // }\r\n\r\n  }\r\n\r\n  return <Suspense fallback={null}>{children}</Suspense>\r\n}\r\n\r\nexport default PrivateRoute\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\nimport { getBrand, deleteBrand, getBrandById } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap'\r\nimport { generateFilePath } from '../../../../services/url.service'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    sortField: 'name',\r\n    width: \"25%\",\r\n    cell: row => row.name\r\n  },\r\n  {\r\n    name: 'Image',\r\n    sortable: true,\r\n    sortField: 'level',\r\n    width: \"25%\",\r\n    cell: row => <a href={generateFilePath(row.image)} target=\"_blank\"><img src={generateFilePath(row.image)} style={{ height: 50, width: 50 }} alt=\"\" srcset=\"\" /></a>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status === true ? 'active' : 'inactive']} pill>\r\n        {row.status === true ? 'Active' : 'Inactive'}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n\r\n        <Button color='primary' className='btn-sm ms-2 ' onClick={e => {\r\n          e.preventDefault()\r\n          store.dispatch(getBrandById(row._id))\r\n        }}>     <Edit size={14} /></Button>\r\n        <Button color='danger' className='ms-2 btn-sm'\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            store.dispatch(deleteBrand(row._id))\r\n          }}\r\n        >    <Trash2 size={14} /></Button>\r\n      </>\r\n\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getBrandById(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteBrand(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Import\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n    Button, Label, FormText, Form, Input, Modal,\r\n    CardBody,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Row,\r\n    Col\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { addBrand, getAllData, updateBrand } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\nimport { toastError } from '../../../../utility/toastutill'\r\nimport FileUpload from '../../../../utility/FileUpload'\r\n\r\nconst AddModal = ({ open, toggleSidebar }) => {\r\n    // ** States\r\n    const store = useSelector(state => state.brands)\r\n\r\n    const [name, setname] = useState(\"\")\r\n    const [image, setimage] = useState()\r\n    const [status, setstatus] = useState(true)\r\n    const [isUpdated, setisUpdated] = useState(false)\r\n    const [updateObj, setupdateObj] = useState({})\r\n    // ** Store Vars\r\n    const dispatch = useDispatch()\r\n    const checkIsValid = () => {\r\n\r\n        if (`${name}` === '') {\r\n            toastError(\"Please Fill name\")\r\n            return false\r\n        }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n    // ** Function to handle form submit\r\n    const onSubmit = () => {\r\n        if (checkIsValid()) {\r\n            toggleSidebar()\r\n            if (isUpdated === true) {\r\n                dispatch(\r\n                    updateBrand({\r\n                        name,\r\n                        status,\r\n                        image,\r\n                        id: updateObj._id\r\n                    })\r\n                )\r\n            } else {\r\n                dispatch(\r\n                    addBrand({\r\n                        name,\r\n                        status,\r\n                        image\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSidebarClosed = () => {\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.selectedBrand !== null) {\r\n            const brand = store.selectedBrand\r\n            setupdateObj(brand)\r\n            setisUpdated(true)\r\n            setname(brand.name)\r\n            setimage(brand.image)\r\n            setstatus(brand.status)\r\n        } else {\r\n            setupdateObj({})\r\n            setisUpdated(false)\r\n            setname(\"\")\r\n            setimage(\"\")\r\n        }\r\n    }, [store.selectedBrand])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={handleSidebarClosed}\r\n                toggle={toggleSidebar}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>{isUpdated ? \"Update\" : \"Add\"}  Brand</h2>\r\n                    </div>\r\n\r\n                    <Form className=\"row\">\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label' for='fullName'>\r\n                                Name <span className='text-danger'>*</span>\r\n                            </Label>\r\n                            <Input className='form-control' value={name} onChange={(e) => setname(e.target.value)} />\r\n                        </div>\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label'>\r\n                                Image\r\n                            </Label>\r\n                            <FileUpload onFileChange={(val) => setimage(val)} />\r\n                        </div>\r\n\r\n                        <div className=' mb-1 col-md-12'>\r\n                            <Label className='form-label' for='phone'>\r\n                                Status <span className='text-danger'>*</span>\r\n                            </Label>\r\n                            <div className='demo-inline-spacing'>\r\n                                <div className='form-check'>\r\n                                    <Input type='radio' id='ex1-active' name='ex1' checked={status === true} onChange={() => setstatus(true)} />\r\n                                    <Label className='form-check-label' for='ex1-active'>\r\n                                        Active\r\n                                    </Label>\r\n                                </div>\r\n                                <div className='form-check'>\r\n                                    <Input type='radio' name='ex1' id='ex1-inactive' checked={status === false} onChange={() => setstatus(false)} />\r\n                                    <Label className='form-check-label' for='ex1-inactive'>\r\n                                        InActive\r\n                                    </Label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className='mb-1 col-md-12'>\r\n                            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n        // <Sidebar\r\n        //   size='lg'\r\n        //   open={open}\r\n        //   title='New User'\r\n        //   headerClassName='mb-1'\r\n        //   contentClassName='pt-0'\r\n        //   toggleSidebar={toggleSidebar}\r\n        //   onClosed={handleSidebarClosed}\r\n        // >\r\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='fullName'>\r\n        //         Full Name <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='fullName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='lastName'>\r\n        //         lastName <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='lastName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='userEmail'>\r\n        //         Email <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='email'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input\r\n        //             type='email'\r\n        //             id='userEmail'\r\n        //             placeholder='john.doe@example.com'\r\n        //             invalid={errors.email && true}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        //     </div>\r\n\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='phone'>\r\n        //         phone <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='phone'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='company'>\r\n        //         Company <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='company'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='country'>\r\n        //         Country <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='country'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\r\n        //           <Select\r\n        //             isClearable={false}\r\n        //             classNamePrefix='select'\r\n        //             options={countryOptions}\r\n        //             theme={selectThemeColors}\r\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='user-role'>\r\n        //         User Role\r\n        //       </Label>\r\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n        //         <option value='subscriber'>Subscriber</option>\r\n        //         <option value='editor'>Editor</option>\r\n        //         <option value='maintainer'>Maintainer</option>\r\n        //         <option value='author'>Author</option>\r\n        //         <option value='admin'>Admin</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\r\n        //       <Label className='form-label' for='select-plan'>\r\n        //         Select Plan\r\n        //       </Label>\r\n        //       <Input type='select' id='select-plan' name='select-plan'>\r\n        //         <option value='basic'>Basic</option>\r\n        //         <option value='enterprise'>Enterprise</option>\r\n        //         <option value='company'>Company</option>\r\n        //         <option value='team'>Team</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <Button type='submit' className='me-1' color='primary'>\r\n        //       Submit\r\n        //     </Button>\r\n        //     <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n        //       Cancel\r\n        //     </Button>\r\n        //   </Form>\r\n        // </Sidebar>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllBrand, getBrand } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\nimport AddModal from './AddModal'\r\n\r\n// ** Table Header\r\n\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const brands = useSelector(state => state.brands)\r\n  const brand = useSelector(state => state.brands.brand)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getBrand({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage,\r\n      role: currentRole.value,\r\n      status: currentStatus.value\r\n    }))\r\n  }, [])\r\n  useEffect(() => {\r\n    // dispatch(\r\n    //   getBrand({\r\n    //     sort,\r\n    //     sortColumn,\r\n    //     q: searchTerm,\r\n    //     page: currentPage,\r\n    //     perPage: rowsPerPage,\r\n    //     role: currentRole.value,\r\n    //     status: currentStatus.value\r\n    //     // currentPlan: currentPlan.value\r\n    //   })\r\n    // )\r\n    // ** Set Roles\r\n\r\n  }, [dispatch, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  // const roleOptions = [\r\n  //   { value: '', label: 'Select Role' },\r\n  //   { value: 'admin', label: 'Admin' },\r\n  //   { value: 'author', label: 'Author' },\r\n  //   { value: 'editor', label: 'Editor' },\r\n  //   { value: 'maintainer', label: 'Maintainer' },\r\n  //   { value: 'subscriber', label: 'Subscriber' }\r\n  // ]\r\n\r\n  // const planOptions = [\r\n  //   { value: '', label: 'Select Plan' },\r\n  //   { value: 'basic', label: 'Basic' },\r\n  //   { value: 'company', label: 'Company' },\r\n  //   { value: 'enterprise', label: 'Enterprise' },\r\n  //   { value: 'team', label: 'Team' }\r\n  // ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'active', label: 'Active', number: true },\r\n    { value: 'inactive', label: 'Inactive', number: false }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getBrand({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n    dispatch(\r\n      getBrand({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getBrand({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(brands.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    console.log(brands, \"brandsdsdds\")\r\n    if (brands.brands.length > 0) {\r\n      return brands.brands\r\n    } else if (!brands || (brands.brands.length === 0 && isFiltered)) {\r\n      return []\r\n    } else {\r\n      return brands.brands.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getBrand({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (brands.selectedBrand !== null) {\r\n      toggleSidebar()\r\n    }\r\n\r\n  }, [brands.selectedBrand])\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Label for='role-select'>Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={rolesOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                onChange={data => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getBrand({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            {/* <Col className='my-md-0 my-1' md='4'>\r\n              <Label for='plan-select'>Plan</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={planOptions}\r\n                value={currentPlan}\r\n                onChange={data => {\r\n                  setCurrentPlan(data)\r\n                  dispatch(\r\n                    getBrand({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: data.value,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col> \r\n            <Col md='4'>\r\n              <Label for='status-select'>Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getBrand({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card> */}\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='invoice-list-table-header w-100 px-4 ms-50 mt-2'>\r\n          <Row>\r\n            <Col xl='6' className='d-flex align-items-center p-0'>\r\n              <div className='d-flex align-items-center w-100'>\r\n                <label htmlFor='rows-per-page'>Show</label>\r\n                <Input\r\n                  className='mx-50'\r\n                  type='select'\r\n                  id='rows-per-page'\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: '5rem' }}\r\n                >\r\n                  <option value='1'>1</option>\r\n                  <option value='10'>10</option>\r\n                  <option value='25'>25</option>\r\n                  <option value='50'>50</option>\r\n                </Input>\r\n                <label htmlFor='rows-per-page'>Entries</label>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              xl='6'\r\n              className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n            >\r\n              <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                <label className='mb-0' htmlFor='search-invoice'>\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id='search-invoice'\r\n                  className='ms-50 w-100'\r\n                  type='text'\r\n                  value={searchTerm}\r\n                  onChange={e => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className='d-flex align-items-center table-header-actions'>\r\n                {/* <UncontrolledDropdown className='me-1'>\r\n                  <DropdownToggle color='secondary' caret outline>\r\n                    <Share className='font-small-4 me-50' />\r\n                    <span className='align-middle'>Export</span>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    <DropdownItem className='w-100'>\r\n                      <Printer className='font-small-4 me-50' />\r\n                      <span className='align-middle'>Print</span>\r\n                    </DropdownItem>\r\n                    <DropdownItem className='w-100' onClick={() => downloadCSV(brands.brand)}>\r\n                      <FileText className='font-small-4 me-50' />\r\n                      <span className='align-middle'>CSV</span>\r\n                    </DropdownItem>\r\n                    <DropdownItem className='w-100'>\r\n                      <Grid className='font-small-4 me-50' />\r\n                      <span className='align-middle'>Excel</span>\r\n                    </DropdownItem>\r\n                    <DropdownItem className='w-100'>\r\n                      <File className='font-small-4 me-50' />\r\n                      <span className='align-middle'>PDF</span>\r\n                    </DropdownItem>\r\n                    <DropdownItem className='w-100'>\r\n                      <Copy className='font-small-4 me-50' />\r\n                      <span className='align-middle'>Copy</span>\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown> */}\r\n\r\n                <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                  Add New\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n          // subHeaderComponent={\r\n          //   <CustomHeader\r\n          //     brands={brands}\r\n          //     searchTerm={searchTerm}\r\n          //     rowsPerPage={rowsPerPage}\r\n          //     handleFilter={handleFilter}\r\n          //     handlePerPage={handlePerPage}\r\n          //     toggleSidebar={toggleSidebar}\r\n          //   />\r\n          // }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst BrandList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BrandList\r\n","\r\n\r\n// ** Reactstrap Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { ArrowUpLeft } from 'react-feather'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\r\nimport _ from 'lodash'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\nimport { getAllSubscriptionbyUserId, sendMailById } from '../../../../services/UserSubscription.service'\r\nimport DataTable from 'react-data-table-component'\r\nimport ReactPaginate from 'react-paginate'\r\nimport moment from 'moment'\r\nimport { getReviewForProduct, deleteReviewById} from '../../../../services/product.service'\r\nexport default function Review() {\r\n    const { id } = useParams()\r\n    const [userSubscriptionsArr, setUserSubscriptionsArr] = useState([])\r\n    const [selectedUser, setSelectedUser] = useState({})\r\n    // ** States\r\n    const [sort, setSort] = useState('desc')\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [sortColumn, setSortColumn] = useState('name')\r\n    const [rowsPerPage, setRowsPerPage] = useState(10)\r\n    const [sidebarOpen, setSidebarOpen] = useState(false)\r\n    const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n    // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n    const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n    const [rolesOptions, setrolesOptions] = useState([])\r\n    const [editModal, setEditModal] = useState(false)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [startDate, setstartDate] = useState()\r\n    const [endDate, setEndDate] = useState()\r\n    const handleGetReviews = async (query) => {\r\n        try {\r\n            const { data: res } = await getReviewForProduct(query)\r\n            if (res.data) {\r\n                console.log(res, \"userSUb\")\r\n                setUserSubscriptionsArr(res.data)\r\n                setTotalPages(res.count)\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n\r\n    const deleteProdcutId = async (id) => {\r\n        try {\r\n            const { data: res } = await deleteReviewById(id)\r\n            if (res.message) {\r\n                toastSuccess(res.message)\r\n            handleGetReviews(`q=${searchTerm}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\r\n\r\n            }\r\n        } catch (err) {\r\n            toastError(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            handleGetReviews(`q=${searchTerm}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\r\n    }, [])\r\n\r\n    const columns = [\r\n      {\r\n        name: \"Name\",\r\n        width: \"250px\",\r\n        sortable: false,\r\n        selector: (row) => row.name\r\n      },    \r\n\r\n      {\r\n        name: \"Message\",\r\n        minWidth: \"500px\",\r\n        sortable: false,\r\n        selector: (row) => row.message\r\n      },\r\n\r\n      {\r\n        name: \"Rating\",\r\n        width: \"70px\",\r\n        sortable: false,\r\n        selector: (row) => row.rating\r\n      },\r\n\r\n      {\r\n        name: \"Date On\",\r\n        width: \"150px\",\r\n        sortable: false,\r\n        selector: (row) => moment(row.createdAt).format(\"DD-MM-YYYY\")\r\n      },\r\n\r\n      {\r\n        name: \"Action\",\r\n        width: \"150px\",\r\n        sortable: false,\r\n        cell: (row) => (\r\n          <>\r\n            <Button\r\n              type=\"button\"\r\n              color=\"success\"\r\n              className=\"btn-sm btn-success\"\r\n              onClick={() => deleteProdcutId(row?._id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </>\r\n        )\r\n      }\r\n      // {\r\n      //   name: 'Billing',\r\n      //   minWidth: '230px',\r\n      //   sortable: true,\r\n      //   sortField: 'billing',\r\n      //   selector: row => row.billing,\r\n      //   cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n      // },\r\n    ]\r\n\r\n     // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    handleGetReviews(`q=${val}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\r\n\r\n    }\r\n    \r\n      const handleFilterByDate = () => {\r\n        handleGetReviews(\r\n          `startDate=${startDate}&endDate=${endDate}&rowsPerPage=${rowsPerPage}&currentPage=1`\r\n        )\r\n      }\r\n\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected + 1)\r\n        console.log(page.selected, \"totalCount\")\r\n        handleGetReviews(`q=${searchTerm}&rowsPerPage=${rowsPerPage}&currentPage=${page.selected + 1}`)\r\n        // dispatch(\r\n        //   getAllUsersWithSubsciptionFn({\r\n        //     sort,\r\n        //     sortColumn,\r\n        //     q: searchTerm,\r\n        //     perPage: rowsPerPage,\r\n        //     page: page.selected + 1,\r\n        //     role: currentRole.value,\r\n        //     status: currentStatus.value\r\n        //   })\r\n        // )\r\n        // setCurrentPage(page.selected + 1)\r\n    }\r\n\r\n    const handlePerPage = e => {\r\n        const value = parseInt(e.currentTarget.value)\r\n        setCurrentPage(1)\r\n        handleGetReviews(`rowsPerPage=${value}&currentPage=${1}`)\r\n        setRowsPerPage(value)\r\n    }\r\n\r\n\r\n    const CustomPagination = () => {\r\n        const count = Number(Math.ceil(totalPages / rowsPerPage))\r\n\r\n        return (\r\n            <ReactPaginate\r\n                previousLabel={''}\r\n                nextLabel={''}\r\n                pageCount={count || 1}\r\n                activeClassName='active'\r\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n                onPageChange={page => handlePagination(page)}\r\n                pageClassName={'page-item'}\r\n                nextLinkClassName={'page-link'}\r\n                nextClassName={'page-item next'}\r\n                previousClassName={'page-item prev'}\r\n                previousLinkClassName={'page-link'}\r\n                pageLinkClassName={'page-link'}\r\n                containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <Col xl=\"9\" className=\"d-flex align-items-center p-0\">\r\n            <div className=\"d-flex align-items-center w-100\">\r\n              <label htmlFor=\"rows-per-page\">Show</label>\r\n              <Input\r\n                className=\"mx-50\"\r\n                type=\"select\"\r\n                id=\"rows-per-page\"\r\n                value={rowsPerPage}\r\n                onChange={handlePerPage}\r\n                style={{ width: \"5rem\" }}\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n                <option value=\"100\">100</option>\r\n                <option value=\"500\">500</option>\r\n              </Input>\r\n              <label htmlFor=\"rows-per-page\">Entries</label>\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">\r\n              <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n                Filter\r\n              </label>\r\n              <Input\r\n                id=\"search-invoice\"\r\n                className=\"ms-50 w-100\"\r\n                type=\"date\"\r\n                value={startDate}\r\n                onChange={(e) => setstartDate(e.target.value)}\r\n              />\r\n              <Input\r\n                id=\"search-invoice\"\r\n                className=\"ms-50 w-100\"\r\n                type=\"date\"\r\n                value={endDate}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n              />\r\n            </div>\r\n            <Button color=\"primary\" onClick={() => handleFilterByDate()}>\r\n              Filter\r\n            </Button>\r\n          </Col>\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Row>\r\n            <div>\r\n              <DataTable\r\n                noHeader\r\n                pagination\r\n                columns={columns}\r\n                paginationServer\r\n                paginationComponent={CustomPagination}\r\n                // sortIcon={<ChevronDown />}\r\n                data={userSubscriptionsArr}\r\n              />\r\n            </div>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n    )\r\n}","// ** Reactstrap Imports\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Card, CardHeader, CardTitle, CardBody, Label, Input, FormText, Row, Col, Button } from 'reactstrap'\r\nimport { ArrowUpLeft, Minus, Plus, Trash } from 'react-feather'\r\nimport { useEffect, useState } from 'react'\r\nimport { toastError } from '../../../utility/toastutill'\r\nimport { getNestedCategoriesApi } from \"../../../services/category.service\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllBrand, getBrand } from '../brand/store'\r\nimport FileUpload from '../../../utility/FileUpload'\r\nimport { addProduct, getProduct, getProductById, updateProduct } from '../store'\r\nimport { generateFilePath } from '../../../services/url.service'\r\n\r\nconst AddProduct = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const { id } = useParams()\r\n\r\n  const brandArr = useSelector(state => state.brands.brand)\r\n  const productRedux = useSelector(state => state.products.selectedProduct)\r\n\r\n  const [categoryArr, setcategoryArr] = useState([])\r\n  const [brand, setbrand] = useState(\"\")\r\n  const [category, setcategory] = useState(\"\")\r\n  const [name, setname] = useState(\"\")\r\n  const [thickness, setthickness] = useState(\"\")\r\n  const [application, setapplication] = useState(\"\")\r\n  const [grade, setgrade] = useState(\"\")\r\n  const [color, setcolor] = useState(\"\")\r\n  const [size, setsize] = useState(\"\")\r\n  const [wood, setwood] = useState(\"\")\r\n  const [glue, setglue] = useState(\"\")\r\n  const [price, setprice] = useState(\"\")\r\n  const [sellingprice, setsellingprice] = useState(\"\")\r\n  const [warranty, setwarranty] = useState(\"\")\r\n  const [shortDescription, setshortDescription] = useState(\"\")\r\n  const [longDescription, setLongDescription] = useState()\r\n  const [image, setimage] = useState()\r\n  const [status, setstatus] = useState(false)\r\n  const [isUpdated, setisUpdated] = useState(false)\r\n  const [updateObj, setupdateObj] = useState({})\r\n  const [imageArr, setimageArr] = useState([\r\n    {\r\n      image: \"\"\r\n    }\r\n  ])\r\n\r\n  const [mainCategoryArr, setmainCategoryArr] = useState([])\r\n\r\n  const handleFileSet = (value, index) => {\r\n    let tempArr = _.cloneDeep(imageArr)\r\n    tempArr = tempArr.map((el, i) => {\r\n      if (index === i) {\r\n        el.image = value\r\n      }\r\n      return el\r\n    })\r\n    setimageArr([...tempArr])\r\n  }\r\n  const handleNestedCategory = async () => {\r\n    try {\r\n      const { data: res } = await getNestedCategoriesApi()\r\n      if (res.success && res.data.length) {\r\n        setcategoryArr(res.data)\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (productRedux !== null) {\r\n      setname(productRedux?.name)\r\n      setprice(productRedux?.price)\r\n      setsellingprice(productRedux?.sellingprice)\r\n      setcategory(productRedux?.categoryId)\r\n      setbrand(productRedux?.brand)\r\n      setthickness(productRedux?.specification?.thickness)\r\n      setapplication(productRedux?.specification?.application)\r\n      setgrade(productRedux?.specification?.grade)\r\n      setcolor(productRedux?.specification?.color)\r\n      setwood(productRedux?.specification?.wood)\r\n      setglue(productRedux?.specification?.glue)\r\n      setwarranty(productRedux?.specification?.warranty)\r\n      setshortDescription(productRedux?.shortDescription)\r\n      setLongDescription(productRedux?.longDescription)\r\n      setimage(productRedux?.mainImage)\r\n      setstatus(productRedux?.status)\r\n      setisUpdated(true)\r\n      setupdateObj(productRedux)\r\n      setimageArr(productRedux?.imageArr)\r\n      setmainCategoryArr(productRedux?.categoryArr)\r\n      setsize(productRedux?.specification?.size)\r\n\r\n    }\r\n  }, [productRedux])\r\n\r\n  const handleCtegoryEvent = (id) => {\r\n    const tempCategoryArr = []\r\n    categoryArr.map(el => {\r\n      if (el._id === id) {\r\n        tempCategoryArr.push({ categoryId: el._id })\r\n      } else {\r\n        if (el.subCategoryArr && el.subCategoryArr.length > 0) {\r\n          el.subCategoryArr.map(elx => {\r\n            if (elx._id === id) {\r\n              tempCategoryArr.push({ categoryId: el._id })\r\n              tempCategoryArr.push({ categoryId: elx._id })\r\n            }\r\n          }\r\n          )\r\n        }\r\n      }\r\n    }\r\n    )\r\n\r\n    setcategory(id)\r\n    setmainCategoryArr([...tempCategoryArr])\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getProductById(id))\r\n    }\r\n  }, [id])\r\n  const onSubmit = () => {\r\n\r\n    if (`${name}` === '') {\r\n      toastError('Please Fill Name')\r\n      return 0\r\n    }\r\n    if (`${category}` === '') {\r\n      toastError('Please Fill Category')\r\n      return 0\r\n    }\r\n\r\n    if (`${application}` === '') {\r\n      toastError('Please Fill Application')\r\n      return 0\r\n    }\r\n\r\n    if (`${color}` === '') {\r\n      toastError('Please Fill Color')\r\n      return 0\r\n    }\r\n\r\n    if (`${shortDescription}` === '') {\r\n      toastError('Please Fill shortDescription')\r\n      return 0\r\n    }\r\n\r\n    if (`${image}` === '') {\r\n      toastError('Please add main imgae')\r\n      return 0\r\n    }\r\n    if (imageArr && imageArr.length > 1) {\r\n      if (imageArr.some(el => !el.image)) {\r\n        toastError('canot upload blank image')\r\n        return 0\r\n      }\r\n    }\r\n\r\n\r\n    if (isUpdated === true) {\r\n      dispatch(\r\n        updateProduct({\r\n          name,\r\n          categoryId: category,\r\n          brand,\r\n          price,\r\n          sellingprice,\r\n          specification: {\r\n            thickness,\r\n            application,\r\n            grade,\r\n            color,\r\n            wood,\r\n            glue,\r\n            warranty,\r\n            size\r\n          },\r\n          shortDescription,\r\n          longDescription,\r\n          status,\r\n          image,\r\n          imageArr,\r\n          categoryArr: mainCategoryArr,\r\n          id: updateObj._id\r\n        })\r\n      )\r\n    } else {\r\n      dispatch(\r\n        addProduct({\r\n          name,\r\n          categoryId: category,\r\n          brand,\r\n          price,\r\n          sellingprice,\r\n          specification: {\r\n            thickness,\r\n            application,\r\n            grade,\r\n            color,\r\n            wood,\r\n            glue,\r\n            warranty,\r\n            size\r\n          },\r\n          imageArr,\r\n          categoryArr: mainCategoryArr,\r\n          shortDescription,\r\n          longDescription,\r\n          status,\r\n          image\r\n        })\r\n      )\r\n    }\r\n  }\r\n  const subcategoryRender = (cateArr, dash) => {\r\n    dash += '- '\r\n    console.log(cateArr.length)\r\n    return (\r\n      cateArr && cateArr.length > 0 && cateArr.map((cat) => {\r\n        return (\r\n          <>\r\n            <option key={cat._id} value={cat._id}>{dash}{cat.name}</option>\r\n            {subcategoryRender(cat.subCategoryArr, dash)}\r\n          </>\r\n\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleImageAdd = () => {\r\n    if (imageArr && imageArr.length < 3) {\r\n      setimageArr([...imageArr, { image: \"\" }])\r\n    }\r\n  }\r\n  const handleImagesRemove = (removeIndex) => {\r\n    if (imageArr.length > 1) {\r\n      setimageArr([\r\n        ...imageArr.filter(\r\n          (el, index) => index !== removeIndex\r\n        )\r\n      ])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleNestedCategory()\r\n    dispatch(getBrand('status=true'))\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Link to=\"/products/product-lists\" className=' btn btn-sm btn-warning' color='primary'>\r\n          <ArrowUpLeft />Back\r\n        </Link>\r\n        <CardTitle tag='h4'>Add Product</CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-1' xl='4' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Name\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Product Name' />\r\n          </Col>\r\n          <Col className='mb-1' xl='4' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Select  Category {categoryArr.length}\r\n            </Label>\r\n            <select className='form-control' value={category} onChange={(e) => handleCtegoryEvent(e.target.value)}>\r\n              <option value=\"\">Please Select Category</option>\r\n              {categoryArr && categoryArr.length > 0 && subcategoryRender(categoryArr, '-')}\r\n            </select>\r\n          </Col>\r\n          <Col className='mb-1' xl='4' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Select  Brand\r\n            </Label>\r\n            <select className='form-control' value={brand} onChange={(e) => setbrand(e.target.value)}>\r\n              <option value=\"\">Please Select Brand</option>\r\n              {brandArr && brandArr.length > 0 && brandArr.map(el => <option value={el._id}>{el.name}</option>)}\r\n            </select>\r\n          </Col>\r\n          <Col className='mb-1' xl='4' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Price\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={price} onChange={(e) => setprice(e.target.value)} placeholder='Enter Product Price' />\r\n          </Col>\r\n          <Col className='mb-1' xl='4' md='6' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Selling Price\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={sellingprice} onChange={(e) => setsellingprice(e.target.value)} placeholder='Enter Product Selling Price' />\r\n          </Col>\r\n          <h4>Specification</h4>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Thickness\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={thickness} onChange={(e) => setthickness(e.target.value)} placeholder='Enter Product Thickness' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Usage/Application\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={application} onChange={(e) => setapplication(e.target.value)} placeholder='Enter Product Usage/Application' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Size\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={size} onChange={(e) => setsize(e.target.value)} placeholder='Enter Product Size' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Grade\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={grade} onChange={(e) => setgrade(e.target.value)} placeholder='Enter Product Grade' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Color\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={color} onChange={(e) => setcolor(e.target.value)} placeholder='Enter Product Color' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Wood Type\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={wood} onChange={(e) => setwood(e.target.value)} placeholder='Enter Product Wood Type' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Glue Used\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={glue} onChange={(e) => setglue(e.target.value)} placeholder='Enter Product Glue Used' />\r\n          </Col>\r\n          <Col className='mb-1' xl='3' md='4' sm='6'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Warranty\r\n            </Label>\r\n            <Input type='text' id='basicInput' value={warranty} onChange={(e) => setwarranty(e.target.value)} placeholder='Enter Product Warranty' />\r\n          </Col>\r\n          <h4>Description</h4>\r\n          <Col className='mb-1' xl='6' md='12' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Short Description\r\n            </Label>\r\n            <Input type='textarea' name='text' value={shortDescription} onChange={(e) => setshortDescription(e.target.value)} id='exampleText' rows='3' placeholder='Enter Your Short Ddescription' />\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='12' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Long Description\r\n            </Label>\r\n            <Input type='textarea' name='text' value={longDescription} onChange={(e) => setLongDescription(e.target.value)} id='exampleText' rows='3' placeholder='Enter Your Short Ddescription' />\r\n\r\n          </Col>\r\n\r\n          <Col className='mb-1' xl='4' md='12' sm='12'>\r\n            <Label className='form-label' for='basicInput'>\r\n              Main Image (width:100px and height:100px)\r\n            </Label>\r\n            <FileUpload onFileChange={(val) => setimage(val)} />\r\n          </Col>\r\n          <Col className='mb-1' xl='2' md='12' sm='12'>\r\n            {\r\n              image && image.includes('data:image') ? (<img src={image} width=\"100px\" height=\"80px\" />) : (<img src={generateFilePath(image)} width=\"100px\" height=\"80px\" />)\r\n            }\r\n          </Col>\r\n          <Col className='mb-1' xl='6' md='12' sm='12'>\r\n\r\n            <Label className='form-label' for='phone'>\r\n              Status <span className='text-danger'>*</span>\r\n            </Label>\r\n            <div className='demo-inline-spacing'>\r\n              <div className='form-check'>\r\n                <Input type='radio' id='ex1-active' name='ex1' checked={status === true} onChange={() => setstatus(true)} />\r\n                <Label className='form-check-label' for='ex1-active'>\r\n                  Active\r\n                </Label>\r\n              </div>\r\n              <div className='form-check'>\r\n                <Input type='radio' name='ex1' id='ex1-inactive' checked={status === false} onChange={() => setstatus(false)} />\r\n                <Label className='form-check-label' for='ex1-inactive'>\r\n                  InActive\r\n                </Label>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Label className='form-label my-2' for='basicInput'>\r\n              Muptiple Image (width:121px and height:100px) <button type='button' className='btn btn-sm btn-success' onClick={() => { handleImageAdd() }}><Plus /> Add</button>\r\n            </Label>\r\n            <Row>\r\n              {\r\n                imageArr && imageArr.map((img, indez) => (\r\n                  <Col xl='4' md='4' sm='4'>\r\n                    <Row>\r\n                      {\r\n                        img.image && (\r\n                          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n                            {\r\n                              img.image.includes('data:image') ? (<img src={img.image} width=\"100px\" height=\"80px\" />) : (<img src={generateFilePath(img.image)} width=\"100px\" height=\"80px\" />)\r\n                            }\r\n                          </Col>\r\n                        )\r\n                      }\r\n                      <Col className='mb-1' xl='8' md='8' sm='8'>\r\n                        <FileUpload onFileChange={(val) => handleFileSet(val, indez)} />\r\n                      </Col>\r\n\r\n                      <Col className='mb-1' xl='3' md='3' sm='3'>\r\n                        <button type='button' className='btn btn-sm btn-danger' onClick={() => handleImagesRemove(indez)}><Trash /> </button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n\r\n                ))\r\n              }\r\n            </Row>\r\n          </Col>\r\n          <Col className='mb-1' xl='12' md='12' sm='12'>\r\n            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default AddProduct\r\n","import { lazy } from 'react'\r\nimport BrandList from '../../views/products/brand/list'\r\nimport Review from '../../views/products/review/list/Review'\r\nimport AddProduct from '../../views/products/list/AddProduct'\r\nconst CategoryList = lazy(() => import('../../views/products/category/list'))\r\nconst ProductList = lazy(() => import('../../views/products/list'))\r\n\r\n\r\nconst ProductRoutes = [\r\n  {\r\n    path: '/products/category',\r\n    element: <CategoryList />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  },\r\n  {\r\n    path: '/products/product-lists',\r\n    element: <ProductList />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  },\r\n  {\r\n    path: '/products/brands',\r\n    element: <BrandList />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  },\r\n  {\r\n    path: 'products/add-products',\r\n    element: <AddProduct />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  },\r\n  {\r\n    path: 'products/edit-product/:id',\r\n    element: <AddProduct />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  },\r\n  {\r\n    path: '/products/product-reviews',\r\n    element: <Review />,\r\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\r\n  }\r\n\r\n]\r\n\r\nexport default ProductRoutes\r\n","import { lazy } from 'react'\r\nconst CountryList = lazy(() => import('../../views/location/Country/list'))\r\nconst StateList = lazy(() => import('../../views/location/State/list'))\r\nconst CityList = lazy(() => import('../../views/location/City/list'))\r\n\r\n                       \r\nconst LocationRoutes = [\r\n  {\r\n    path: 'apps/location/country',\r\n    element: <CountryList />,\r\n    roleArr:[\"ADMIN\"]\r\n  },\r\n  {\r\n    path: 'apps/location/state',\r\n    element: <StateList />,\r\n    roleArr:[\"ADMIN\"]\r\n  },\r\n  {\r\n    path: 'apps/location/city',\r\n    element: <CityList />,\r\n    roleArr:[\"ADMIN\"]\r\n  }\r\n\r\n]\r\n\r\nexport default LocationRoutes\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Routes Imports\r\nimport AppRoutes from './Apps'\r\nimport FormRoutes from './Forms'\r\nimport PagesRoutes from './Pages'\r\nimport TablesRoutes from './Tables'\r\nimport ChartsRoutes from './Charts'\r\nimport DashboardRoutes from './Dashboards'\r\nimport UiElementRoutes from './UiElements'\r\nimport ExtensionsRoutes from './Extensions'\r\nimport PageLayoutsRoutes from './PageLayouts'\r\nimport AuthenticationRoutes from './Authentication'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\r\n\r\n// ** Route Components\r\nimport PublicRoute from '@components/routes/PublicRoute'\r\nimport PrivateRoute from '@components/routes/PrivateRoute'\r\n\r\n// ** Utils\r\nimport { isObjEmpty } from '@utils'\r\nimport ProductRoutes from './Product'\r\nimport LocationRoutes from './location.js'\r\n\r\nconst getLayout = {\r\n  blank: <BlankLayout />,\r\n  vertical: <VerticalLayout />,\r\n  horizontal: <HorizontalLayout />\r\n}\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/apps/user/list'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  ...AuthenticationRoutes,\r\n  ...DashboardRoutes,\r\n  ...AppRoutes,\r\n  ...FormRoutes,\r\n  ...ProductRoutes,\r\n  ...LocationRoutes,\r\n  ...PagesRoutes,\r\n  ...UiElementRoutes,\r\n  ...ExtensionsRoutes,\r\n  ...PageLayoutsRoutes,\r\n  ...TablesRoutes,\r\n  ...ChartsRoutes\r\n]\r\n\r\n// const getRouteMeta = route => {\r\n//   if (isObjEmpty(route.element.props)) {\r\n//     if (route.meta) {\r\n//       return { routeMeta: route.meta }\r\n//     } else {\r\n//       return {}\r\n//     }\r\n//   }\r\n// }\r\n\r\n// ** Return Filtered Array of Routes & Paths\r\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\r\n  const LayoutRoutes = []\r\n  // console.log(layout, defaultLayout, Routes, \"asd\")\r\n  if (Routes) {\r\n    Routes.filter(route => {\r\n      const isBlank = false\r\n      // ** Checks if Route layout or Default layout matches current layout\r\n      // if (\r\n      //   (route.meta && route.meta.layout && route.meta.layout === layout) ||\r\n      //   ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\r\n      // ) {\r\n      const RouteTag = PrivateRoute\r\n\r\n      // // ** Check for public or private route\r\n      // if (route.meta) {\r\n      //   route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\r\n      //   RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\r\n      // }\r\n      // if (route.element) {\r\n      //   const Wrapper =\r\n      //     // eslint-disable-next-line multiline-ternary\r\n      //     isObjEmpty(route.element.props) && isBlank === false\r\n      //       ? // eslint-disable-next-line multiline-ternary\r\n      //         LayoutWrapper\r\n      //       : Fragment\r\n\r\n      //   route.element = (\r\n      //     <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\r\n      //       <RouteTag route={route}>{route.element}</RouteTag>\r\n      //     </Wrapper>\r\n      //   )\r\n      // }\r\n\r\n      // Push route to LayoutRoutes\r\n      if (route.element) {\r\n        const Wrapper =\r\n          // eslint-disable-next-line multiline-ternary\r\n          isObjEmpty(route.element.props) && isBlank === false\r\n            ? // eslint-disable-next-line multiline-ternary\r\n            LayoutWrapper\r\n            : Fragment\r\n\r\n        route.element = (\r\n          <Wrapper >\r\n            <RouteTag route={route}>{route.element}</RouteTag>\r\n          </Wrapper>\r\n        )\r\n      }\r\n      LayoutRoutes.push(route)\r\n      // }\r\n      return LayoutRoutes\r\n    })\r\n  }\r\n  return LayoutRoutes\r\n}\r\n\r\nconst getRoutes = layout => {\r\n  const defaultLayout = layout || 'vertical'\r\n  const layouts = ['vertical', 'horizontal', 'blank']\r\n  // const layouts = ['blank']\r\n  // console.log(layout, \"layout\")\r\n  const AllRoutes = []\r\n\r\n  layouts.forEach(layoutItem => {\r\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\r\n\r\n    AllRoutes.push({\r\n      path: '/',\r\n      element: getLayout[defaultLayout],\r\n      children: LayoutRoutes\r\n    })\r\n  })\r\n  // console.log(AllRoutes, \"AllRoutes\")\r\n  return AllRoutes\r\n}\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\r\n","// ** Router imports\r\nimport { lazy } from 'react'\r\n\r\n// ** Router imports\r\nimport { useRoutes, Navigate } from 'react-router-dom'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\n\r\n// ** Hooks Imports\r\nimport { useLayout } from '@hooks/useLayout'\r\n\r\n// ** Utils\r\nimport { getUserData, getHomeRouteForLoggedInUser } from '../utility/Utils'\r\n\r\n// ** GetRoutes\r\nimport { getRoutes } from './routes'\r\n\r\n// ** Components\r\nconst Error = lazy(() => import('../views/pages/misc/Error'))\r\nconst Login = lazy(() => import('../views/pages/authentication/Login'))\r\nconst NotAuthorized = lazy(() => import('../views/pages/misc/NotAuthorized'))\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const { layout } = useLayout()\r\n\r\n  const allRoutes = getRoutes(layout)\r\n  const getHomeRoute = () => {\r\n    const user = getUserData()\r\n    if (user) {\r\n      return getHomeRouteForLoggedInUser(user.role)\r\n    } else {\r\n      return '/login'\r\n    }\r\n  }\r\n\r\n  const routes = useRoutes([\r\n    {\r\n      path: '/',\r\n      index: true,\r\n      element: <Navigate replace to={getHomeRoute()} />\r\n    },\r\n    {\r\n      path: '/login',\r\n      element: <BlankLayout />,\r\n      children: [{ path: '/login', element: <Login /> }]\r\n    },\r\n    {\r\n      path: '/auth/not-auth',\r\n      element: <BlankLayout />,\r\n      children: [{ path: '/auth/not-auth', element: <NotAuthorized /> }]\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <BlankLayout />,\r\n      children: [{ path: '*', element: <Error /> }]\r\n    },\r\n    ...allRoutes\r\n  ])\r\n\r\n  return routes\r\n}\r\n\r\nexport default Router\r\n","import React, { Suspense } from 'react'\r\nimport 'react-quill/dist/quill.snow.css'\r\n// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Router />\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// ** React Imports\r\nimport { forwardRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst Avatar = forwardRef((props, ref) => {\r\n  // ** Props\r\n  const {\r\n    img,\r\n    size,\r\n    icon,\r\n    color,\r\n    status,\r\n    badgeUp,\r\n    content,\r\n    tag: Tag,\r\n    initials,\r\n    imgWidth,\r\n    className,\r\n    badgeText,\r\n    imgHeight,\r\n    badgeColor,\r\n    imgClassName,\r\n    contentStyles,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** Function to extract initials from content\r\n  const getInitials = str => {\r\n    const results = []\r\n    const wordArray = str.split(' ')\r\n    wordArray.forEach(e => {\r\n      results.push(e[0])\r\n    })\r\n    return results.join('')\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar', {\r\n        [className]: className,\r\n        [`bg-${color}`]: color,\r\n        [`avatar-${size}`]: size\r\n      })}\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {img === false || img === undefined ? (\r\n        <span\r\n          className={classnames('avatar-content', {\r\n            'position-relative': badgeUp\r\n          })}\r\n          style={contentStyles}\r\n        >\r\n          {initials ? getInitials(content) : content}\r\n\r\n          {icon ? icon : null}\r\n          {badgeUp ? (\r\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\r\n              {badgeText ? badgeText : '0'}\r\n            </Badge>\r\n          ) : null}\r\n        </span>\r\n      ) : (\r\n        <img\r\n          className={classnames({\r\n            [imgClassName]: imgClassName\r\n          })}\r\n          src={img}\r\n          alt='avatarImg'\r\n          height={imgHeight && !size ? imgHeight : 32}\r\n          width={imgWidth && !size ? imgWidth : 32}\r\n        />\r\n      )}\r\n      {status ? (\r\n        <span\r\n          className={classnames({\r\n            [`avatar-status-${status}`]: status,\r\n            [`avatar-status-${size}`]: size\r\n          })}\r\n        ></span>\r\n      ) : null}\r\n    </Tag>\r\n  )\r\n})\r\n\r\nexport default Avatar\r\n\r\n// ** PropTypes\r\nAvatar.propTypes = {\r\n  icon: Proptypes.node,\r\n  src: Proptypes.string,\r\n  badgeUp: Proptypes.bool,\r\n  content: Proptypes.string,\r\n  badgeText: Proptypes.string,\r\n  className: Proptypes.string,\r\n  imgClassName: Proptypes.string,\r\n  contentStyles: Proptypes.object,\r\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\r\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\r\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\r\n  badgeColor: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  color: Proptypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'info',\r\n    'warning',\r\n    'dark',\r\n    'light-primary',\r\n    'light-secondary',\r\n    'light-success',\r\n    'light-danger',\r\n    'light-info',\r\n    'light-warning',\r\n    'light-dark'\r\n  ]),\r\n  initials(props) {\r\n    if (props['initials'] && props['content'] === undefined) {\r\n      return new Error('content prop is required with initials prop.')\r\n    }\r\n    if (props['initials'] && typeof props['content'] !== 'string') {\r\n      return new Error('content prop must be a string.')\r\n    }\r\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\r\n      return new Error('initials must be a boolean!')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nAvatar.defaultProps = {\r\n  tag: 'div'\r\n}\r\n","import { DefaultRoute } from '../router/routes'\r\n\r\n// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  return DefaultRoute\r\n  // if (userRole === 'client') return '/access-control'\r\n  // return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","export const ROLES_CONSTANT = {\r\n  ADMIN: \"ADMIN\",\r\n  SUBADMIN: \"SUBADMIN\",\r\n  // USER: \"USER\",\r\n  MANUFACTURER: \"MANUFACTURER/IMPORTER\",\r\n  DISTRIBUTOR: \"DISTRIBUTOR\",\r\n  DEALER: \"DEALER\",\r\n  RETAILER:\"RETAILER\",\r\n  CONTRACTOR:\"CONTRACTOR\",\r\n  FIELDUSER: \"FIELDUSER\",\r\n  APPROVERS: \"APPROVERS\",\r\n  SALES: \"SALES\"\r\n}\r\n\r\nexport const APPROVED_STATUS = {\r\n  APPROVED: \"APPROVED\",\r\n  PENDING: \"PENDING\",\r\n  REJECTED: \"REJECTED\"\r\n}","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store Imports\r\nimport { handleSkin } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useSkin = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setSkin = type => {\r\n    dispatch(handleSkin(type))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (store.skin !== 'light') {\r\n      element.classList.add(classNames[store.skin])\r\n    }\r\n  }, [store.skin])\r\n\r\n  return { skin: store.skin, setSkin }\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Button } from \"reactstrap\"\r\n\r\nfunction FileUpload({ onFileChange, acceptImage, returnOriginal, acceptOnly }) {\r\n  const [file, setFile] = useState(\"\")\r\n\r\n  const getBase64 = (file, cb) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = function () {\r\n      cb(reader.result)\r\n    }\r\n    reader.onerror = function (error) {\r\n      // console.log('Error: ', error)\r\n    }\r\n  }\r\n  const handleFileSelection = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (event.target.files[0]) {\r\n      getBase64(event.target.files[0], (result) => {\r\n        setFile(event.target.files[0])\r\n        if (returnOriginal) {\r\n          onFileChange(event.target.files[0])\r\n        } else {\r\n          onFileChange(result)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"position-relative\">\r\n      {\r\n        acceptImage === true ? <input type=\"file\" onChange={(event) => handleFileSelection(event)} className=\"form-control\" accept=\"image/png, image/gif, image/jpeg\" /> : <input type=\"file\" onChange={(event) => handleFileSelection(event)} accept={acceptOnly ? acceptOnly : \"\"} className=\"form-control\" />\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    dispatch(handleRTL(value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","// ** React Imports\r\nimport ReactDOM from 'react-dom'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState, useRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { AlertCircle } from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Hooks Imports\r\nimport { useOnClickOutside } from '@hooks/useOnClickOutside'\r\n\r\n// ** Styles Imports\r\nimport '@styles/base/bootstrap-extended/_include.scss'\r\nimport './autocomplete.scss'\r\n\r\nconst Autocomplete = props => {\r\n  // ** Refs\r\n  const container = useRef(null)\r\n  const inputElRef = useRef(null)\r\n  const suggestionsListRef = useRef(null)\r\n\r\n  // ** States\r\n  const [focused, setFocused] = useState(false)\r\n  const [activeSuggestion, setActiveSuggestion] = useState(0)\r\n  const [showSuggestions, setShowSuggestions] = useState(false)\r\n  const [userInput, setUserInput] = useState(props.value ? props.value : '')\r\n\r\n  // ** Vars\r\n  const navigate = useNavigate()\r\n  let filteredData = []\r\n\r\n  // ** Suggestion Item Click Event\r\n  const onSuggestionItemClick = (url, e) => {\r\n    setActiveSuggestion(0)\r\n    setShowSuggestions(false)\r\n    setUserInput(filteredData[activeSuggestion][props.filterKey])\r\n    if (url !== undefined && url !== null) {\r\n      navigate(url)\r\n    }\r\n\r\n    if (props.onSuggestionClick) {\r\n      props.onSuggestionClick(url, e)\r\n    }\r\n  }\r\n\r\n  // ** Suggestion Hover Event\r\n  const onSuggestionItemHover = index => {\r\n    setActiveSuggestion(index)\r\n  }\r\n\r\n  // ** Input On Change Event\r\n  const onChange = e => {\r\n    const userInput = e.currentTarget.value\r\n    setActiveSuggestion(0)\r\n    setShowSuggestions(true)\r\n    setUserInput(userInput)\r\n    if (e.target.value < 1) {\r\n      setShowSuggestions(false)\r\n    }\r\n  }\r\n\r\n  // ** Input Click Event\r\n  const onInputClick = e => {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  // ** Input's Keydown Event\r\n  const onKeyDown = e => {\r\n    const filterKey = props.filterKey\r\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current)\r\n\r\n    // ** User pressed the up arrow\r\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\r\n      setActiveSuggestion(activeSuggestion - 1)\r\n\r\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\r\n        suggestionList.scrollTop = 0\r\n      }\r\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\r\n      // ** User pressed the down arrow\r\n      setActiveSuggestion(activeSuggestion + 1)\r\n\r\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\r\n        suggestionList.scrollTop = suggestionList.scrollHeight\r\n      }\r\n    } else if (e.keyCode === 27) {\r\n      // ** User Pressed ESC\r\n      setShowSuggestions(false)\r\n      setUserInput('')\r\n    } else if (e.keyCode === 13 && showSuggestions) {\r\n      // ** User Pressed ENTER\r\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e)\r\n      setUserInput(filteredData[activeSuggestion][filterKey])\r\n      setShowSuggestions(false)\r\n    } else {\r\n      return\r\n    }\r\n\r\n    // ** Custom Keydown Event\r\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\r\n      props.onKeyDown(e, userInput)\r\n    }\r\n  }\r\n\r\n  // ** Function To Render Grouped Suggestions\r\n  const renderGroupedSuggestion = arr => {\r\n    const { filterKey, customRender } = props\r\n\r\n    const renderSuggestion = (item, i) => {\r\n      if (!customRender) {\r\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null\r\n        return (\r\n          <li\r\n            className={classnames('suggestion-item', {\r\n              active: filteredData.indexOf(item) === activeSuggestion\r\n            })}\r\n            key={item[filterKey]}\r\n            onClick={e => onSuggestionItemClick(suggestionURL, e)}\r\n            onMouseEnter={() => {\r\n              onSuggestionItemHover(filteredData.indexOf(item))\r\n            }}\r\n          >\r\n            {item[filterKey]}\r\n          </li>\r\n        )\r\n      } else if (customRender) {\r\n        return customRender(\r\n          item,\r\n          i,\r\n          filteredData,\r\n          activeSuggestion,\r\n          onSuggestionItemClick,\r\n          onSuggestionItemHover,\r\n          userInput\r\n        )\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n\r\n    return arr.map((item, i) => {\r\n      return renderSuggestion(item, i)\r\n    })\r\n  }\r\n\r\n  // ** Function To Render Ungrouped Suggestions\r\n  const renderUngroupedSuggestions = () => {\r\n    const { filterKey, suggestions, customRender, suggestionLimit } = props\r\n\r\n    filteredData = []\r\n    const sortSingleData = suggestions\r\n      .filter(i => {\r\n        const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\r\n          includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\r\n        if (startCondition) {\r\n          return startCondition\r\n        } else if (!startCondition && includeCondition) {\r\n          return includeCondition\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n      .slice(0, suggestionLimit)\r\n    filteredData.push(...sortSingleData)\r\n    if (sortSingleData.length) {\r\n      return sortSingleData.map((suggestion, index) => {\r\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null\r\n        if (!customRender) {\r\n          return (\r\n            <li\r\n              className={classnames('suggestion-item', {\r\n                active: filteredData.indexOf(suggestion) === activeSuggestion\r\n              })}\r\n              key={suggestion[filterKey]}\r\n              onClick={e => onSuggestionItemClick(suggestionURL, e)}\r\n              onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\r\n            >\r\n              {suggestion[filterKey]}\r\n            </li>\r\n          )\r\n        } else if (customRender) {\r\n          return customRender(\r\n            suggestion,\r\n            index,\r\n            filteredData,\r\n            activeSuggestion,\r\n            onSuggestionItemClick,\r\n            onSuggestionItemHover,\r\n            userInput\r\n          )\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n    } else {\r\n      return (\r\n        <li className='suggestion-item no-result'>\r\n          <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Function To Render Suggestions\r\n  const renderSuggestions = () => {\r\n    const { filterKey, grouped, filterHeaderKey, suggestions } = props\r\n\r\n    // ** Checks if suggestions are grouped or not.\r\n    if (grouped === undefined || grouped === null || !grouped) {\r\n      return renderUngroupedSuggestions()\r\n    } else {\r\n      filteredData = []\r\n      return suggestions.map(suggestion => {\r\n        const sortData = suggestion.data\r\n          .filter(i => {\r\n            const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\r\n              includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\r\n            if (startCondition) {\r\n              return startCondition\r\n            } else if (!startCondition && includeCondition) {\r\n              return includeCondition\r\n            } else {\r\n              return null\r\n            }\r\n          })\r\n          .slice(0, suggestion.searchLimit)\r\n\r\n        filteredData.push(...sortData)\r\n        return (\r\n          <Fragment key={suggestion[filterHeaderKey]}>\r\n            <li className='suggestion-item suggestion-title-wrapper'>\r\n              <h6 className='suggestion-title'>{suggestion[filterHeaderKey]}</h6>\r\n            </li>\r\n            {sortData.length ? (\r\n              renderGroupedSuggestion(sortData)\r\n            ) : (\r\n              <li className='suggestion-item no-result'>\r\n                <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\r\n              </li>\r\n            )}\r\n          </Fragment>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    if (props.defaultSuggestions && focused) {\r\n      setShowSuggestions(true)\r\n    }\r\n  }, [focused, props.defaultSuggestions])\r\n\r\n  //** ComponentDidUpdate\r\n  useEffect(() => {\r\n    const textInput = ReactDOM.findDOMNode(inputElRef.current)\r\n\r\n    // ** For searchbar focus\r\n    if (textInput !== null && props.autoFocus) {\r\n      inputElRef.current.focus()\r\n    }\r\n\r\n    // ** If user has passed default suggestions & focus then show default suggestions\r\n    if (props.defaultSuggestions && focused) {\r\n      setShowSuggestions(true)\r\n    }\r\n\r\n    // ** Function to run on user passed Clear Input\r\n    if (props.clearInput) {\r\n      props.clearInput(userInput, setUserInput)\r\n    }\r\n\r\n    // ** Function on Suggestions Shown\r\n    if (props.onSuggestionsShown && showSuggestions) {\r\n      props.onSuggestionsShown(userInput)\r\n    }\r\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props])\r\n\r\n  // ** On External Click Close The Search & Call Passed Function\r\n  useOnClickOutside(container, () => {\r\n    setShowSuggestions(false)\r\n    if (props.externalClick) {\r\n      props.externalClick()\r\n    }\r\n  })\r\n\r\n  let suggestionsListComponent\r\n\r\n  if (showSuggestions) {\r\n    suggestionsListComponent = (\r\n      <PerfectScrollbar\r\n        className={classnames('suggestions-list', {\r\n          [props.wrapperClass]: props.wrapperClass\r\n        })}\r\n        ref={suggestionsListRef}\r\n        component='ul'\r\n        options={{ wheelPropagation: false }}\r\n      >\r\n        {renderSuggestions()}\r\n      </PerfectScrollbar>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='autocomplete-container' ref={container}>\r\n      <input\r\n        type='text'\r\n        onChange={e => {\r\n          onChange(e)\r\n          if (props.onChange) {\r\n            props.onChange(e)\r\n          }\r\n        }}\r\n        onKeyDown={e => onKeyDown(e)}\r\n        value={userInput}\r\n        className={`autocomplete-search ${props.className ? props.className : ''}`}\r\n        placeholder={props.placeholder}\r\n        onClick={onInputClick}\r\n        ref={inputElRef}\r\n        onFocus={() => setFocused(true)}\r\n        autoFocus={props.autoFocus}\r\n        onBlur={e => {\r\n          if (props.onBlur) props.onBlur(e)\r\n          setFocused(false)\r\n        }}\r\n      />\r\n      {suggestionsListComponent}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Autocomplete\r\n\r\n// ** PropTypes\r\nAutocomplete.propTypes = {\r\n  grouped: PropTypes.bool,\r\n  autoFocus: PropTypes.bool,\r\n  onKeyDown: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  clearInput: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  externalClick: PropTypes.func,\r\n  defaultValue: PropTypes.string,\r\n  wrapperClass: PropTypes.string,\r\n  filterHeaderKey: PropTypes.string,\r\n  suggestionLimit: PropTypes.number,\r\n  onSuggestionsShown: PropTypes.func,\r\n  onSuggestionItemClick: PropTypes.func,\r\n  filterKey: PropTypes.string.isRequired,\r\n  suggestions: PropTypes.array.isRequired\r\n}\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\nexport const useOnClickOutside = (ref, handler) => {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // ** Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return\r\n        }\r\n\r\n        // ** Call passed function on click outside\r\n        handler(event)\r\n      }\r\n\r\n      document.addEventListener('mousedown', listener)\r\n      document.addEventListener('touchstart', listener)\r\n\r\n      return () => {\r\n        document.removeEventListener('mousedown', listener)\r\n        document.removeEventListener('touchstart', listener)\r\n      }\r\n    },\r\n    // ** Add ref and handler to effect dependencies\r\n    // ** It's worth noting that because passed in handler is a new ...\r\n    // ** ... function on every render that will cause this effect ...\r\n    // ** ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ** ... but to optimize you can wrap handler in useCallback before ...\r\n    // ** ... passing it into this hook.\r\n    [ref, handler]\r\n  )\r\n}\r\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store Imports\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { handleLayout, handleLastLayout } from '@store/layout'\r\n\r\nexport const useLayout = () => {\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.layout)\r\n\r\n  const setLayout = value => {\r\n    dispatch(handleLayout(value))\r\n  }\r\n\r\n  const setLastLayout = value => {\r\n    dispatch(handleLastLayout(value))\r\n  }\r\n\r\n  if (window) {\r\n    const breakpoint = 1200\r\n\r\n    useEffect(() => {\r\n      if (window.innerWidth < breakpoint) {\r\n        setLayout('vertical')\r\n      }\r\n\r\n      window.addEventListener('resize', () => {\r\n        if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\r\n          setLayout('vertical')\r\n        }\r\n        if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\r\n          setLayout(store.lastLayout)\r\n        }\r\n      })\r\n    }, [store.layout])\r\n  }\r\n\r\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\r\n}\r\n","// ** React Imports\r\nimport { Outlet } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Hooks\r\nimport { useSkin } from '@hooks/useSkin'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\nconst BlankLayout = () => {\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('blank-page', {\r\n        'dark-layout': skin === 'dark'\r\n      })}\r\n    >\r\n      <div className='app-content content'>\r\n        <div className='content-wrapper'>\r\n          <div className='content-body'>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlankLayout\r\n"],"sourceRoot":""}