{"version":3,"sources":["views/components/avatar/AvatarSizes.js","views/components/avatar/AvatarIcons.js","views/components/avatar/AvatarGroup.js","views/components/avatar/AvatarColors.js","views/components/avatar/AvatarStatus.js","views/components/avatar/AvatarInitials.js","views/components/avatar/AvatarLightColors.js","views/components/avatar/AvatarGroupTooltip.js","views/components/avatar/AvatarSourceCode.js","views/components/avatar/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js","@core/components/avatar-group/index.js","assets/images/portrait/small/avatar-s-20.jpg"],"names":["AvatarSizes","className","img","avatarImg","size","AvatarIcons","color","icon","data","require","default","AvatarGroupComponent","AvatarColors","content","AvatarStatus","status","AvatarInitials","initials","AvatarLightColors","title","avatarSizes","avatarInitials","avatarColors","avatarLightColors","avatarIcons","avatarStatus","avatarGroup","avatarGroupTooltip","Avatar","useEffect","Prism","highlightAll","xl","lg","code","sm","AvatarGroup","AvatarGroupTooltip","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","CardBody","onClick","Tag","i","ItemTag","placement","target","split","join","meta","id","undefined"],"mappings":"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","file":"static/js/72.e1a81060.chunk.js","sourcesContent":["// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Avatar Image\r\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\r\n\r\nconst AvatarSizes = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar img={avatarImg} size='sm' />\r\n      <Avatar img={avatarImg} />\r\n      <Avatar img={avatarImg} size='lg' />\r\n      <Avatar img={avatarImg} size='xl' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarSizes\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Icons Imports\r\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\r\n\r\nconst AvatarIcons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='primary' icon={<Calendar size={14} />} />\r\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\r\n      <Avatar color='success' icon={<Inbox size={14} />} />\r\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\r\n      <Avatar color='light-warning' icon={<Award size={14} />} />\r\n      <Avatar color='light-info' icon={<Star size={14} />} />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarIcons\r\n","// ** Custom Components\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\nconst data = [\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\r\n  }\r\n]\r\n\r\nconst AvatarGroupComponent = () => {\r\n  return <AvatarGroup data={data} />\r\n}\r\n\r\nexport default AvatarGroupComponent\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarColors = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='primary' content='PI' />\r\n      <Avatar color='secondary' content='PI' />\r\n      <Avatar color='success' content='PI' />\r\n      <Avatar color='danger' content='PI' />\r\n      <Avatar color='warning' content='PI' />\r\n      <Avatar color='info' content='PI' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarColors\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Icons Imports\r\nimport { GitHub } from 'react-feather'\r\n\r\n// ** Avatar Image\r\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\r\n\r\nconst AvatarStatus = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar img={avatarImg} status='offline' />\r\n      <Avatar color='info' content='LD' status='busy' />\r\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\r\n      <Avatar color='light-success' content='AB' status='online' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarStatus\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarInitials = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='light-primary' content='Peter Ingraham' size='sm' initials />\r\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\r\n      <Avatar color='light-success' content='Peter Ingraham' size='lg' initials />\r\n      <Avatar color='light-danger' content='Peter Ingraham' size='xl' initials />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarInitials\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarLightColors = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='light-primary' content='PI' />\r\n      <Avatar color='light-secondary' content='PI' />\r\n      <Avatar color='light-success' content='PI' />\r\n      <Avatar color='light-danger' content='PI' />\r\n      <Avatar color='light-warning' content='PI' />\r\n      <Avatar color='light-info' content='PI' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarLightColors\r\n","// ** Custom Components\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Vinnie Mostowy',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\r\n  },\r\n  {\r\n    title: 'Elicia Rieske',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\r\n  },\r\n  {\r\n    title: 'Julee Rossignol',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\r\n  },\r\n  {\r\n    title: 'Darcey Nooner',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\r\n  },\r\n  {\r\n    title: 'Jenny Looper',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\r\n  }\r\n]\r\n\r\nconst AvatarGroupComponent = () => {\r\n  return <AvatarGroup data={data} />\r\n}\r\n\r\nexport default AvatarGroupComponent\r\n","export const avatarSizes = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport Avatar from '@components/avatar'\r\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\r\n\r\nconst AvatarSizes = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar img={avatarImg} size='sm' />\r\n      <Avatar img={avatarImg} />\r\n      <Avatar img={avatarImg} size='lg' />\r\n      <Avatar img={avatarImg} size='xl' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarSizes\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarInitials = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarInitials = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='light-primary' content='Peter Ingraham' initials />\r\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\r\n      <Avatar color='light-success' content='Peter Ingraham' initials />\r\n      <Avatar color='light-danger' content='Peter Ingraham' initials />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarInitials\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarColors = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarColors = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='primary' content='PI' />\r\n      <Avatar color='secondary' content='PI' />\r\n      <Avatar color='success' content='PI' />\r\n      <Avatar color='danger' content='PI' />\r\n      <Avatar color='warning' content='PI' />\r\n      <Avatar color='info' content='PI' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarLightColors = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarLightColors = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='light-primary' content='PI' />\r\n      <Avatar color='light-secondary' content='PI' />\r\n      <Avatar color='light-success' content='PI' />\r\n      <Avatar color='light-danger' content='PI' />\r\n      <Avatar color='light-warning' content='PI' />\r\n      <Avatar color='light-info' content='PI' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarLightColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarIcons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport Avatar from '@components/avatar'\r\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\r\n\r\nconst AvatarIcons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar color='primary' icon={<Calendar size={14} />} />\r\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\r\n      <Avatar color='success' icon={<Inbox size={14} />} />\r\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\r\n      <Avatar color='light-warning' icon={<Award size={14} />} />\r\n      <Avatar color='light-info' icon={<Star size={14} />} />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarStatus = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport Avatar from '@components/avatar'\r\nimport { GitHub } from 'react-feather'\r\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\r\n\r\nconst AvatarStatus = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Avatar img={avatarImg} status='offline' />\r\n      <Avatar color='info' content='LD' status='busy' />\r\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\r\n      <Avatar color='light-success' content='AB' status='online' />\r\n    </div>\r\n  )\r\n}\r\nexport default AvatarStatus\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarGroup = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\nconst data = [\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\r\n  },\r\n  {\r\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\r\n  }\r\n]\r\n\r\nconst AvatarGroupComponent = () => {\r\n  return <AvatarGroup data={data} />\r\n}\r\n\r\nexport default AvatarGroupComponent\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const avatarGroupTooltip = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\nconst data = [\r\n  {\r\n    title: 'Vinnie Mostowy',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\r\n  },\r\n  {\r\n    title: 'Elicia Rieske',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\r\n  },\r\n  {\r\n    title: 'Julee Rossignol',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\r\n  },\r\n  {\r\n    title: 'Darcey Nooner',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\r\n  },\r\n  {\r\n    title: 'Jenny Looper',\r\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\r\n  }\r\n]\r\n\r\nconst AvatarGroupComponent = () => {\r\n  return <AvatarGroup data={data} />\r\n}\r\n\r\nexport default AvatarGroupComponent\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport AvatarSizes from './AvatarSizes'\r\nimport AvatarIcons from './AvatarIcons'\r\nimport AvatarGroup from './AvatarGroup'\r\nimport AvatarColors from './AvatarColors'\r\nimport AvatarStatus from './AvatarStatus'\r\nimport AvatarInitials from './AvatarInitials'\r\nimport AvatarLightColors from './AvatarLightColors'\r\nimport AvatarGroupTooltip from './AvatarGroupTooltip'\r\n\r\n// ** Source Code\r\nimport {\r\n  avatarIcons,\r\n  avatarSizes,\r\n  avatarGroup,\r\n  avatarColors,\r\n  avatarStatus,\r\n  avatarInitials,\r\n  avatarLightColors,\r\n  avatarGroupTooltip\r\n} from './AvatarSourceCode'\r\n\r\nconst Avatar = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs title='Avatar' data={[{ title: 'Components' }, { title: 'Avatar' }]} />\r\n      <Row className='match-height'>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Sizes' code={avatarSizes}>\r\n            <CardText className='mb-0'>\r\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size. You can also use <code>height</code> &{' '}\r\n              <code>width</code> prop for a custom size\r\n            </CardText>\r\n            <AvatarSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Intials' code={avatarInitials}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>initials</code> to show only Initials of content.\r\n            </CardText>\r\n            <AvatarInitials />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Colors' code={avatarColors}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color=[primary | success | danger | info | warning | dark]</code> to change background\r\n              color of your avatar.\r\n            </CardText>\r\n            <AvatarColors />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Light Colors' code={avatarLightColors}>\r\n            <CardText className='mb-0'>\r\n              Use prop{' '}\r\n              <code>\r\n                color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\r\n              </code>{' '}\r\n              to change background color of your avatar.\r\n            </CardText>\r\n            <AvatarLightColors />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' lg='12'>\r\n          <Card title='Icons' code={avatarIcons}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>icon</code> to create avatar with icon.\r\n            </CardText>\r\n            <AvatarIcons />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' sm='12'>\r\n          <Card title='Status' code={avatarStatus}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>status=[online | offline | away | busy]</code> to create avatar with status.\r\n            </CardText>\r\n            <AvatarStatus />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' sm='12'>\r\n          <Card title='Avatar Group' code={avatarGroup}>\r\n            <CardText>\r\n              Use <code>&lt;AvatarGroup /&gt;</code> component and pass <code>data</code> prop to create a grouped\r\n              avatar.\r\n            </CardText>\r\n            <CardText>Data prop must be an array of object which contains props to be passed on avatar.</CardText>\r\n            <AvatarGroup />\r\n          </Card>\r\n        </Col>\r\n        <Col xl='6' sm='12'>\r\n          <Card title='Avatar Group Tooltip' code={avatarGroupTooltip}>\r\n            <CardText>\r\n              Add an extra property of <code>title</code> in the data you pass in <code>&lt;AvatarGroup /&gt;</code> to\r\n              create avatar group with tooltip.\r\n            </CardText>\r\n\r\n            <AvatarGroupTooltip />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Avatar\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarGroup = props => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : 'div'\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      const ItemTag = item.tag ? item.tag : 'div'\r\n      return (\r\n        <Fragment key={i}>\r\n          {item.title ? (\r\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null}\r\n          {!item.meta ? (\r\n            <Avatar\r\n              tag={ItemTag}\r\n              className={classnames('pull-up', {\r\n                [item.className]: item.className\r\n              })}\r\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\r\n              {...item}\r\n              title={undefined}\r\n              meta={undefined}\r\n            />\r\n          ) : null}\r\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar-group', {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";"],"sourceRoot":""}