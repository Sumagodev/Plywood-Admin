{"version":3,"sources":["views/apps/ecommerce/wishlist/index.js","@core/components/breadcrumbs/index.js"],"names":["Wishlist","dispatch","useDispatch","store","useSelector","state","ecommerce","useEffect","getWishlistItems","title","data","wishlist","length","className","map","item","CartBtnTag","isInCart","Link","to","slug","src","image","alt","name","Array","fill","listItem","index","classnames","rating","price","description","color","onClick","deleteWishlistItem","id","size","tag","handleCartBtn","addToCart","getCartItems","BreadCrumbs","props","Wrapper","link","Fragment","isLastItem","active","end"],"mappings":"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","file":"static/js/85.d1448e2b.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { Fragment, useEffect } from 'react'\n\n// ** Custom Components\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Star, X, ShoppingCart, Info } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Button, Alert } from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getWishlistItems, deleteWishlistItem, addToCart, getCartItems } from '../store'\n\n// ** Styles\nimport '@styles/base/pages/app-ecommerce.scss'\n\nconst Wishlist = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ecommerce)\n\n  //** ComponentDidMount : get wishlist items\n  useEffect(() => {\n    dispatch(getWishlistItems())\n  }, [])\n\n  // ** Handle Move/Add to cart\n  const handleCartBtn = (id, val) => {\n    if (val === false) {\n      dispatch(addToCart(id))\n    }\n    dispatch(getWishlistItems())\n    dispatch(getCartItems())\n  }\n\n  // ** Renders wishlist products\n  const renderWishlist = () => {\n    return store.wishlist.map(item => {\n      const CartBtnTag = item.isInCart ? Link : 'button'\n      return (\n        <Card className='ecommerce-card' key={item.name}>\n          <div className='item-img text-center mx-auto'>\n            <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>\n              <img className='img-fluid' src={item.image} alt={item.name} />\n            </Link>\n          </div>\n          <CardBody>\n            <div className='item-wrapper'>\n              <div className='item-rating'>\n                <ul className='unstyled-list list-inline'>\n                  {new Array(5).fill().map((listItem, index) => {\n                    return (\n                      <li key={index} className='ratings-list-item me-25'>\n                        <Star\n                          className={classnames({\n                            'filled-star': index + 1 <= item.rating,\n                            'unfilled-star': index + 1 > item.rating\n                          })}\n                        />\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n              <div className='item-cost'>\n                <h6 className='item-price'>$ {item.price}</h6>\n              </div>\n            </div>\n            <div className='item-name'>\n              <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>{item.name}</Link>\n            </div>\n            <CardText className='item-description'>{item.description}</CardText>\n          </CardBody>\n          <div className='item-options text-center'>\n            <Button\n              className='btn-wishlist remove-wishlist'\n              color='light'\n              onClick={() => {\n                dispatch(deleteWishlistItem(item.id))\n              }}\n            >\n              <X className='me-25' size={14} />\n              <span>Remove</span>\n            </Button>\n            <Button\n              color='primary'\n              tag={CartBtnTag}\n              className='btn-cart move-cart'\n              onClick={() => handleCartBtn(item.id, item.isInCart)}\n              /*eslint-disable */\n              {...(item.isInCart\n                ? {\n                    to: '/apps/ecommerce/checkout'\n                  }\n                : {})}\n              /*eslint-enable */\n            >\n              <ShoppingCart className='me-50' size={14} />\n              <span>{item.isInCart ? 'View In Cart' : 'Add To Cart'}</span>\n            </Button>\n          </div>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Wishlist' data={[{ title: 'eCommerce' }, { title: 'Wishlist' }]} />\n      {store.wishlist.length ? (\n        <section className='grid-view wishlist-items'>{renderWishlist()}</section>\n      ) : (\n        <Alert color='info'>\n          <div className='alert-body'>\n            <Info size={14} />\n            <span className='align-middle ms-50'>Your Wishlist is empty</span>\n          </div>\n        </Alert>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Wishlist\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}