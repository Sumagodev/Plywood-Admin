{"version":3,"sources":["views/forms/form-elements/number-input/NumberInputSize.js","views/forms/form-elements/number-input/NumberInputBasic.js","views/forms/form-elements/number-input/NumberInputMinMax.js","views/forms/form-elements/number-input/NumberInputFormat.js","views/forms/form-elements/number-input/NumberInputColors.js","views/forms/form-elements/number-input/NumberInputDecimal.js","views/forms/form-elements/number-input/NumberInputControlled.js","views/forms/form-elements/number-input/index.js","@core/components/breadcrumbs/index.js"],"names":["NumberInputSize","tag","className","for","defaultValue","upHandler","id","downHandler","NumberInputBasic","disabled","readOnly","NumberInputMinMax","min","max","NumberInputFormat","parser","num","cells","toString","split","replace","formatter","x","colors","NumberInputColors","map","color","NumberInputDecimal","step","NumberInputControlled","value","setValue","useState","isDisabled","setIsDisabled","isReadOnly","setIsReadOnly","onChange","size","onClick","NumberInput","title","data","md","sm","xs","BreadCrumbs","props","to","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end"],"mappings":"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","file":"static/js/145.07e65a69.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputSize = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Sizes</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='d-flex flex-wrap'>\r\n          <div className='me-2'>\r\n            <Label className='form-label' for='lg-number-input'>\r\n              Large Input\r\n            </Label>\r\n            <InputNumber\r\n              defaultValue={10}\r\n              className='input-lg'\r\n              upHandler={<Plus />}\r\n              id='lg-number-input'\r\n              downHandler={<Minus />}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Label className='form-label' for='default-number-input'>\r\n              Default Input\r\n            </Label>\r\n            <InputNumber defaultValue={10} upHandler={<Plus />} id='default-number-input' downHandler={<Minus />} />\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputSize\r\n","// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputBasic = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Basic</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <div>\r\n            <Label className='form-label' for='basic-number-input'>\r\n              Basic Input\r\n            </Label>\r\n            <InputNumber id='basic-number-input' defaultValue={10} upHandler={<Plus />} downHandler={<Minus />} />\r\n          </div>\r\n          <div>\r\n            <Label className='form-label' for='disabled-number-input'>\r\n              Disabled Input\r\n            </Label>\r\n            <InputNumber\r\n              disabled\r\n              defaultValue={10}\r\n              upHandler={<Plus />}\r\n              downHandler={<Minus />}\r\n              id='disabled-number-input'\r\n            />\r\n          </div>\r\n          <div>\r\n            <Label className='form-label' for='readOnly-number-input'>\r\n              ReadOnly Input\r\n            </Label>\r\n            <InputNumber\r\n              readOnly\r\n              defaultValue={10}\r\n              upHandler={<Plus />}\r\n              downHandler={<Minus />}\r\n              id='readOnly-number-input'\r\n            />\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputBasic\r\n","// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputMinMax = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Min Max</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div>\r\n          <Label className='form-label' for='min-max-number-input'>\r\n            Min Max Input\r\n          </Label>\r\n          <InputNumber\r\n            min={0}\r\n            max={10}\r\n            defaultValue={5}\r\n            upHandler={<Plus />}\r\n            downHandler={<Minus />}\r\n            id='min-max-number-input'\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputMinMax\r\n","// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputFormat = () => {\r\n  const numberWithCommas = x => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n  }\r\n\r\n  const format = num => {\r\n    return `$ ${numberWithCommas(num)}`\r\n  }\r\n\r\n  const parser = num => {\r\n    const cells = num.toString().split(' ')\r\n    if (!cells[1]) {\r\n      return num\r\n    }\r\n\r\n    const parsed = cells[1].replace(/,*/g, '')\r\n\r\n    return parsed\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Formatting</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div>\r\n          <Label className='form-label' for='formatting-number-input'>\r\n            Formatting Input\r\n          </Label>\r\n          <InputNumber\r\n            parser={parser}\r\n            defaultValue={5}\r\n            formatter={format}\r\n            upHandler={<Plus />}\r\n            downHandler={<Minus />}\r\n            id='formatting-number-input'\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputFormat\r\n","// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info']\r\n\r\nconst NumberInputColors = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Colors</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          {colors.map(color => (\r\n            <div key={color}>\r\n              <Label className='form-label text-capitalize' for={`${color}-number-input`}>\r\n                {color} Input\r\n              </Label>\r\n              <InputNumber\r\n                defaultValue={10}\r\n                upHandler={<Plus />}\r\n                downHandler={<Minus />}\r\n                id={`${color}-number-input`}\r\n                className={`input-${color}`}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputColors\r\n","// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label } from 'reactstrap'\r\n\r\nconst NumberInputDecimal = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Decimal</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div>\r\n          <Label className='form-label' for='decimal-number-input'>\r\n            Decimal Input\r\n          </Label>\r\n          <InputNumber\r\n            step={0.1}\r\n            defaultValue={10}\r\n            upHandler={<Plus />}\r\n            downHandler={<Minus />}\r\n            id='decimal-number-input'\r\n          />\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputDecimal\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport InputNumber from 'rc-input-number'\r\nimport { Plus, Minus } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Label, Button } from 'reactstrap'\r\n\r\nconst NumberInputControlled = () => {\r\n  const [value, setValue] = useState(1)\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n  const [isReadOnly, setIsReadOnly] = useState(false)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Controlled</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div>\r\n          <Label className='form-label' for='controlled-number-input'>\r\n            Controlled Input\r\n          </Label>\r\n          <InputNumber\r\n            value={value}\r\n            upHandler={<Plus />}\r\n            disabled={isDisabled}\r\n            readOnly={isReadOnly}\r\n            downHandler={<Minus />}\r\n            id='controlled-number-input'\r\n            onChange={value => setValue(value)}\r\n          />\r\n        </div>\r\n        <div className='demo-inline-spacing'>\r\n          <Button size='sm' color='primary' onClick={() => setIsDisabled(!isDisabled)}>\r\n            Toggle Disabled\r\n          </Button>\r\n          <Button size='sm' color='primary' onClick={() => setIsReadOnly(!isReadOnly)}>\r\n            Toggle ReadOnly\r\n          </Button>\r\n          <Button size='sm' color='primary' onClick={() => setValue(10)}>\r\n            Set Value to 10\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default NumberInputControlled\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport NumberInputSize from './NumberInputSize'\r\nimport NumberInputBasic from './NumberInputBasic'\r\nimport NumberInputMinMax from './NumberInputMinMax'\r\nimport NumberInputFormat from './NumberInputFormat'\r\nimport NumberInputColors from './NumberInputColors'\r\nimport NumberInputDecimal from './NumberInputDecimal'\r\nimport NumberInputControlled from './NumberInputControlled'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/input-number/input-number.scss'\r\n\r\nconst NumberInput = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title='Number Input' data={[{ title: 'Form Elements' }, { title: 'Number Input' }]} />\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <NumberInputBasic />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <NumberInputControlled />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <NumberInputDecimal />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <NumberInputMinMax />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <NumberInputSize />\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <NumberInputFormat />\r\n        </Col>\r\n        <Col xs='12'>\r\n          <NumberInputColors />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default NumberInput\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}