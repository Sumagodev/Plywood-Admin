{"version":3,"sources":["views/components/navComponent/NavEnd.js","views/components/navComponent/NavBasic.js","views/components/navComponent/NavBorder.js","views/components/navComponent/NavCenter.js","views/components/navComponent/NavDivider.js","views/components/navComponent/NavVertical.js","views/components/navComponent/NavSquareBorder.js","views/components/navComponent/NavVerticalBorder.js","views/components/navComponent/NavComponentSourceCode.js","views/components/navComponent/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["NavEnd","className","href","active","disabled","NavBasic","NavBorder","NavCenter","NavDivider","vertical","NavVertical","NavSquareBorder","NavVerticalBorder","navBasic","navBorder","navCenter","navEnd","navVertical","navVerticalBorder","navSquareBorder","navDivider","NavComponent","useEffect","Prism","highlightAll","title","data","md","sm","code","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","classnames","color","size","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/116.bdb6046a.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavEnd = () => {\n  return (\n    <Nav className='justify-content-end'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavEnd\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBasic = () => {\n  return (\n    <Nav>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBasic\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBorder = () => {\n  return (\n    <Nav className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBorder\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavCenter = () => {\n  return (\n    <Nav className='justify-content-center'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavCenter\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavDivider = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <li className='dropdown-divider'>\n        <NavLink href='#'>Link</NavLink>\n      </li>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavDivider\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVertical = () => {\n  return (\n    <Nav vertical>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVertical\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavSquareBorder = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavSquareBorder\n","// ** Reactstrap Imports\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVerticalBorder = () => {\n  return (\n    <Nav vertical className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVerticalBorder\n","export const navBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBasic = () => {\n  return (\n    <Nav>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const navBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavBorder = () => {\n  return (\n    <Nav className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavBorder\n  `}\n    </code>\n  </pre>\n)\n\nexport const navCenter = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavCenter = () => {\n  return (\n    <Nav className='justify-content-center'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavCenter\n  `}\n    </code>\n  </pre>\n)\n\nexport const navEnd = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavEnd = () => {\n  return (\n    <Nav className='justify-content-end'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavEnd\n  `}\n    </code>\n  </pre>\n)\n\nexport const navVertical = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVertical = () => {\n  return (\n    <Nav vertical>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVertical\n  `}\n    </code>\n  </pre>\n)\n\nexport const navVerticalBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavVerticalBorder = () => {\n  return (\n    <Nav vertical className='wrap-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavVerticalBorder\n  `}\n    </code>\n  </pre>\n)\n\nexport const navSquareBorder = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavSquareBorder = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavSquareBorder\n  `}\n    </code>\n  </pre>\n)\n\nexport const navDivider = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Nav, NavItem, NavLink } from 'reactstrap'\n\nconst NavDivider = () => {\n  return (\n    <Nav vertical className='wrap-border square-border'>\n      <NavItem>\n        <NavLink href='#' active>\n          Active\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem className='dropdown-divider'>\n        <NavLink href='#'>Link</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink disabled href='#'>\n          Disabled\n        </NavLink>\n      </NavItem>\n    </Nav>\n  )\n}\nexport default NavDivider\n  `}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport NavEnd from './NavEnd'\nimport NavBasic from './NavBasic'\nimport NavBorder from './NavBorder'\nimport NavCenter from './NavCenter'\nimport NavDivider from './NavDivider'\nimport NavVertical from './NavVertical'\nimport NavSquareBorder from './NavSquareBorder'\nimport NavVerticalBorder from './NavVerticalBorder'\n\n// ** Source Code\nimport {\n  navEnd,\n  navBasic,\n  navBorder,\n  navCenter,\n  navDivider,\n  navVertical,\n  navSquareBorder,\n  navVerticalBorder\n} from './NavComponentSourceCode'\n\nconst NavComponent = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Navs' data={[{ title: 'Components' }, { title: 'Navs' }]} />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <Card title='Base Nav' code={navBasic}>\n            <CardText>\n              The base nav component provides a strong foundation for building all types of navigation components.\n            </CardText>\n            <NavBasic />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='With Border' code={navBorder}>\n            <CardText>\n              Use Class <code>.wrap-border</code> with your <code>nav</code> tag to wrap your nav with a border\n            </CardText>\n            <NavBorder />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Center Alignment' code={navCenter}>\n            <CardText>\n              Use Class <code>.justify-content-center</code> with your <code>nav</code> tag to align your nav to center.\n            </CardText>\n            <NavCenter />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='End Alignment' code={navEnd}>\n            <CardText>\n              Use Class <code>.justify-content-end</code> with your <code>nav</code> tag to align your nav to End.\n            </CardText>\n            <NavEnd />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Vertical Nav' code={navVertical}>\n            <CardText>\n              Use prop <code>vertical</code> with nav tag to make it vertical.\n            </CardText>\n            <NavVertical />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Vertical Nav With Border' code={navVerticalBorder}>\n            <CardText>\n              To wrap with border, use <code>.wrap-border class</code>.\n            </CardText>\n            <NavVerticalBorder />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Nav With square Border' code={navSquareBorder}>\n            <CardText>\n              To wrap with square border, use <code>.square-border</code> class with <code>.wrap-border</code> class.\n            </CardText>\n            <NavSquareBorder />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Nav With Divider' code={navDivider}>\n            <CardText>\n              To add divider, use <code>.dropdown-divider</code> class to <code>NavItem</code>\n            </CardText>\n            <NavDivider />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default NavComponent\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}