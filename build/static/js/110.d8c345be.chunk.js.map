{"version":3,"sources":["views/components/breadcrumbs/BreadcrumbStyles.js","views/components/breadcrumbs/BreadcrumbsDefault.js","views/components/breadcrumbs/BreadcrumbAlignment.js","views/components/breadcrumbs/BreadCrumbsSourceCode.js","views/components/breadcrumbs/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BreadcrumbsStyles","listClassName","to","active","BreadcrumbsDefault","BreadcrumbsAlignment","className","breadcrumbsDefault","breadcrumbsStyles","breadcrumbsAlignment","BreadCrumbs","useEffect","Prism","highlightAll","title","data","sm","id","code","props","tag","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","classnames","color","size","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/110.d8c345be.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsStyles = () => {\n  return (\n    <Fragment>\n      <Breadcrumb listClassName='breadcrumb-slash'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-dots'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-dashes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-pipes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb listClassName='breadcrumb-chevron'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </Fragment>\n  )\n}\nexport default BreadcrumbsStyles\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsDefault = () => {\n  return (\n    <Fragment>\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </Fragment>\n  )\n}\nexport default BreadcrumbsDefault\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsAlignment = () => {\n  return (\n    <Fragment>\n      <div className='d-flex justify-content-start breadcrumb-wrapper'>\n        <Breadcrumb className='ms-1'>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='d-flex justify-content-center breadcrumb-wrapper my-1'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='d-flex justify-content-end breadcrumb-wrapper'>\n        <Breadcrumb className='me-1'>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem className='pe-1'>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    </Fragment>\n  )\n}\nexport default BreadcrumbsAlignment\n","export const breadcrumbsDefault = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsDefault = () => {\n  return (\n    <React.Fragment>\n      <Breadcrumb className='ms-1'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </React.Fragment>\n  )\n}\nexport default BreadcrumbsDefault\n    `}\n    </code>\n  </pre>\n)\n\nexport const breadcrumbsStyles = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsStyles = () => {\n  return (\n    <React.Fragment>\n      <Breadcrumb className='breadcrumb-slash'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-dots'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-dashes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-pipes'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n\n      <Breadcrumb className='breadcrumb-chevron'>\n        <BreadcrumbItem>\n          <Link to='#'> Home </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem>\n          <Link to='#'> Library </Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem active>\n          <span> Data </span>\n        </BreadcrumbItem>\n      </Breadcrumb>\n    </React.Fragment>\n  )\n}\nexport default BreadcrumbsStyles\n\n      `}\n    </code>\n  </pre>\n)\n\nexport const breadcrumbsAlignment = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap'\nimport { Link } from 'react-router-dom'\n\nconst BreadcrumbsAlignment = () => {\n  return (\n    <React.Fragment>\n      <div className='justify-content-start breadcrumb-wrapper'>\n        <Breadcrumb className='ms-1'>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='justify-content-center breadcrumb-wrapper'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <div className='justify-content-end breadcrumb-wrapper'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='#'> Home </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='#'> Library </Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <span> Data </span>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    </React.Fragment>\n  )\n}\nexport default BreadcrumbsAlignment\n\n      `}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Demo Components\nimport BreadCrumbStyles from './BreadcrumbStyles'\nimport BreadcrumbsDefault from './BreadcrumbsDefault'\nimport BreadCrumbsPage from '@components/breadcrumbs'\nimport BreadCrumbAlignment from './BreadcrumbAlignment'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Source Code\nimport { breadcrumbsAlignment, breadcrumbsDefault, breadcrumbsStyles } from './BreadCrumbsSourceCode'\n\nconst BreadCrumbs = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbsPage title='Breadcrumbs' data={[{ title: 'Components' }, { title: 'Breadcrumbs' }]} />\n\n      <Row>\n        <Col sm='12'>\n          <section id='component-breadcrumbs'>\n            <Card title='Default' code={breadcrumbsDefault}>\n              <BreadcrumbsDefault />\n            </Card>\n            <Card title='Styles' code={breadcrumbsStyles}>\n              <CardText>\n                These breadcrumbs are only for demo puropses. You can change breadcrumb seprator by changing{' '}\n                <code>$breadcrumb-divider</code> variable value in scss\n              </CardText>\n              <BreadCrumbStyles />\n            </Card>\n          </section>\n        </Col>\n        <Col sm='12'>\n          <section id='breadcrumb-alignment'>\n            <Card title='Alignment' code={breadcrumbsAlignment}>\n              <CardText>\n                Use class <code>.justify-content-{'{position}'}</code> to align breadcrumb to desired position.\n              </CardText>\n              <BreadCrumbAlignment />\n            </Card>\n          </section>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default BreadCrumbs\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}