{"version":3,"sources":["views/components/badgePills/BadgePillGlow.js","views/components/badgePills/BadgeBlock.js","views/components/badgePills/BadgePillLink.js","views/components/badgePills/BadgePillLight.js","views/components/badgePills/BadgeNotification.js","views/components/badgePills/BadgePillContextual.js","views/components/badgePills/BadgePillSourceCode.js","views/components/badgePills/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgePillGlow","className","color","pill","BadgePillBlock","BadgePillLink","href","size","BadgePillLight","BadgePillNotification","BadgePillContextual","badgePillLight","badgePillGlow","badgePillContextual","badgePillNotification","badgePillLink","badgePillBlock","BadgePill","useEffect","Prism","highlightAll","title","data","sm","code","BadgeNotification","md","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/108.84469884.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillGlow = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary' pill className='badge-glow'>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill className='badge-glow'>\n        Secondary\n      </Badge>\n      <Badge color='success' pill className='badge-glow'>\n        Success\n      </Badge>\n      <Badge color='danger' pill className='badge-glow'>\n        Danger\n      </Badge>\n      <Badge color='warning' pill className='badge-glow'>\n        Warning\n      </Badge>\n      <Badge color='info' pill className='badge-glow'>\n        Info\n      </Badge>\n      <Badge color='dark' pill className='badge-glow'>\n        Dark\n      </Badge>\n    </div>\n  )\n}\nexport default BadgePillGlow\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillBlock = () => {\n  return (\n    <Badge pill color='danger' className='d-block'>\n      <span>Block Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillBlock\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Icons Imports\nimport { Link } from 'react-feather'\n\nconst BadgePillLink = () => {\n  return (\n    <Badge color='primary' pill href='#'>\n      <Link size={12} />\n      <span className='align-middle ms-50'>Link Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillLink\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillLight = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='light-primary' pill>\n        Primary\n      </Badge>\n      <Badge color='light-secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='light-success' pill>\n        Success\n      </Badge>\n      <Badge color='light-danger' pill>\n        Danger\n      </Badge>\n      <Badge color='light-warning' pill>\n        Warning\n      </Badge>\n      <Badge color='light-info' pill>\n        Info\n      </Badge>\n    </div>\n  )\n}\nexport default BadgePillLight\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Icons Imports\nimport { Bell } from 'react-feather'\n\nconst BadgePillNotification = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <div className='position-relative'>\n        <Badge pill color='primary' className='badge-up'>\n          4\n        </Badge>\n        <Bell className='text-primary' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='danger' className='badge-up'>\n          5\n        </Badge>\n        <Bell className='text-danger' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='info' className='badge-up'>\n          6\n        </Badge>\n        <Bell className='text-info' size={22} />\n      </div>\n    </div>\n  )\n}\nexport default BadgePillNotification\n","// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst BadgePillContextual = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Badge color='primary' pill>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='success' pill>\n        Success\n      </Badge>\n      <Badge color='danger' pill>\n        Danger\n      </Badge>\n      <Badge color='warning' pill>\n        Warning\n      </Badge>\n      <Badge color='info' pill>\n        Info\n      </Badge>\n      <Badge color='dark' pill>\n        Dark\n      </Badge>\n    </div>\n  )\n}\nexport default BadgePillContextual\n","export const badgePillLight = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillLight = () => {\n  return (\n    <React.Fragment>\n      <Badge color='light-primary' pill>\n        Primary\n      </Badge>\n      <Badge color='light-secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='light-success' pill>\n        Success\n      </Badge>\n      <Badge color='light-danger' pill>\n      Danger\n      </Badge>\n      <Badge color='light-warning' pill>\n        Warning\n      </Badge>\n      <Badge color='light-info' pill>\n        Info\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgePillLight\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillGlow = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillGlow = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary' pill className='badge-glow'>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill className='badge-glow'>\n        Secondary\n      </Badge>\n      <Badge color='success' pill className='badge-glow'>\n        Success\n      </Badge>\n      <Badge color='danger' pill className='badge-glow'>\n        Danger\n      </Badge>\n      <Badge color='warning' pill className='badge-glow'>\n        Warning\n      </Badge>\n      <Badge color='info' pill className='badge-glow'>\n        Info\n      </Badge>\n      <Badge color='dark' pill className='badge-glow mb-1'>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgePillGlow\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillContextual = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillContextual = () => {\n  return (\n    <React.Fragment>\n      <Badge color='primary' pill>\n        Primary\n      </Badge>\n      <Badge color='secondary' pill>\n        Secondary\n      </Badge>\n      <Badge color='success' pill>\n        Success\n      </Badge>\n      <Badge color='danger' pill>\n        Danger\n      </Badge>\n      <Badge color='warning' pill>\n        Warning\n      </Badge>\n      <Badge color='info' pill>\n        Info\n      </Badge>\n      <Badge color='dark' pill>\n        Dark\n      </Badge>\n    </React.Fragment>\n  )\n}\nexport default BadgePillContextual\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillNotification = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\nimport { Bell } from 'react-feather'\n\nconst BadgePillNotification = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <div className='position-relative'>\n        <Badge pill color='primary' className='badge-up'>\n          4\n        </Badge>\n        <Bell className='text-primary' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='danger' className='badge-up'>\n          5\n        </Badge>\n        <Bell className='text-danger' size={22} />\n      </div>\n      <div className='position-relative'>\n        <Badge pill color='info' className='badge-up'>\n          6\n        </Badge>\n        <Bell className='text-info' size={22} />\n      </div>\n    </div>\n  )\n}\nexport default BadgePillNotification\n\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillLink = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\nimport { Link } from 'react-feather'\n\nconst BadgePillLink = () => {\n  return (\n    <Badge color='primary' pill href='#'>\n      <Link size={12} />\n      <span className='align-middle ms-50'>Link Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillLink\n`}\n    </code>\n  </pre>\n)\n\nexport const badgePillBlock = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Badge } from 'reactstrap'\n\nconst BadgePillBlock = () => {\n  return (\n    <Badge pill color='primary' className='d-block'>\n      <span>Block Badge Pill</span>\n    </Badge>\n  )\n}\nexport default BadgePillBlock\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport BadgeGlow from './BadgePillGlow'\nimport BadgePillBlock from './BadgeBlock'\nimport BadgePillLink from './BadgePillLink'\nimport BadgePillLight from './BadgePillLight'\nimport BadgeNotification from './BadgeNotification'\nimport BadgePillContextual from './BadgePillContextual'\n\n// ** Source Code\nimport {\n  badgePillGlow,\n  badgePillLink,\n  badgePillBlock,\n  badgePillLight,\n  badgePillContextual,\n  badgePillNotification\n} from './BadgePillSourceCode'\n\nconst BadgePill = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Pill Badges' data={[{ title: 'Components' }, { title: 'Pill Badges' }]} />\n      <Row>\n        <Col sm='12'>\n          <Card title='Contextual' code={badgePillContextual}>\n            <CardText className='mb-0'>\n              Use prop <code>pill</code> with <code>Badge</code> tag to create badge pill.\n            </CardText>\n            <BadgePillContextual />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Glow' code={badgePillGlow}>\n            <CardText className='mb-0'>\n              Use class <code>.badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge.\n            </CardText>\n            <BadgeGlow />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Light' code={badgePillLight}>\n            <CardText className='mb-0'>\n              Use prop <code>pill</code> and <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create\n              a light badge pill.\n            </CardText>\n            <BadgePillLight />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Notifications' code={badgePillNotification}>\n            <CardText className='mb-0'>\n              Use <code>.badge-up</code> to set pill badge to higher than other text. So that it can work with\n              notifications also.\n            </CardText>\n            <BadgeNotification />\n          </Card>\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <Card title='Link' code={badgePillLink}>\n            <CardText>\n              Use <code>href=\"#\"</code> prop to use badge as a link.\n            </CardText>\n            <BadgePillLink />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Block' code={badgePillBlock}>\n            <CardText>\n              Use <code>.d-block</code> class to make badge display as block.\n            </CardText>\n            <BadgePillBlock />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default BadgePill\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}