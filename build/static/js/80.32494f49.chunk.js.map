{"version":3,"sources":["views/pages/pricing/PricingFaqs.js","views/pages/pricing/PricingTrial.js","views/pages/pricing/PricingHeader.js","views/pages/pricing/index.js","assets/images/illustration/pricing-Illustration.svg","views/pages/pricing/PricingCards.js"],"names":["PricingFaqs","data","className","sm","lg","size","offset","map","r","index","tag","targetId","String","question","accordionId","ans","PricingTrial","color","src","trialSvg","alt","style","transform","PricingHeader","duration","setDuration","id","type","checked","onChange","e","target","Pricing","setData","useState","faq","setFaq","useEffect","axios","get","then","res","dataArr","faqArr","Object","entries","forEach","key","val","push","PricingCards","bordered","fullWidth","cols","colsProps","md","xs","classnames","item","monthlyPrice","yearlyPlan","perMonth","yearlyPrice","totalAnnual","imgClasses","title","border","popular","toLowerCase","pill","img","subtitle","planBenefits","benefit","i","block","outline"],"mappings":"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","file":"static/js/80.32494f49.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Row, Col, AccordionBody, AccordionItem, AccordionHeader, UncontrolledAccordion } from 'reactstrap'\r\n\r\nconst PricingFaqs = ({ data }) => {\r\n  return (\r\n    <div className='pricing-faq'>\r\n      <h3 className='text-center'>FAQ's</h3>\r\n      <p className='text-center mb-0'>Let us help answer the most common questions.</p>\r\n      <Row className='mt-75 mb-2'>\r\n        <Col className='mx-auto' sm='12' lg={{ size: 10, offset: 2 }}>\r\n          <UncontrolledAccordion className='accordion-margin mt-2'>\r\n            {data.map((r, index) => {\r\n              return (\r\n                <AccordionItem key={index + 1}>\r\n                  <AccordionHeader tag='h2' targetId={String(index + 1)}>\r\n                    {r.question}\r\n                  </AccordionHeader>\r\n                  <AccordionBody accordionId={String(index + 1)}>{r.ans}</AccordionBody>\r\n                </AccordionItem>\r\n              )\r\n            })}\r\n          </UncontrolledAccordion>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PricingFaqs\r\n","// ** Reactstrap Imports\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\n// ** Images\r\nimport trialSvg from '@src/assets/images/illustration/pricing-Illustration.svg'\r\n\r\nconst PricingTrial = () => {\r\n  return (\r\n    <div className='pricing-free-trial'>\r\n      <Row>\r\n        <Col className='mx-auto' lg={{ size: 10, offset: 3 }} sm='12'>\r\n          <div className='pricing-trial-content d-flex justify-content-between'>\r\n            <div className='text-center text-md-start mt-3'>\r\n              <h3 className='text-primary'>Still not convinced? Start with a 14-day FREE trial!</h3>\r\n              <h5>You will get full access to with all the features for 14 days.</h5>\r\n              <div className='mt-2 mt-lg-3'>\r\n                <Button color='primary'>Start 14-day FREE trial</Button>\r\n              </div>\r\n            </div>\r\n            <img\r\n              className='pricing-trial-img img-fluid'\r\n              src={trialSvg}\r\n              alt='trial svg'\r\n              style={{\r\n                transform: 'scaleX(1)'\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PricingTrial\r\n","// ** Reactstrap Imports\r\nimport { Input } from 'reactstrap'\r\n\r\nconst PricingHeader = ({ duration, setDuration }) => {\r\n  const onChange = e => {\r\n    if (e.target.checked) {\r\n      setDuration('yearly')\r\n    } else {\r\n      setDuration('monthly')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='text-center'>\r\n      <h1 className='mt-5'>Pricing Plans</h1>\r\n      <p className='mb-2 pb-75'>\r\n        All plans include 40+ advanced tools and features to boost your product. Choose the best plan to fit your needs.\r\n      </p>\r\n      <div className='d-flex align-items-center justify-content-center mb-5 pb-50'>\r\n        <h6 className='me-50 mb-0'>Monthly</h6>\r\n        <div className='form-switch'>\r\n          <Input id='plan-switch' type='switch' checked={duration === 'yearly'} onChange={onChange} />\r\n        </div>\r\n        <h6 className='ms-50 mb-0'>Annually</h6>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PricingHeader\r\n","// ** React Imports\r\nimport { useState, useEffect, Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Demo Components\r\nimport PricingFaqs from './PricingFaqs'\r\nimport PricingCards from './PricingCards'\r\nimport PricingTrial from './PricingTrial'\r\nimport PricingHeader from './PricingHeader'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-pricing.scss'\r\n\r\nconst Pricing = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [faq, setFaq] = useState(null),\r\n    [duration, setDuration] = useState('monthly')\r\n\r\n  useEffect(() => {\r\n    axios.get('/pricing/data').then(res => {\r\n      const dataArr = [],\r\n        faqArr = []\r\n\r\n      Object.entries(res.data).forEach(([key, val]) => {\r\n        if (key !== 'qandA') {\r\n          dataArr.push(val)\r\n          setData([...dataArr])\r\n        } else {\r\n          faqArr.push(val)\r\n          setFaq(faqArr[0])\r\n        }\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div id='pricing-table'>\r\n      <PricingHeader duration={duration} setDuration={setDuration} />\r\n      {data !== null && faq !== null ? (\r\n        <Fragment>\r\n          <PricingCards data={data} duration={duration} />\r\n          <PricingTrial />\r\n          <PricingFaqs data={faq} />\r\n        </Fragment>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pricing\r\n","export default __webpack_public_path__ + \"static/media/pricing-Illustration.1f07f42e.svg\";","// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, CardText, Badge, ListGroup, ListGroupItem, Button } from 'reactstrap'\r\n\r\nconst PricingCards = ({ data, duration, bordered, fullWidth, cols }) => {\r\n  const colsProps = cols ? cols : { md: 4, xs: 12 }\r\n\r\n  const renderPricingCards = () => {\r\n    return data.map((item, index) => {\r\n      const monthlyPrice = duration === 'yearly' ? item.yearlyPlan.perMonth : item.monthlyPrice,\r\n        yearlyPrice = duration === 'yearly' ? item.yearlyPlan.totalAnnual : item.monthlyPrice,\r\n        imgClasses = item.title === 'Basic' ? 'mb-2 mt-5' : item.title === 'Standard' ? 'mb-1' : 'mb-2'\r\n\r\n      return (\r\n        <Col key={index} {...colsProps}>\r\n          <Card\r\n            className={classnames('text-center', {\r\n              border: bordered,\r\n              'shadow-none': bordered,\r\n              popular: item.popular === true,\r\n              'border-primary': bordered && item.popular === true,\r\n              [`${item.title.toLowerCase()}-pricing`]: item.title\r\n            })}\r\n          >\r\n            <CardBody>\r\n              {item.popular === true ? (\r\n                <div className='pricing-badge text-end'>\r\n                  <Badge color='light-primary' pill>\r\n                    Popular\r\n                  </Badge>\r\n                </div>\r\n              ) : null}\r\n              <img className={imgClasses} src={item.img} alt='pricing svg' />\r\n              <h3>{item.title}</h3>\r\n              <CardText>{item.subtitle}</CardText>\r\n              <div className='annual-plan'>\r\n                <div className='plan-price mt-2'>\r\n                  <sup className='font-medium-1 fw-bold text-primary me-25'>$</sup>\r\n                  <span className={`pricing-${item.title.toLowerCase()}-value fw-bolder text-primary`}>\r\n                    {monthlyPrice}\r\n                  </span>\r\n                  <span className='pricing-duration text-body font-medium-1 fw-bold ms-25'>/month</span>\r\n                </div>\r\n                {item.title !== 'Basic' && duration === 'yearly' ? (\r\n                  <small className='annual-pricing text-muted'>USD {yearlyPrice} / year</small>\r\n                ) : null}\r\n              </div>\r\n              <ListGroup tag='ul' className='list-group-circle text-start mb-2'>\r\n                {item.planBenefits.map((benefit, i) => (\r\n                  <ListGroupItem key={i} tag='li'>\r\n                    {benefit}\r\n                  </ListGroupItem>\r\n                ))}\r\n              </ListGroup>\r\n              <Button block outline={item.title !== 'Standard'} color={item.title === 'Basic' ? 'success' : 'primary'}>\r\n                {item.title === 'Basic' ? 'Your current plan' : 'Upgrade'}\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      )\r\n    })\r\n  }\r\n\r\n  const defaultCols = {\r\n    sm: { offset: 2, size: 10 },\r\n    lg: { offset: 2, size: 10 }\r\n  }\r\n\r\n  return (\r\n    <Row className='pricing-card'>\r\n      <Col {...(!fullWidth ? defaultCols : {})} className={classnames({ 'mx-auto': !fullWidth })}>\r\n        <Row>{renderPricingCards()}</Row>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default PricingCards\r\n"],"sourceRoot":""}