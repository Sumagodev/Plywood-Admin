{"version":3,"sources":["views/extensions/sweet-alert/SweetAlertTypes.js","views/extensions/sweet-alert/SweetAlertBasic.js","views/extensions/sweet-alert/SweetAlertOptions.js","views/extensions/sweet-alert/SweetAlertCallback.js","views/extensions/sweet-alert/SweetAlertPositions.js","views/extensions/sweet-alert/SweetAlertAnimations.js","views/extensions/sweet-alert/index.js","@core/components/extensions-header/index.js"],"names":["MySwal","withReactContent","Swal","SweetAlertTypes","tag","className","color","onClick","fire","title","text","icon","customClass","confirmButton","buttonsStyling","outline","BasicSweetAlert","footer","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","size","cancelButtonText","cancelButton","SweetAlertOptions","imageUrl","alertImg","imageWidth","imageHeight","imageAlt","timerInterval","timerProgressBar","timer","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","then","result","dismiss","DismissReason","console","log","backdrop","allowOutsideClick","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","value","avatar_url","BasicSweetCallback","md","sm","cancel","SweetAlertPositions","position","showConfirmButton","AnimatedSweetAlert","showClass","popup","SweetAlert","subTitle","link","SweetAlertBasic","SweetAlertAnimations","SweetAlertCallback","ExtensionsHeader","props","href","target","rel"],"mappings":"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","file":"static/js/92.9caed808.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertTypes = () => {\r\n  const handleSuccess = () => {\r\n    return MySwal.fire({\r\n      title: 'Good job!',\r\n      text: 'You clicked the button!',\r\n      icon: 'success',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    return MySwal.fire({\r\n      title: 'Info!',\r\n      text: 'You clicked the button!',\r\n      icon: 'info',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleWarning = () => {\r\n    return MySwal.fire({\r\n      title: 'Warning!',\r\n      text: ' You clicked the button!',\r\n      icon: 'warning',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleError = () => {\r\n    return MySwal.fire({\r\n      title: 'Error!',\r\n      text: ' You clicked the button!',\r\n      icon: 'error',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleQuestion = () => {\r\n    return MySwal.fire({\r\n      title: 'Question?',\r\n      text: ' You clicked the button!',\r\n      icon: 'question',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Types</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className='mb-0'>\r\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\",\r\n          \"success\" and \"info\".\r\n        </CardText>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='success' onClick={handleSuccess} outline>\r\n            Success\r\n          </Button>\r\n          <Button color='danger' onClick={handleError} outline>\r\n            Error\r\n          </Button>\r\n          <Button color='warning' onClick={handleWarning} outline>\r\n            Warning\r\n          </Button>\r\n          <Button color='info' onClick={handleInfo} outline>\r\n            Info\r\n          </Button>\r\n          <Button onClick={handleQuestion} outline>\r\n            Question\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertTypes\r\n","// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport { ThumbsUp, ThumbsDown } from 'react-feather'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Reactstrap Imports'\r\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst BasicSweetAlert = () => {\r\n  const handleBasicTitleAlert = () => {\r\n    return MySwal.fire({\r\n      title: 'Any fool can use a computer',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleTitleAlert = () => {\r\n    return MySwal.fire({\r\n      title: 'The Internet?,',\r\n      text: 'That thing is still around?',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleFooterAlert = () => {\r\n    return MySwal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Something went wrong!',\r\n      footer: '<a href=\"#\">Why do I have this issue?</a>',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleHTMLAlert = () => {\r\n    return MySwal.fire({\r\n      title: '<strong>HTML <u>example</u></strong>',\r\n      icon: 'info',\r\n      html:\r\n        'You can use <b>bold text</b>, ' +\r\n        '<a href=\"https://pixinvent.com/\" target=\"_blank\">links</a> ' +\r\n        'and other HTML tags',\r\n      showCloseButton: true,\r\n      showCancelButton: true,\r\n      focusConfirm: false,\r\n      confirmButtonText: (\r\n        <span className='align-middle'>\r\n          <ThumbsUp className='me-50' size={15} />\r\n          <span className='align-middle'>Great!</span>\r\n        </span>\r\n      ),\r\n      cancelButtonText: <ThumbsDown size={15} />,\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Basic</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className='mb-0'>\r\n          SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop\r\n          computer, mobile or tablet. It's even highly customizable, as you can see below!\r\n        </CardText>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={handleBasicTitleAlert} outline>\r\n            Basic\r\n          </Button>\r\n          <Button color='primary' onClick={handleTitleAlert} outline>\r\n            With Title\r\n          </Button>\r\n          <Button color='primary' onClick={handleFooterAlert} outline>\r\n            With Footer\r\n          </Button>\r\n          <Button color='primary' onClick={handleHTMLAlert} outline>\r\n            HTML\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BasicSweetAlert\r\n","// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Images\r\nimport alertImg from '@src/assets/images/slider/04.jpg'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertOptions = () => {\r\n  const handleImageAlert = () => {\r\n    return MySwal.fire({\r\n      title: 'Sweet!',\r\n      text: 'Modal with a custom image.',\r\n      imageUrl: alertImg,\r\n      imageWidth: 300,\r\n      imageHeight: 200,\r\n      imageAlt: 'Custom image',\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleTimeoutAlert = () => {\r\n    let timerInterval\r\n    Swal.fire({\r\n      title: 'Auto close alert!',\r\n      html: 'I will close in <b></b> seconds.',\r\n      timerProgressBar: true,\r\n      timer: 2000,\r\n      didOpen() {\r\n        Swal.showLoading()\r\n        const b = Swal.getHtmlContainer().querySelector('b')\r\n        timerInterval = setInterval(() => {\r\n          b.textContent = Swal.getTimerLeft()\r\n        }, 100)\r\n      },\r\n      willClose() {\r\n        clearInterval(timerInterval)\r\n      }\r\n    }).then(function (result) {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log('I was closed by the timer')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClickOutside = () => {\r\n    return MySwal.fire({\r\n      backdrop: true,\r\n      title: 'Click outside to close!',\r\n      text: 'This is a cool message!',\r\n      allowOutsideClick: true,\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleAjax = () => {\r\n    MySwal.fire({\r\n      title: 'Search for a user',\r\n      input: 'text',\r\n      customClass: {\r\n        input: 'mx-3',\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ms-1'\r\n      },\r\n      buttonsStyling: false,\r\n      inputAttributes: {\r\n        autocapitalize: 'off'\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Look up',\r\n      showLoaderOnConfirm: true,\r\n      preConfirm(login) {\r\n        return fetch(`//api.github.com/users/${login}`)\r\n          .then(function (response) {\r\n            if (!response.ok) {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n          })\r\n          .catch(function (error) {\r\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\r\n          })\r\n      }\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          title: `${result.value.login}'s avatar`,\r\n          imageUrl: result.value.avatar_url,\r\n          customClass: {\r\n            confirmButton: 'btn btn-primary'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Options</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={handleImageAlert} outline>\r\n            Image\r\n          </Button>\r\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\r\n            Timeout\r\n          </Button>\r\n          <Button color='primary' onClick={handleClickOutside} outline>\r\n            Click Outside\r\n          </Button>\r\n          <Button color='primary' onClick={handleAjax} outline>\r\n            Ajax\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertOptions\r\n","// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button, Row, Col } from 'reactstrap'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst BasicSweetCallback = () => {\r\n  const handleConfirmText = () => {\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: 'Your file has been deleted.',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleConfirmCancel = () => {\r\n    return MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ms-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: 'Your file has been deleted.',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        MySwal.fire({\r\n          title: 'Cancelled',\r\n          text: 'Your imaginary file is safe :)',\r\n          icon: 'error',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Callback</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col className='mb-2 mb-md-0' md='6' sm='12'>\r\n            <h5 className='mb-1'>Confirm Button Text</h5>\r\n            <Button color='primary' onClick={handleConfirmText} outline>\r\n              Confirm Text\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col md='6' sm='12'>\r\n            <h5 className='mb-1'>Confirm Button Color</h5>\r\n            <Button color='primary' onClick={handleConfirmCancel} outline>\r\n              Confirm & cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BasicSweetCallback\r\n","// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertPositions = () => {\r\n  const handleTopStart = () => {\r\n    return MySwal.fire({\r\n      position: 'top-start',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n  const handleTopEnd = () => {\r\n    return MySwal.fire({\r\n      position: 'top-end',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n  const handleBottomStart = () => {\r\n    return MySwal.fire({\r\n      position: 'bottom-start',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n  const handleBottomEnd = () => {\r\n    return MySwal.fire({\r\n      position: 'bottom-end',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Position</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className='mb-0'>\r\n          You can specify position of your alert with{' '}\r\n          <code>{'position : top-start | top-end | bottom-start | bottom-end '}</code>{' '}\r\n        </CardText>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={handleTopStart} outline>\r\n            Top Start\r\n          </Button>\r\n\r\n          <Button color='primary' onClick={handleTopEnd} outline>\r\n            Top End\r\n          </Button>\r\n\r\n          <Button color='primary' onClick={handleBottomStart} outline>\r\n            Bottom Start\r\n          </Button>\r\n\r\n          <Button color='primary' onClick={handleBottomEnd} outline>\r\n            Bottom End\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertPositions\r\n","// ** Third Party Components\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst AnimatedSweetAlert = () => {\r\n  const handleBounceIn = () => {\r\n    return MySwal.fire({\r\n      title: 'Bounce In Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__bounceIn'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleFadeIn = () => {\r\n    return MySwal.fire({\r\n      title: 'Fade In Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__fadeIn'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleFlipIn = () => {\r\n    return MySwal.fire({\r\n      title: 'Flip In Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__flipInX'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleTada = () => {\r\n    return MySwal.fire({\r\n      title: 'Tada Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__tada'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  const handleShake = () => {\r\n    return MySwal.fire({\r\n      title: 'Shake Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary'\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__shakeX'\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Animations</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className='mb-0'>\r\n          Use <code>popup</code> inside <code>showClass</code> parameter to add animation to your alert.\r\n        </CardText>\r\n        <div className='demo-inline-spacing'>\r\n          <Button color='primary' onClick={handleBounceIn} outline>\r\n            Bounce In\r\n          </Button>\r\n          <Button color='primary' onClick={handleFadeIn} outline>\r\n            Fade In\r\n          </Button>\r\n          <Button color='primary' onClick={handleFlipIn} outline>\r\n            Flip In\r\n          </Button>\r\n          <Button color='primary' onClick={handleTada} outline>\r\n            Tada\r\n          </Button>\r\n          <Button color='primary' onClick={handleShake} outline>\r\n            Shake\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AnimatedSweetAlert\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Demo Components\r\nimport SweetAlertTypes from './SweetAlertTypes'\r\nimport SweetAlertBasic from './SweetAlertBasic'\r\nimport SweetAlertOptions from './SweetAlertOptions'\r\nimport SweetAlertCallback from './SweetAlertCallback'\r\nimport SweetAlertPositions from './SweetAlertPositions'\r\nimport SweetAlertAnimations from './SweetAlertAnimations'\r\n\r\n// ** Styles\r\nimport 'animate.css/animate.css'\r\nimport '@styles/base/plugins/extensions/ext-component-sweet-alerts.scss'\r\n\r\nconst SweetAlert = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='Sweet Alerts2'\r\n        subTitle='A React implementation of SweetAlert2'\r\n        link='https://github.com/sweetalert2/sweetalert2-react-content'\r\n      />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <SweetAlertBasic />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <SweetAlertPositions />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <SweetAlertAnimations />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <SweetAlertTypes />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <SweetAlertOptions />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <SweetAlertCallback />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SweetAlert\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ms-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  link: Proptypes.string,\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}