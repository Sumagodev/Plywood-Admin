{"version":3,"sources":["views/location/State/list/columns.js","views/location/State/list/AddModal.js","views/location/State/list/Table.js","views/location/State/list/index.js"],"names":["statusObj","pending","active","inactive","columns","name","sortable","sortField","width","cell","row","countryObj","selector","status","className","color","pill","onClick","e","preventDefault","store","dispatch","getStateById","_id","size","deleteState","AddModal","open","toggleSidebar","useSelector","state","states","countries","setname","useState","countryId","setcountryId","setstatus","isUpdated","setisUpdated","updateObj","setupdateObj","countryArr","setcountryArr","useDispatch","useEffect","getAllCountry","length","map","el","value","label","onSubmit","toastError","updateState","id","addState","selectedState","country","isOpen","onClosed","toggle","for","onChange","target","classNamePrefix","defaultValue","options","val","type","checked","UsersList","sort","setSort","brand","searchTerm","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","currentStatus","setCurrentStatus","number","rolesOptions","setrolesOptions","seletectedCountryToFilterWith","setSeletectedCountryToFilterWith","getState","q","perPage","page","role","xl","htmlFor","parseInt","currentTarget","style","isClearable","data","console","log","handleFilter","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","slice","dataToRender","StateList","Table"],"mappings":"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","file":"static/js/170.6436e4cf.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\nimport { getState, deleteState, getStateById } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Name',\r\n    sortable: true,\r\n    sortField: 'name',\r\n    width:\"25%\",\r\n    cell: row => row.name\r\n  },\r\n  {\r\n    name: 'Country',\r\n    sortable: true,\r\n    sortField: 'country',\r\n    width:\"25%\",\r\n    cell: row => row?.countryObj?.name\r\n  },\r\n  {\r\n    name: 'Status',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status === true ? 'active' : 'inactive']} pill>\r\n       {row.status === true ? 'Active' : 'Inactive'}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    cell: row => (\r\n      <>\r\n      <Button color='primary'  className='btn-sm' onClick={e => { \r\n              e.preventDefault() \r\n              store.dispatch(getStateById(row._id))\r\n              }}>     <Edit size={14} /></Button>\r\n      <Button color='danger' className='mx-2 btn-sm'  \r\n                    onClick={e => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteState(row._id))\r\n              }}\r\n      >    <Trash2 size={14}  /></Button>\r\n      </>\r\n      // <div className='column-action'>\r\n      //   <UncontrolledDropdown>\r\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\r\n      //       <MoreVertical size={14} className='cursor-pointer' />\r\n      //     </DropdownToggle>\r\n      //     <DropdownMenu>\r\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \r\n      //         e.preventDefault() \r\n      //         store.dispatch(getStateById(row._id))\r\n      //         }}\r\n      //         >\r\n      //         <Archive size={14} className='me-50' />\r\n      //         <span className='align-middle'>Edit</span>\r\n      //       </DropdownItem>\r\n      //       <DropdownItem\r\n      //         tag='a'\r\n      //         href='/'\r\n      //         className='w-100'\r\n      //         onClick={e => {\r\n      //           e.preventDefault()\r\n      //           store.dispatch(deleteState(row._id))\r\n      //         }}\r\n      //       >\r\n      //         <Trash2 size={14} className='me-50' />\r\n      //         <span className='align-middle'>Delete</span>\r\n      //       </DropdownItem>\r\n      //     </DropdownMenu>\r\n      //   </UncontrolledDropdown>\r\n      // </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Import\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\n\r\n// ** Utils\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Form, Input, Label, Modal, ModalBody, ModalHeader } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toastError } from '../../../../utility/toastutill'\r\nimport { getAllCountry } from '../../Country/store'\r\nimport { addState, updateState } from '../store'\r\n\r\nconst AddModal = ({ open, toggleSidebar }) => {\r\n    // ** States\r\n    const store = useSelector(state => state.states)\r\n    const countries = useSelector(state => state.countries)\r\n\r\n    const [name, setname] = useState(\"\")\r\n    const [countryId, setcountryId] = useState()\r\n    const [status, setstatus] = useState(true)\r\n    const [isUpdated, setisUpdated] = useState(false)\r\n    const [updateObj, setupdateObj] = useState({})\r\n    const [countryArr, setcountryArr] = useState([])\r\n    // ** Store Vars\r\n    const dispatch = useDispatch()\r\n    const checkIsValid = () => {\r\n\r\n        if (`${name}` === '') {\r\n            toastError(\"Please Fill name\")\r\n            return false\r\n        }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountry())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (countries.countries) {\r\n            setcountryArr(countries?.countries && countries?.countries.length > 0 && countries?.countries?.map(el => ({ value: el._id, label: el.name })))\r\n        }\r\n    }, [countries.countries])\r\n    // ** Function to handle form submit\r\n    const onSubmit = () => {\r\n        if (checkIsValid()) {\r\n            toggleSidebar()\r\n            if (isUpdated === true) {\r\n                dispatch(\r\n                    updateState({\r\n                        name,\r\n                        status,\r\n                        countryId: countryId.value,\r\n                        id: updateObj._id\r\n                    })\r\n                )\r\n            } else {\r\n                dispatch(\r\n                    addState({\r\n                        name,\r\n                        status,\r\n                        countryId: countryId.value\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSidebarClosed = () => {\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.selectedState !== null) {\r\n            const country = store.selectedState\r\n            setupdateObj(country)\r\n            setisUpdated(true)\r\n            setname(country.name)\r\n            setcountryId({ label: country?.countryObj?.name, value: country.countryId })\r\n            setstatus(country.status)\r\n        } else {\r\n            setupdateObj({})\r\n            setisUpdated(false)\r\n            setname(\"\")\r\n            setcountryId(\"\")\r\n        }\r\n    }, [store.selectedState])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={handleSidebarClosed}\r\n                toggle={toggleSidebar}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>{isUpdated ? \"Update\" : \"Add\"}  State</h2>\r\n                    </div>\r\n\r\n                    <Form className=\"row\">\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label' for='fullName'>\r\n                                Name <span className='text-danger'>*</span>\r\n                            </Label>\r\n                            <Input className='form-control' value={name} onChange={(e) => setname(e.target.value)} />\r\n                        </div>\r\n                        <div className='mb-1 col-md-6'>\r\n                            <Label className='form-label'>\r\n                                Country\r\n                            </Label>\r\n                            <Select\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                defaultValue={countryId}\r\n                                options={countryArr}\r\n                                onChange={(val) => setcountryId(val)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=' mb-1 col-md-12'>\r\n                            <Label className='form-label' for='phone'>\r\n                                Status <span className='text-danger'>*</span>\r\n                            </Label>\r\n                            <div className='demo-inline-spacing'>\r\n                                <div className='form-check'>\r\n                                    <Input type='radio' id='ex1-active' name='ex1' checked={status === true} onChange={() => setstatus(true)} />\r\n                                    <Label className='form-check-label' for='ex1-active'>\r\n                                        Active\r\n                                    </Label>\r\n                                </div>\r\n                                <div className='form-check'>\r\n                                    <Input type='radio' name='ex1' id='ex1-inactive' checked={status === false} onChange={() => setstatus(false)} />\r\n                                    <Label className='form-check-label' for='ex1-inactive'>\r\n                                        InActive\r\n                                    </Label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className='mb-1 col-md-12'>\r\n                            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n        // <Sidebar\r\n        //   size='lg'\r\n        //   open={open}\r\n        //   title='New User'\r\n        //   headerClassName='mb-1'\r\n        //   contentClassName='pt-0'\r\n        //   toggleSidebar={toggleSidebar}\r\n        //   onClosed={handleSidebarClosed}\r\n        // >\r\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='fullName'>\r\n        //         Full Name <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='fullName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='lastName'>\r\n        //         lastName <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='lastName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='userEmail'>\r\n        //         Email <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='email'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input\r\n        //             type='email'\r\n        //             id='userEmail'\r\n        //             placeholder='john.doe@example.com'\r\n        //             invalid={errors.email && true}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        //     </div>\r\n\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='phone'>\r\n        //         phone <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='phone'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='company'>\r\n        //         Company <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='company'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='country'>\r\n        //         Country <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='country'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\r\n        //           <Select\r\n        //             isClearable={false}\r\n        //             classNamePrefix='select'\r\n        //             options={countryOptions}\r\n        //             theme={selectThemeColors}\r\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='user-role'>\r\n        //         User Role\r\n        //       </Label>\r\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n        //         <option value='subscriber'>Subscriber</option>\r\n        //         <option value='editor'>Editor</option>\r\n        //         <option value='maintainer'>Maintainer</option>\r\n        //         <option value='author'>Author</option>\r\n        //         <option value='admin'>Admin</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\r\n        //       <Label className='form-label' for='select-plan'>\r\n        //         Select Plan\r\n        //       </Label>\r\n        //       <Input type='select' id='select-plan' name='select-plan'>\r\n        //         <option value='basic'>Basic</option>\r\n        //         <option value='enterprise'>Enterprise</option>\r\n        //         <option value='company'>Company</option>\r\n        //         <option value='team'>Team</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <Button type='submit' className='me-1' color='primary'>\r\n        //       Submit\r\n        //     </Button>\r\n        //     <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n        //       Cancel\r\n        //     </Button>\r\n        //   </Form>\r\n        // </Sidebar>\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllState, getState } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\nimport AddModal from './AddModal'\r\nimport { getAllCountry } from '../../Country/store'\r\n\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const states = useSelector(state => state.states)\r\n  const brand = useSelector(state => state.states.brand)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [seletectedCountryToFilterWith, setSeletectedCountryToFilterWith] = useState(\"\")\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n  const countries = useSelector(state => state.countries)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getState({\r\n      sort,\r\n      sortColumn,\r\n      q: searchTerm,\r\n      perPage: rowsPerPage,\r\n      page: currentPage,\r\n      role: currentRole.value,\r\n      status: currentStatus.value,\r\n      countryId: seletectedCountryToFilterWith?.value\r\n    }))\r\n\r\n    dispatch(getAllCountry())\r\n\r\n  }, [])\r\n  useEffect(() => {\r\n    // dispatch(\r\n    //   getState({\r\n    //     sort,\r\n    //     sortColumn,\r\n    //     q: searchTerm,\r\n    //     page: currentPage,\r\n    //     perPage: rowsPerPage,\r\n    //     role: currentRole.value,\r\n    //     status: currentStatus.value\r\n    //     // currentPlan: currentPlan.value\r\n    //   })\r\n    // )\r\n    // ** Set Roles\r\n\r\n  }, [dispatch, sort, sortColumn, currentPage, seletectedCountryToFilterWith?.value])\r\n\r\n  // ** User filter options\r\n  // const roleOptions = [\r\n  //   { value: '', label: 'Select Role' },\r\n  //   { value: 'admin', label: 'Admin' },\r\n  //   { value: 'author', label: 'Author' },\r\n  //   { value: 'editor', label: 'Editor' },\r\n  //   { value: 'maintainer', label: 'Maintainer' },\r\n  //   { value: 'subscriber', label: 'Subscriber' }\r\n  // ]\r\n\r\n  // const planOptions = [\r\n  //   { value: '', label: 'Select Plan' },\r\n  //   { value: 'basic', label: 'Basic' },\r\n  //   { value: 'company', label: 'Company' },\r\n  //   { value: 'enterprise', label: 'Enterprise' },\r\n  //   { value: 'team', label: 'Team' }\r\n  // ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'active', label: 'Active', number: true },\r\n    { value: 'inactive', label: 'Inactive', number: false }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getState({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        countryId: seletectedCountryToFilterWith?.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n\r\n    dispatch(\r\n      getState({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        countryId: seletectedCountryToFilterWith?.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getState({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        countryId: seletectedCountryToFilterWith?.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(states.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    console.log(states, \"statesdsdds\")\r\n    if (states.states && states.states.length > 0) {\r\n      return states?.states\r\n    } else if (!states || (states?.states && states?.states?.length === 0 && isFiltered)) {\r\n      return []\r\n    } else {\r\n      return states?.states?.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getState({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        countryId: seletectedCountryToFilterWith.value\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (states.selectedState !== null) {\r\n      toggleSidebar()\r\n    }\r\n\r\n  }, [states.selectedState])\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4'>\r\n          <Row>\r\n            <Col xl='2' className='d-flex align-items-center p-0'>\r\n              <div className='d-flex align-items-center w-100'>\r\n                <label htmlFor='rows-per-page'>Show</label>\r\n                <Input\r\n                  className='mx-50'\r\n                  type='select'\r\n                  id='rows-per-page'\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: '5rem' }}\r\n                >\r\n                  <option value='10'>10</option>\r\n                  <option value='25'>25</option>\r\n                  <option value='50'>50</option>\r\n                  <option value='100'>100</option>\r\n                  <option value='500'>500</option>\r\n                </Input>\r\n                <label htmlFor='rows-per-page'>Entries</label>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              xl='4'\r\n            >\r\n              <Select\r\n                isClearable={false}\r\n                value={seletectedCountryToFilterWith}\r\n                options={countries.countries.map(el => ({ label: el.name, value: el._id }))}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                // theme={selectThemeColors}\r\n                onChange={data => {\r\n                  console.log(\"data\", data)\r\n                  setSeletectedCountryToFilterWith(data)\r\n                  dispatch(\r\n                    getState({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value,\r\n                      countryId: data.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col\r\n              xl='6'\r\n              className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n            >\r\n              <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                <label className='mb-0' htmlFor='search-invoice'>\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id='search-invoice'\r\n                  className='ms-50 w-100'\r\n                  type='text'\r\n                  value={searchTerm}\r\n                  onChange={e => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className='d-flex align-items-center table-header-actions'>\r\n                <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                  Add New\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst StateList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      {/* <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row> */}\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StateList\r\n"],"sourceRoot":""}