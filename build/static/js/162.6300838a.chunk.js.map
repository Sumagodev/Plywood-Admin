{"version":3,"sources":["views/extensions/react-player/MediaPlayerVideo.js","views/extensions/react-player/MediaPlayerAudio.js","views/extensions/react-player/MediaPlayerControlled.js","views/extensions/react-player/index.js","@core/components/extensions-header/index.js"],"names":["MediaPlayerVideo","tag","width","controls","className","url","pad","string","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","MediaPlayerAudio","audioRef","useRef","urlLink","setUrl","useState","played","setPlayed","loaded","setLoaded","muted","setMuted","volume","setVolume","duration","setDuration","seeking","setSeeking","playing","setPlaying","useEffect","Prism","highlightAll","load","Duration","dateTime","Math","round","preDuration","preElapsed","preRemaining","xs","ref","height","onPlay","onPause","onSeek","e","console","log","onProgress","state","onDuration","borderless","variant","outline","onClick","type","min","max","step","value","onMouseDown","onChange","parseFloat","target","onMouseUp","current","seekTo","id","checked","toFixed","props","MediaPlayerControlledVideo","videoRef","loop","setLoop","setControls","playbackRate","setPlaybackRate","handlePlaybackRate","onEnded","config","youtube","embedOptions","color","screenfull","request","findDOMNode","active","ReactPlayer","title","subTitle","link","sm","MediaPlayerControlled","ExtensionsHeader","href","rel"],"mappings":"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","file":"static/js/162.6300838a.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\n\n// ** Third Party Components\nimport ReactPlayer from 'react-player'\n\nconst MediaPlayerVideo = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <ReactPlayer\n          width='100%'\n          controls={true}\n          className='react-player-video'\n          url='http://youtube.com/watch?v=FCPdIvXo2rU'\n        />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerVideo\n","// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, Input } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\nimport ReactPlayer from 'react-player'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerAudio = () => {\n  // ** Ref\n  const audioRef = useRef(null)\n\n  // ** Vars\n  const urlLink = 'https://soundcloud.com/2ghost/we-will-rock-you'\n\n  // ** States\n  const [url, setUrl] = useState(urlLink)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [muted, setMuted] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [duration, setDuration] = useState(0)\n  const [seeking, setSeeking] = useState(null)\n  const [playing, setPlaying] = useState(false)\n\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    audioRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleDuration = duration => setDuration(duration)\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card className='overflow-hidden'>\n      <CardHeader>\n        <CardTitle tag='h4'>Audio</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={audioRef}\n              url={url}\n              className='react-player-audio'\n              width='500px'\n              height='290px'\n              playing={playing}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onSeek={e => console.log('onSeek', e)}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n            />\n          </Col>\n          <Col xs={12}>\n            <Table borderless className='mt-2'>\n              <tbody>\n                <tr>\n                  <td className='text-end'>Controls</td>\n                  <td>\n                    <Button variant='primary' outline onClick={handleStop} className='my-25 me-50'>\n                      Stop\n                    </Button>\n                    <Button variant='primary' outline onClick={handlePlayPause} className='my-25'>\n                      {playing ? 'Pause' : 'Play'}\n                    </Button>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Seek</td>\n                  <td>\n                    <input\n                      type='range'\n                      min={0}\n                      max={0.999999}\n                      step='any'\n                      value={played}\n                      onMouseDown={handleSeekMouseDown}\n                      onChange={handleSeekChange}\n                      onMouseUp={handleSeekMouseUp}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Volume</td>\n                  <td>\n                    <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Muted</td>\n                  <td>\n                    <div className='form-check'>\n                      <Input type='checkbox' id='audioMuted' checked={muted} onChange={handleToggleMuted} />\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Played</td>\n                  <td>\n                    <Progress value={played} max={1} />\n                  </td>\n                </tr>\n                <tr>\n                  <td className='text-end'>Loaded</td>\n                  <td>\n                    <Progress value={loaded} max={1} />\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n          </Col>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerAudio\n","// ** React Imports\nimport { findDOMNode } from 'react-dom'\nimport { useState, useEffect, useRef } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardHeader, CardBody, Row, Col, Table, Button, Progress, Input } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\nimport screenfull from 'screenfull'\nimport ReactPlayer from 'react-player'\n\nconst pad = string => {\n  return `0${string}`.slice(-2)\n}\nconst format = seconds => {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nconst MediaPlayerControlledVideo = () => {\n  // ** Ref\n  const videoRef = useRef(null)\n\n  // ** Vars\n  const urlLink = 'http://youtube.com/watch?v=FCPdIvXo2rU'\n\n  // ** States\n  const [url, setUrl] = useState(urlLink)\n  const [played, setPlayed] = useState(0)\n  const [loaded, setLoaded] = useState(0)\n  const [loop, setLoop] = useState(false)\n  const [muted, setMuted] = useState(false)\n  const [volume, setVolume] = useState(0.75)\n  const [duration, setDuration] = useState(0)\n  const [seeking, setSeeking] = useState(null)\n  const [playing, setPlaying] = useState(false)\n  const [controls, setControls] = useState(false)\n  const [playbackRate, setPlaybackRate] = useState(1.0)\n\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n\n  const load = url => {\n    setUrl(url)\n    setPlayed(0)\n    setLoaded(0)\n  }\n  const handlePlayPause = () => setPlaying(!playing)\n  const handleStop = () => {\n    setPlaying(false)\n    setUrl(null)\n  }\n  const handleToggleControls = () => {\n    setControls(!controls)\n    setUrl(null)\n  }\n  useEffect(() => {\n    if (url === null) {\n      load(urlLink)\n    }\n  })\n  const handleToggleLoop = () => setLoop(!loop)\n  const handleVolumeChange = e => setVolume(parseFloat(e.target.value))\n  const handleToggleMuted = () => setMuted(!muted)\n  const handlePlaybackRate = e => setPlaybackRate(parseFloat(e.target.value))\n  const handlePlay = () => setPlaying(true)\n  const handlePause = () => setPlaying(false)\n  const handleSeekMouseDown = () => setSeeking(true)\n  const handleSeekChange = e => {\n    setPlayed(parseFloat(e.target.value))\n  }\n  const handleSeekMouseUp = e => {\n    setSeeking(false)\n    videoRef.current.seekTo(parseFloat(e.target.value))\n  }\n  const handleProgress = state => {\n    if (!seeking) {\n      setPlayed(state.played)\n      setLoaded(state.loaded)\n    }\n  }\n  const handleEnded = () => setPlaying(loop)\n  const handleDuration = duration => setDuration(duration)\n  const handleFullscreen = () => {\n    screenfull.request(findDOMNode(videoRef.current))\n  }\n\n  // for duration, elapsed and remaining time\n  const Duration = ({ className, seconds }) => {\n    return (\n      <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n        {format(seconds)}\n      </time>\n    )\n  }\n  const preDuration = <Duration seconds={duration}></Duration>\n  const preElapsed = <Duration seconds={duration * played}></Duration>\n  const preRemaining = <Duration seconds={duration * (1 - played)}></Duration>\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Controlled Video</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <ReactPlayer\n              ref={videoRef}\n              url={url}\n              className='react-player-video'\n              width='100%'\n              playing={playing}\n              controls={controls}\n              loop={loop}\n              playbackRate={playbackRate}\n              volume={volume}\n              muted={muted}\n              onPlay={handlePlay}\n              onPause={handlePause}\n              onEnded={handleEnded}\n              onProgress={handleProgress}\n              onDuration={handleDuration}\n              config={{\n                youtube: {\n                  embedOptions: {\n                    'allow-same-origin': true\n                  }\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n      <Table borderless>\n        <tbody>\n          <tr>\n            <td className='text-end'>Controls</td>\n            <td>\n              <Button color='primary' outline onClick={handleStop} className='my-25 me-50'>\n                Stop\n              </Button>\n              <Button color='primary' outline onClick={handlePlayPause} className='my-25 me-50'>\n                {playing ? 'Pause' : 'Play'}\n              </Button>\n              <Button color='primary' outline onClick={handleFullscreen} className='my-25'>\n                Fullscreen\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Speed</td>\n            <td>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1}\n                className='my-25 me-50'\n                active={playbackRate === 1}\n              >\n                1x\n              </Button>\n              <Button\n                color='primary'\n                outline\n                onClick={handlePlaybackRate}\n                value={1.5}\n                className='my-25 me-50'\n                active={playbackRate === 1.5}\n              >\n                1.5x\n              </Button>\n              <Button color='primary' outline onClick={handlePlaybackRate} value={2} active={playbackRate === 2}>\n                2x\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Seek</td>\n            <td>\n              <input\n                type='range'\n                min={0}\n                max={0.999999}\n                step='any'\n                value={played}\n                onMouseDown={handleSeekMouseDown}\n                onChange={handleSeekChange}\n                onMouseUp={handleSeekMouseUp}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Volume</td>\n            <td>\n              <input type='range' min={0} max={1} step='any' value={volume} onChange={handleVolumeChange} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Controls</td>\n            <td>\n              <div className='form-check'>\n                <Input type='checkbox' id='videoControls' checked={controls} onChange={handleToggleControls} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Muted</td>\n            <td>\n              <div className='form-check'>\n                <Input type='checkbox' id='videoMuted' checked={muted} onChange={handleToggleMuted} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Loop</td>\n            <td>\n              <div className='form-check'>\n                <Input type='checkbox' id='videoLoop' checked={loop} onChange={handleToggleLoop} />\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Played</td>\n            <td>\n              <Progress value={played} max={1} />\n            </td>\n          </tr>\n          <tr>\n            <td className='text-end'>Loaded</td>\n            <td>\n              <Progress value={loaded} max={1} />\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <CardBody>\n        <Row>\n          <Col xs={12}>\n            <pre className='language-js'>\n              <code className='language-js'>\n                {`state={\n  playing: ${playing},\n  volume: ${volume.toFixed(2)},\n  played: ${played.toFixed(2)},\n  loaded: ${loaded.toFixed(2)},\n  duration: ${format(preDuration.props.seconds)},\n  elapsed: ${format(preElapsed.props.seconds)},\n  remaining: ${format(preRemaining.props.seconds)}\n}\n`}\n              </code>\n            </pre>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MediaPlayerControlledVideo\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport MediaPlayerVideo from './MediaPlayerVideo'\nimport MediaPlayerAudio from './MediaPlayerAudio'\nimport MediaPlayerControlled from './MediaPlayerControlled'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\nconst ReactPlayer = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='React Player'\n        subTitle='React Media Player'\n        link='https://github.com/CookPete/react-player'\n      />\n      <Row>\n        <Col sm='12'>\n          <MediaPlayerVideo />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerControlled />\n        </Col>\n        <Col sm='12'>\n          <MediaPlayerAudio />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ReactPlayer\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}