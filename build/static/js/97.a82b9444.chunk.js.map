{"version":3,"sources":["views/pages/authentication/LoginCover.js","@core/components/input-password-toggle/index.js"],"names":["LoginCover","skin","useSkin","illustration","source","require","default","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","onSubmit","for","type","placeholder","autoFocus","color","block","size","InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","useState","classnames","renderIcon","defaultProps"],"mappings":"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","file":"static/js/97.a82b9444.chunk.js","sourcesContent":["import { useSkin } from '@hooks/useSkin'\nimport { Link } from 'react-router-dom'\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { Row, Col, CardTitle, CardText, Form, Label, Input, Button } from 'reactstrap'\nimport '@styles/react/pages/page-authentication.scss'\n\nconst LoginCover = () => {\n  const { skin } = useSkin()\n\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='fw-bold mb-1'>\n              Welcome to Vuexy! ðŸ‘‹\n            </CardTitle>\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n            <Form className='auth-login-form mt-2' onSubmit={e => e.preventDefault()}>\n              <div className='mb-1'>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input type='email' id='login-email' placeholder='john@example.com' autoFocus />\n              </div>\n              <div className='mb-1'>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/pages/forgot-password-cover'>\n                    <small>Forgot Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle className='input-group-merge' id='login-password' />\n              </div>\n              <div className='form-check mb-1'>\n                <Input type='checkbox' id='remember-me' />\n                <Label className='form-check-label' for='remember-me'>\n                  Remember Me\n                </Label>\n              </div>\n              <Button color='primary' block>\n                Sign in\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>New on our platform?</span>\n              <Link to='/pages/register-cover'>\n                <span>Create an account</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button color='facebook'>\n                <Facebook size={14} />\n              </Button>\n              <Button color='twitter'>\n                <Twitter size={14} />\n              </Button>\n              <Button color='google'>\n                <Mail size={14} />\n              </Button>\n              <Button className='me-0' color='github'>\n                <GitHub size={14} />\n              </Button>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default LoginCover\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}