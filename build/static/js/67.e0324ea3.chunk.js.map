{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBase.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBase","data","setData","useState","searchTerm","setSearchTerm","useEffect","axios","get","then","res","Content","item","className","md","sm","to","category","src","img","alt","top","title","desc","id","map","titleCondition","toLowerCase","includes","descCondition","length","BreadCrumbs","props","tag","index","Wrapper","link","Link","Fragment","isLastItem","active","classnames","color","size","end","FaqFilter","handleFilter","style","backgroundImage","require","default","onSubmit","e","preventDefault","value","onChange","target","placeholder"],"mappings":"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","file":"static/js/67.e0324ea3.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\n\r\n// ** Custom Components\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, CardImg } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/page-knowledge-base.scss'\r\n\r\nconst KnowledgeBase = () => {\r\n  // ** States\r\n  const [data, setData] = useState(null),\r\n    [searchTerm, setSearchTerm] = useState('')\r\n\r\n  useEffect(() => {\r\n    axios.get('/faq/data/knowledge_base').then(res => setData(res.data))\r\n  }, [])\r\n\r\n  const Content = ({ item }) => (\r\n    <Col className='kb-search-content' key={item.id} md='4' sm='6'>\r\n      <Card>\r\n        <Link to={`/pages/knowledge-base/${item.category}`}>\r\n          <CardImg src={item.img} alt='knowledge-base-image' top />\r\n          <CardBody className='text-center'>\r\n            <h4>{item.title}</h4>\r\n            <p className='text-body mt-1 mb-0'>{item.desc}</p>\r\n          </CardBody>\r\n        </Link>\r\n      </Card>\r\n    </Col>\r\n  )\r\n\r\n  const renderContent = () => {\r\n    return data.map(item => {\r\n      const titleCondition = item.title.toLowerCase().includes(searchTerm.toLowerCase()),\r\n        descCondition = item.desc.toLowerCase().includes(searchTerm.toLowerCase())\r\n\r\n      if (searchTerm.length < 1) {\r\n        return <Content key={item.id} item={item} />\r\n      } else if (titleCondition || descCondition) {\r\n        return <Content key={item.id} item={item} />\r\n      } else {\r\n        return null\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title='Knowledge Base' data={[{ title: 'Pages' }, { title: 'Knowledge Base' }]} />\r\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n      {data !== null ? (\r\n        <div id='knowledge-base-content'>\r\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\r\n        </div>\r\n      ) : null}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KnowledgeBase\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\r\nimport { Search } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\r\n  const onChange = e => {\r\n    if (handleFilter) {\r\n      handleFilter(e)\r\n    } else {\r\n      setSearchTerm(e.target.value)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='knowledge-base-search'>\r\n      <Card\r\n        className='knowledge-base-bg'\r\n        style={{\r\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\r\n        }}\r\n      >\r\n        <CardBody className='text-center'>\r\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\r\n          <CardText className='mb-2'>\r\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\r\n          </CardText>\r\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText>\r\n                <Search size={14} />\r\n              </InputGroupText>\r\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\r\n            </InputGroup>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaqFilter\r\n"],"sourceRoot":""}