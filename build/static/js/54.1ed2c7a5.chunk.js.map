{"version":3,"sources":["views/apps/kanban/TaskSidebar.js","views/apps/kanban/KanbanTasks.js","views/apps/kanban/KanbanBoards.js","views/apps/kanban/index.js","@core/components/avatar-group/index.js"],"names":["assigneeOptions","value","label","img","img1","img2","img3","img4","img5","img6","labelOptions","TaskSidebar","props","sidebarOpen","labelColors","selectedTask","handleTaskSidebarToggle","desc","setDesc","useState","files","setFiles","labels","setLabels","dueDate","setDueDate","Date","assignedTo","setAssignedTo","dispatch","useDispatch","getRootProps","getInputProps","useDropzone","multiple","onDrop","acceptedFiles","map","file","Object","assign","control","setError","setValue","clearErrors","handleSubmit","formState","errors","useForm","defaultValues","title","isOpen","className","contentClassName","onOpened","isObjEmpty","description","coverImage","length","arr","assignee","push","labelsArr","onClosed","handleSelectTask","toggle","modalClassName","id","onSubmit","data","assignedArr","item","updateTask","URL","createObjectURL","size","onClick","options","wheelPropagation","for","name","render","field","placeholder","invalid","dateFormat","onChange","date","isMulti","isClearable","classNamePrefix","theme","selectThemeColors","components","Option","color","src","height","width","alt","type","rows","e","target","outline","store","KanbanTasks","task","boardId","index","isLastChip","pill","classnames","attachments","comments","taskTitle","KanbanBoard","board","setTitle","showAddTask","setShowAddTask","reset","useEffect","handleAddTaskReset","handleAddTaskFormSubmit","addTask","end","href","preventDefault","clearTasks","deleteBoard","list","tasks","group","setList","ev","from","classList","to","reorderTasks","taskId","dataset","targetTaskId","originalEvent","onAdd","updateTaskBoard","newBoardId","replace","rules","required","autoFocus","boardTitle","App","UX","Images","Forms","setSidebarOpen","showAddBoard","setShowAddBoard","useSelector","state","kanban","handleAddBoardReset","handleAddBoardFormSubmit","addBoard","toLowerCase","fetchBoards","fetchTasks","boards","isLastBoard","KanbanBoards","style","minWidth","Boolean","AvatarGroup","tag","Tag","i","ItemTag","placement","split","join","meta","undefined"],"mappings":"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","file":"static/js/54.1ed2c7a5.chunk.js","sourcesContent":["// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, Modal, ModalBody, Button, Form, Input, Label, FormFeedback } from 'reactstrap'\r\n\r\n// ** Redux Imports\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { X, DownloadCloud } from 'react-feather'\r\nimport Select, { components } from 'react-select' //eslint-disable-line\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Actions\r\nimport { updateTask, handleSelectTask } from './store'\r\n\r\n// ** Utils\r\nimport { isObjEmpty, selectThemeColors } from '@utils'\r\n\r\n// ** Assignee Avatars\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\n// ** Styles Imports\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\r\n\r\n// ** Assignee Select Options\r\nconst assigneeOptions = [\r\n  { value: 'Pheobe Buffay', label: 'Pheobe Buffay', img: img1 },\r\n  { value: 'Chandler Bing', label: 'Chandler Bing', img: img2 },\r\n  { value: 'Ross Geller', label: 'Ross Geller', img: img3 },\r\n  { value: 'Monica Geller', label: 'Monica Geller', img: img4 },\r\n  { value: 'Joey Tribbiani', label: 'Joey Tribbiani', img: img5 },\r\n  { value: 'Rachel Green', label: 'Rachel Green', img: img6 },\r\n  { value: 'Jerry Seinfeld', label: 'Jerry Seinfeld', img: img3 },\r\n  { value: 'Jerry Seinfeld', label: 'Jerry Seinfeld', img: img3 },\r\n  { value: 'Astro Kramer', label: 'Astro Kramer', img: img2 },\r\n  { value: 'George Costanza', label: 'George Costanza', img: img5 },\r\n  { value: 'Charlie Kelly', label: 'Charlie Kelly', img: img4 },\r\n  { value: 'Dennis Reynolds', label: 'Dennis Reynolds', img: img3 }\r\n]\r\n\r\n// ** Label Select Options\r\nconst labelOptions = [\r\n  { value: 'UX', label: 'UX' },\r\n  { value: 'App', label: 'App' },\r\n  { value: 'Forms', label: 'Forms' },\r\n  { value: 'Images', label: 'Images' },\r\n  { value: 'Code Review', label: 'Code Review' },\r\n  { value: 'Charts & Maps', label: 'Charts & Maps' }\r\n]\r\n\r\nconst TaskSidebar = props => {\r\n  // ** Props\r\n  const { sidebarOpen, labelColors, selectedTask, handleTaskSidebarToggle } = props\r\n\r\n  // ** State\r\n  const [desc, setDesc] = useState('')\r\n  const [files, setFiles] = useState([])\r\n  const [labels, setLabels] = useState([])\r\n  const [dueDate, setDueDate] = useState(new Date())\r\n  const [assignedTo, setAssignedTo] = useState(null)\r\n\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop: acceptedFiles => {\r\n      setFiles([...acceptedFiles.map(file => Object.assign(file))])\r\n    }\r\n  })\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    clearErrors,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: { title: '' }\r\n  })\r\n\r\n  // ** Custom Select Components\r\n  const LabelOptions = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <Badge color={`light-${labelColors[data.label]}`}>{data.label}</Badge>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  const AssigneeComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex align-items-center'>\r\n          <img className='d-block rounded-circle me-50' src={data.img} height='26' width='26' alt={data.label} />\r\n          <p className='mb-0'>{data.label}</p>\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** Function to run when sidebar opens\r\n  const handleSidebarOpened = () => {\r\n    if (!isObjEmpty(selectedTask)) {\r\n      setValue('title', selectedTask.title)\r\n      setDueDate(selectedTask.dueDate)\r\n      setDesc(selectedTask.description)\r\n      if (selectedTask.coverImage) {\r\n        setFiles([selectedTask.coverImage])\r\n      }\r\n      if (selectedTask.assignedTo.length) {\r\n        const arr = []\r\n        selectedTask.assignedTo.map(assignee => {\r\n          arr.push({ value: assignee.title, label: assignee.title, img: assignee.img })\r\n        })\r\n        setAssignedTo(arr)\r\n      }\r\n      if (selectedTask.labels.length) {\r\n        const labelsArr = []\r\n        selectedTask.labels.map(label => {\r\n          labelsArr.push({ value: label, label })\r\n        })\r\n        setLabels(labelsArr)\r\n      }\r\n    }\r\n  }\r\n\r\n  // ** Function to run when sidebar closes\r\n  const handleSidebarClosed = () => {\r\n    setDesc('')\r\n    setFiles([])\r\n    setLabels([])\r\n    setValue('title', '')\r\n    setDueDate(new Date())\r\n    clearErrors()\r\n    dispatch(handleSelectTask({}))\r\n    setAssignedTo(null)\r\n  }\r\n\r\n  const onSubmit = data => {\r\n    if (data.title.length) {\r\n      const labelsArr = []\r\n      const assignedArr = []\r\n\r\n      if (assignedTo.length) {\r\n        assignedTo.map(item => {\r\n          assignedArr.push({ title: item.label, img: item.img })\r\n        })\r\n      }\r\n\r\n      if (labels.length) {\r\n        labels.map(label => {\r\n          labelsArr.push(label.label)\r\n        })\r\n      }\r\n\r\n      dispatch(\r\n        updateTask({\r\n          ...selectedTask,\r\n          ...data,\r\n          dueDate,\r\n          labels: labelsArr,\r\n          description: desc,\r\n          assignedTo: assignedArr,\r\n          // eslint-disable-next-line multiline-ternary\r\n          ...(files.length && typeof files[0] !== 'string'\r\n            ? // eslint-disable-next-line multiline-ternary\r\n              {\r\n                coverImage: URL.createObjectURL(files[0])\r\n              }\r\n            : {})\r\n        })\r\n      )\r\n      handleTaskSidebarToggle()\r\n    } else {\r\n      setError('title')\r\n    }\r\n  }\r\n\r\n  const renderUploadedImage = () => {\r\n    if (files.length && typeof files[0] !== 'string') {\r\n      // @ts-ignore\r\n      return files.map(file => (\r\n        <img key={file.name} alt={file.name} className='single-file-image img-fluid' src={URL.createObjectURL(file)} />\r\n      ))\r\n    } else {\r\n      if (typeof files[0] === 'string') {\r\n        return <img alt='task-img' className='single-file-image img-fluid' src={files[0]} />\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleResetFields = () => {\r\n    setDesc('')\r\n\r\n    setValue('title', store.selectedTask.title)\r\n    setDueDate(store.selectedTask.dueDate)\r\n    if (selectedTask.assignedTo.length) {\r\n      const arr = []\r\n      selectedTask.assignedTo.map(assignee => {\r\n        arr.push({ value: assignee.title, label: assignee.title, img: assignee.img })\r\n      })\r\n\r\n      setAssignedTo(arr)\r\n    }\r\n    if (selectedTask.labels.length) {\r\n      const labels = []\r\n      selectedTask.labels.map(label => {\r\n        labels.push({ value: label, label })\r\n      })\r\n      setLabels(labels)\r\n    }\r\n\r\n    if (selectedTask.coverImage) {\r\n      setFiles([selectedTask.coverImage])\r\n    } else {\r\n      setFiles([])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={sidebarOpen}\r\n      className='sidebar-lg'\r\n      contentClassName='p-0'\r\n      onOpened={handleSidebarOpened}\r\n      onClosed={handleSidebarClosed}\r\n      toggle={handleTaskSidebarToggle}\r\n      modalClassName='modal-slide-in sidebar-kanban-modal'\r\n    >\r\n      <Form id='form-modal-kanban' className='kanban-task-modal' onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='modal-header d-flex align-items-center justify-content-between mb-1'>\r\n          <h5 className='modal-title'>Update Task</h5>\r\n          <X className='fw-normal mt-25' size={16} onClick={handleTaskSidebarToggle} />\r\n        </div>\r\n        <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n          <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-title'>\r\n                Title <span className='text-danger'>*</span>\r\n              </Label>\r\n              <Controller\r\n                name='title'\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Input\r\n                    id='task-title'\r\n                    placeholder='Title'\r\n                    className='new-todo-item-title'\r\n                    invalid={errors.title && true}\r\n                    {...field}\r\n                  />\r\n                )}\r\n              />\r\n              {errors.title && <FormFeedback>Please enter a valid task title</FormFeedback>}\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='due-date'>\r\n                Due Date\r\n              </Label>\r\n              <Flatpickr\r\n                id='due-date'\r\n                name='due-date'\r\n                value={dueDate}\r\n                className='form-control'\r\n                options={{ dateFormat: 'Y-m-d' }}\r\n                onChange={date => setDueDate(date[0])}\r\n              />\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-labels'>\r\n                Labels\r\n              </Label>\r\n              <Select\r\n                isMulti\r\n                value={labels}\r\n                id='task-labels'\r\n                isClearable={false}\r\n                options={labelOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                components={{ Option: LabelOptions }}\r\n                onChange={data => {\r\n                  setLabels(data !== null ? [...data] : [])\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-assignee'>\r\n                Assignee\r\n              </Label>\r\n              <Select\r\n                isMulti\r\n                id='task-assignee'\r\n                value={assignedTo}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={assigneeOptions}\r\n                theme={selectThemeColors}\r\n                onChange={data => setAssignedTo(data)}\r\n                components={{ Option: AssigneeComponent }}\r\n              />\r\n            </div>\r\n            <div className='mb-1'>\r\n              <div {...getRootProps({ className: 'dropzone' })}>\r\n                <input {...getInputProps()} />\r\n                <div className='d-flex align-items-center justify-content-center flex-column text-center'>\r\n                  <DownloadCloud size={64} />\r\n                  <h5>Drop Files here or click to upload</h5>\r\n                </div>\r\n                {files.length ? renderUploadedImage() : null}\r\n              </div>\r\n            </div>\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='task-desc'>\r\n                Description\r\n              </Label>\r\n              <Input\r\n                type='textarea'\r\n                value={desc}\r\n                name='text'\r\n                id='task-desc'\r\n                rows='3'\r\n                placeholder='Description...'\r\n                onChange={e => setDesc(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button type='submit' color='primary' className='me-1'>\r\n                Update\r\n              </Button>\r\n              <Button outline color='secondary' onClick={handleResetFields}>\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          </ModalBody>\r\n        </PerfectScrollbar>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TaskSidebar\r\n","// ** Reactstrap Imports\r\nimport { Badge, Card, CardBody } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport AvatarGroup from '@components/avatar-group'\r\n\r\n// ** Third Party Imports\r\nimport classnames from 'classnames'\r\nimport { Paperclip, MessageSquare } from 'react-feather'\r\n\r\n// ** Redux Imports\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// ** Actions\r\nimport { handleSelectTask } from './store'\r\n\r\nconst KanbanTasks = props => {\r\n  // ** Props\r\n  const { task, labelColors, handleTaskSidebarToggle } = props\r\n\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n\r\n  const handleTaskClick = () => {\r\n    dispatch(handleSelectTask(task))\r\n    handleTaskSidebarToggle()\r\n  }\r\n\r\n  const renderLabels = () => {\r\n    if (task.labels.length) {\r\n      return (\r\n        <div className='mb-1'>\r\n          {task.labels.map((label, index) => {\r\n            const isLastChip = task.labels[task.labels.length - 1] === label\r\n\r\n            return (\r\n              <Badge\r\n                pill\r\n                key={index}\r\n                label={label}\r\n                color={`light-${labelColors[label]}`}\r\n                className={classnames({ 'me-75': !isLastChip })}\r\n              >\r\n                {label}\r\n              </Badge>\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const renderAttachmentsComments = () => {\r\n    if ((task.attachments && task.attachments.length) || (task.comments && task.comments.length)) {\r\n      return (\r\n        <div className='d-flex align-items-center'>\r\n          {task.attachments && task.attachments.length ? (\r\n            <div className='d-flex align-items-center cursor-pointer me-75'>\r\n              <Paperclip size={16} className='me-25' />\r\n              <span>{task.attachments.length}</span>\r\n            </div>\r\n          ) : null}\r\n          {task.comments && task.comments.length ? (\r\n            <div className='d-flex align-items-center cursor-pointer'>\r\n              <MessageSquare size={16} className='me-50' />\r\n              <span>{task.comments.length}</span>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const taskFooterClasses = () => {\r\n    if (task.comments && !task.comments.length && task.attachments && !task.attachments.length) {\r\n      return 'justify-content-end'\r\n    } else {\r\n      return 'justify-content-between'\r\n    }\r\n  }\r\n\r\n  const renderTaskFooter = () => {\r\n    return (task.attachments && task.attachments.length) ||\r\n      (task.comments && task.comments.length) ||\r\n      (task.assignedTo && task.assignedTo.length) ? (\r\n      <div className={`task-footer d-flex align-items-center mt-1 ${taskFooterClasses()}`}>\r\n        {renderAttachmentsComments()}\r\n        {task.assignedTo.length ? (\r\n          <div>{task.assignedTo.length ? <AvatarGroup data={task.assignedTo} /> : null}</div>\r\n        ) : null}\r\n      </div>\r\n    ) : null\r\n  }\r\n\r\n  return (\r\n    <Card onClick={handleTaskClick} className='task' data-board-id={task.boardId} data-task-id={task.id}>\r\n      <CardBody data-task-id={task.id}>\r\n        {renderLabels()}\r\n\r\n        {task.coverImage ? (\r\n          <img className='img-fluid rounded task-img mb-1' alt={task.title} src={task.coverImage} />\r\n        ) : null}\r\n\r\n        <span className='task-title'>{task.title}</span>\r\n\r\n        {renderTaskFooter()}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default KanbanTasks\r\n","// ** React Imports\r\nimport { useState, useEffect, Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Input, Button, FormText, DropdownMenu, DropdownItem, DropdownToggle, UncontrolledDropdown } from 'reactstrap'\r\n\r\n// ** Third Party Imports\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Plus, MoreVertical } from 'react-feather'\r\n\r\n// ** Redux Imports\r\nimport { useDispatch } from 'react-redux'\r\n\r\n// ** Actions\r\nimport { addTask, clearTasks, deleteBoard, reorderTasks, updateTaskBoard } from './store'\r\n\r\nimport KanbanTasks from './KanbanTasks'\r\n// ** Kanban Component\r\n\r\nconst defaultValues = {\r\n  taskTitle: ''\r\n}\r\n\r\nconst KanbanBoard = props => {\r\n  // ** Props\r\n  const { board, index, store, labelColors, handleTaskSidebarToggle } = props\r\n\r\n  // ** States\r\n  const [title, setTitle] = useState('')\r\n  const [showAddTask, setShowAddTask] = useState(null)\r\n\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const {\r\n    reset,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  useEffect(() => {\r\n    setTitle(board.title)\r\n  }, [board.title])\r\n\r\n  const handleAddTaskReset = () => {\r\n    reset()\r\n    setShowAddTask(null)\r\n  }\r\n\r\n  const handleOpenAddTask = () => {\r\n    reset()\r\n    setShowAddTask(board.id)\r\n  }\r\n\r\n  const handleClearTasks = () => {\r\n    dispatch(clearTasks(board.id))\r\n  }\r\n\r\n  const handleDeleteBoard = () => {\r\n    dispatch(deleteBoard(board.id))\r\n  }\r\n\r\n  const handleAddTaskFormSubmit = data => {\r\n    dispatch(addTask({ title: data.taskTitle, boardId: board.id }))\r\n    handleAddTaskReset()\r\n  }\r\n\r\n  const renderAddTaskForm = () => {\r\n    return board.id === showAddTask ? (\r\n      <form onSubmit={handleSubmit(handleAddTaskFormSubmit)}>\r\n        <div className='mb-1'>\r\n          <Controller\r\n            name='taskTitle'\r\n            control={control}\r\n            rules={{ required: true }}\r\n            render={({ field: { value, onChange } }) => (\r\n              <Input\r\n                autoFocus\r\n                rows='2'\r\n                value={value}\r\n                type='textarea'\r\n                id='task-title'\r\n                onChange={onChange}\r\n                placeholder='Add Content'\r\n                invalid={errors.taskTitle && true}\r\n                aria-describedby='validation-add-task'\r\n              />\r\n            )}\r\n          />\r\n          {errors.taskTitle && (\r\n            <FormText color='danger' id='validation-add-task'>\r\n              Please enter a valid Task Title\r\n            </FormText>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Button color='primary' size='sm' type='submit' className='me-75'>\r\n            Add\r\n          </Button>\r\n          <Button outline size='sm' color='secondary' onClick={handleAddTaskReset}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    ) : null\r\n  }\r\n\r\n  const sortTaskOnSameBoard = ev => {\r\n    if (ev.from.classList[1] === ev.to.classList[1]) {\r\n      dispatch(\r\n        reorderTasks({\r\n          taskId: ev.item.dataset.taskId,\r\n          targetTaskId: ev.originalEvent.target.dataset.taskId\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  const MoveTaskToAnotherBoard = ev => {\r\n    dispatch(\r\n      updateTaskBoard({\r\n        taskId: ev.item.dataset.taskId,\r\n        boardId: ev.item.dataset.boardId,\r\n        newBoardId: ev.to.classList[1].replace('board-', '')\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment key={index}>\r\n      <div className='board-wrapper'>\r\n        <div className='d-flex align-items-center justify-content-between'>\r\n          <div className='d-flex align-items-center board-header'>\r\n            <Input className='board-title' value={title} onChange={e => setTitle(e.target.value)} />\r\n          </div>\r\n          <UncontrolledDropdown className='more-options-dropdown'>\r\n            <DropdownToggle className='btn-icon' color='transparent' size='sm'>\r\n              <MoreVertical size={20} />\r\n            </DropdownToggle>\r\n            <DropdownMenu end>\r\n              <DropdownItem\r\n                href='/'\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  handleClearTasks()\r\n                }}\r\n              >\r\n                Clear Tasks\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                href='/'\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  handleDeleteBoard()\r\n                }}\r\n              >\r\n                Delete Board\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </div>\r\n        <div>\r\n          <ReactSortable\r\n            list={store.tasks}\r\n            group='shared-group'\r\n            setList={() => null}\r\n            onChange={sortTaskOnSameBoard}\r\n            onAdd={MoveTaskToAnotherBoard}\r\n            className={`tasks-wrapper board-${board.id}`}\r\n          >\r\n            {store.tasks.map((task, index) => {\r\n              if (task.boardId === board.id) {\r\n                return (\r\n                  <KanbanTasks\r\n                    task={task}\r\n                    index={index}\r\n                    labelColors={labelColors}\r\n                    key={`${task.boardId}-${index}`}\r\n                    handleTaskSidebarToggle={handleTaskSidebarToggle}\r\n                  />\r\n                )\r\n              } else {\r\n                return <Fragment key={`${task.boardId}-${index}`}></Fragment>\r\n              }\r\n            })}\r\n          </ReactSortable>\r\n\r\n          {showAddTask === null || (showAddTask !== null && showAddTask !== board.id) ? (\r\n            <Button size='sm' color='flat-secondary' onClick={handleOpenAddTask}>\r\n              <Plus size={14} className='me-25' />\r\n              <span className='align-middle'>Add New Task</span>\r\n            </Button>\r\n          ) : (\r\n            renderAddTaskForm()\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default KanbanBoard\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Third Party Imports\r\nimport { Plus } from 'react-feather'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Input, FormText } from 'reactstrap'\r\n\r\n// ** Redux Imports\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Actions\r\nimport { fetchBoards, fetchTasks, addBoard } from './store'\r\n\r\n// ** Kanban Component\r\nimport TaskSidebar from './TaskSidebar'\r\nimport KanbanBoards from './KanbanBoards'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-kanban.scss'\r\n\r\nconst defaultValues = {\r\n  boardTitle: ''\r\n}\r\n\r\nconst labelColors = {\r\n  App: 'info',\r\n  UX: 'success',\r\n  Images: 'warning',\r\n  Forms: 'success',\r\n  'Code Review': 'danger',\r\n  'Charts & Maps': 'primary'\r\n}\r\n\r\nconst KanbanBoard = () => {\r\n  // ** States\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [showAddBoard, setShowAddBoard] = useState(false)\r\n\r\n  // ** Hooks\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.kanban)\r\n  const {\r\n    reset,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  const handleAddBoardReset = () => {\r\n    reset()\r\n    setShowAddBoard(false)\r\n  }\r\n\r\n  const handleOpenAddBoard = () => {\r\n    reset()\r\n    setShowAddBoard(true)\r\n  }\r\n\r\n  const handleAddBoardFormSubmit = data => {\r\n    dispatch(addBoard({ title: data.boardTitle, id: data.boardTitle.toLowerCase().replace(/ /g, '-') }))\r\n    handleAddBoardReset()\r\n  }\r\n\r\n  const handleTaskSidebarToggle = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  const renderBoards = () => {\r\n    return store.boards.map((board, index) => {\r\n      const isLastBoard = store.boards[store.boards.length - 1].id === board.id\r\n\r\n      return (\r\n        <KanbanBoards\r\n          store={store}\r\n          board={board}\r\n          labelColors={labelColors}\r\n          isLastBoard={isLastBoard}\r\n          key={`${board.id}-${index}`}\r\n          index={`${board.id}-${index}`}\r\n          handleTaskSidebarToggle={handleTaskSidebarToggle}\r\n        />\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderAddBoardForm = () => {\r\n    return showAddBoard ? (\r\n      <form onSubmit={handleSubmit(handleAddBoardFormSubmit)}>\r\n        <div className='mb-50'>\r\n          <Controller\r\n            name='boardTitle'\r\n            control={control}\r\n            rules={{ required: true }}\r\n            render={({ field: { value, onChange } }) => (\r\n              <Input\r\n                autoFocus\r\n                value={value}\r\n                id='board-title'\r\n                onChange={onChange}\r\n                placeholder='Board Title'\r\n                invalid={Boolean(errors.boardTitle)}\r\n                aria-describedby='validation-add-board'\r\n              />\r\n            )}\r\n          />\r\n          {errors.boardTitle && (\r\n            <FormText color='danger' id='validation-add-board'>\r\n              Please enter a valid Board Title\r\n            </FormText>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Button color='primary' size='sm' type='submit' className='me-75'>\r\n            Add\r\n          </Button>\r\n          <Button outline size='sm' color='secondary' onClick={handleAddBoardReset}>\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    ) : null\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBoards())\r\n    dispatch(fetchTasks())\r\n  }, [dispatch])\r\n\r\n  return store.boards.length ? (\r\n    <div className='app-kanban-wrapper'>\r\n      {renderBoards()}\r\n\r\n      <div className='ms-1' style={{ minWidth: 150 }}>\r\n        {!showAddBoard ? (\r\n          <Button size='sm' color='light-secondary' onClick={handleOpenAddBoard}>\r\n            <Plus size={14} className='me-25' />\r\n            <span className='align-middle'> Add Board</span>\r\n          </Button>\r\n        ) : (\r\n          renderAddBoardForm()\r\n        )}\r\n      </div>\r\n\r\n      <TaskSidebar\r\n        labelColors={labelColors}\r\n        sidebarOpen={sidebarOpen}\r\n        selectedTask={store.selectedTask}\r\n        handleTaskSidebarToggle={handleTaskSidebarToggle}\r\n      />\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default KanbanBoard\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { UncontrolledTooltip } from 'reactstrap'\r\n\r\n// ** Custom Components Imports\r\nimport Avatar from '@components/avatar'\r\n\r\nconst AvatarGroup = props => {\r\n  // ** Props\r\n  const { data, tag, className } = props\r\n\r\n  // ** Conditional Tag\r\n  const Tag = tag ? tag : 'div'\r\n\r\n  // ** Render Data\r\n  const renderData = () => {\r\n    return data.map((item, i) => {\r\n      const ItemTag = item.tag ? item.tag : 'div'\r\n      return (\r\n        <Fragment key={i}>\r\n          {item.title ? (\r\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\r\n              {item.title}\r\n            </UncontrolledTooltip>\r\n          ) : null}\r\n          {!item.meta ? (\r\n            <Avatar\r\n              tag={ItemTag}\r\n              className={classnames('pull-up', {\r\n                [item.className]: item.className\r\n              })}\r\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\r\n              {...item}\r\n              title={undefined}\r\n              meta={undefined}\r\n            />\r\n          ) : null}\r\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\r\n        </Fragment>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Tag\r\n      className={classnames('avatar-group', {\r\n        [className]: className\r\n      })}\r\n    >\r\n      {renderData()}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport default AvatarGroup\r\n\r\n// ** PropTypes\r\nAvatarGroup.propTypes = {\r\n  data: Proptypes.array.isRequired,\r\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\r\n}\r\n"],"sourceRoot":""}