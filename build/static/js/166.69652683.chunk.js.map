{"version":3,"sources":["services/location.service.js","views/apps/user/list/AddModal.js","views/apps/user/list/EditModal.js","views/apps/user/list/Table.js","views/apps/user/list/index.js"],"names":["getCountriesApi","async","axios","get","url","query","getStateByCountryApi","getCityByStateApi","defaultValues","email","phone","company","fullName","lastName","AddModal","open","toggleSidebar","role","useSelector","state","auth","userData","brandNames","setBrandNames","users","salesUsers","useState","natureOfBusiness","setNatureOfBusiness","annualTurnover","setAnnualTurnover","iecCode","setIecCode","yearOfEstablishment","setYearOfEstablishment","legalStatus","setLegalStatus","cinNo","setCinNo","companyCeo","setCompanyCeo","googleMapsLink","setGoogleMapsLink","salesObj","setSalesObj","termsAccepted","setTermsAccepted","name","setname","mobile","setmobile","setemail","whatsapp","setwhatsapp","type","settype","ROLES_CONSTANT","USER","companyName","setcompanyName","companyEmail","setcompanyEmail","companyPhone","setcompanyPhone","gstNumber","setgstNumber","address","setaddress","dob","setdob","noofepmployee","setnoofepmployee","profileImage","setProfileImage","signature","setsignature","gstCertificate","setgstCertificate","landline","setLandline","aniversaryDate","setAniversaryDate","Date","password","setPassword","bannerImage","setBannerImage","salesUsersArr","setSalesUsersArr","categoryArr","setcategoryArr","category","setcategory","countryArr","setcountryArr","stateArr","setstateArr","cityArr","setcityArr","countryId","setcountryId","stateId","setstateId","cityId","setcityId","dispatch","useDispatch","checkIsUser","DISTRIBUTOR","MANUFACTURER","DEALER","CONTRACTOR","RETAILER","control","setValue","setError","handleSubmit","formState","errors","useForm","onSubmit","alert","checkIsValid","obj","companyObj","approved","map","el","categoryId","value","ADMIN","SUBADMIN","APPROVERS","_id","salesId","addUser","useEffect","data","res","console","log","error","handleGetCoutries","getCategoryApi","success","length","toastError","handleNestedCategory","getSalesUsersApi","getAllSalesUsers","handleGetStates","handleGetCities","isOpen","onClosed","key","toggle","className","options","Object","values","filter","label","onChange","e","target","maxLength","style","width","closeMenuOnSelect","isMulti","href","textDecorationLine","country","city","FileUpload","onFileChange","val","moment","format","color","onClick","EditModal","toggleFn","selectedUser","countries","states","cities","tempSalesObj","find","some","ele","documents","image","editUserApi","message","toastSuccess","getAllState","getAllCity","getAllCountry","includes","src","height","generateFilePath","UsersList","store","setSelectedUser","sort","setSort","searchTerm","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","currentStatus","setCurrentStatus","number","rolesOptions","setrolesOptions","editModal","setEditModal","registerModal","setRegisterModal","getAllData","getData","q","page","perPage","status","showName","roleSelect","arr","SALES","FIELDUSER","columns","sortable","minWidth","sortField","selector","row","cell","to","getUser","roleObj","class","icon","User","Database","editor","Edit2","Settings","Slack","Icon","size","renderRole","id","checked","approveUserById","handleStatus","isBlocked","defaultChecked","blockUserById","handleisBlocked","isVerified","verifyUserById","handleVerification","preventDefault","deleteUser","tag","md","for","isClearable","classNamePrefix","theme","selectThemeColors","xl","htmlFor","parseInt","currentTarget","handleFilter","noHeader","pagination","paginationServer","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","TotalUsers","setTotalUsers","TotalDistributors","setTotalDistributors","TotalManufacturers","setTotalManufacturers","TotalDealers","setTotalDealers","totalUsers","totalDistributors","totalManufacturers","totalDealers","lg","sm","StatsHorizontal","statTitle","renderStats","Table"],"mappings":"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","file":"static/js/166.69652683.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport url from \"./url.service\"\r\n\r\nexport const getCountriesApi = async (query) => {\r\n    return axios.get(`${url}/country?${query}`)\r\n}\r\nexport const getStateByCountryApi = async (query) => {\r\n    return axios.get(`${url}/state?${query}`)\r\n}\r\n\r\nexport const getCityByStateApi = async (query) => {\r\n    return axios.get(`${url}/city?${query}`)\r\n}","// ** React Import\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\n\r\n// ** Utils\r\n\r\n// ** Third Party Components\r\nimport { useForm } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n    Button,\r\n    Modal, ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Select from 'react-select'\r\nimport { getCategoryApi } from '../../../../services/category.service'\r\nimport { getCityByStateApi, getCountriesApi, getStateByCountryApi } from '../../../../services/location.service'\r\nimport { getSalesUsersApi } from '../../../../services/user.service'\r\nimport FileUpload from '../../../../utility/FileUpload'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\nimport { toastError } from '../../../../utility/toastutill'\r\nimport { addUser } from '../store'\r\n\r\nconst defaultValues = {\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    fullName: '',\r\n    lastName: ''\r\n}\r\n\r\nconst AddModal = ({ open, toggleSidebar }) => {\r\n    // ** States\r\n    const role = useSelector(state => state.auth.userData.role)\r\n\r\n    const salesUsers = useSelector(state => state.users.salesUsers)\r\n    const [brandNames, setBrandNames] = useState(\"\")\r\n\r\n    ///////new Fields///////\r\n    const [natureOfBusiness, setNatureOfBusiness] = useState()\r\n    const [annualTurnover, setAnnualTurnover] = useState()\r\n    const [iecCode, setIecCode] = useState()\r\n    const [yearOfEstablishment, setYearOfEstablishment] = useState()\r\n    const [legalStatus, setLegalStatus] = useState()\r\n    const [cinNo, setCinNo] = useState()\r\n    const [companyCeo, setCompanyCeo] = useState()\r\n    const [googleMapsLink, setGoogleMapsLink] = useState()\r\n    const [salesObj, setSalesObj] = useState(null)\r\n    const [termsAccepted, setTermsAccepted] = useState(false)\r\n    const [name, setname] = useState(\"\")\r\n    const [mobile, setmobile] = useState(\"\")\r\n    const [email, setemail] = useState(\"\")\r\n    const [whatsapp, setwhatsapp] = useState(\"\")\r\n    const [type, settype] = useState(ROLES_CONSTANT.USER)\r\n    const [companyName, setcompanyName] = useState(\"\")\r\n    const [companyEmail, setcompanyEmail] = useState(\"\")\r\n    const [companyPhone, setcompanyPhone] = useState(\"\")\r\n    const [gstNumber, setgstNumber] = useState(\"\")\r\n    const [address, setaddress] = useState(\"\")\r\n    const [dob, setdob] = useState(\"\")\r\n    const [noofepmployee, setnoofepmployee] = useState(\"\")\r\n    const [profileImage, setProfileImage] = useState(\"\")\r\n    const [signature, setsignature] = useState(\"\")\r\n    const [gstCertificate, setgstCertificate] = useState(\"\")\r\n    const [landline, setLandline] = useState(\"\")\r\n    const [aniversaryDate, setAniversaryDate] = useState(new Date())\r\n    const [password, setPassword] = useState(\"\")\r\n    const [bannerImage, setBannerImage] = useState(\"\")\r\n\r\n    const [salesUsersArr, setSalesUsersArr] = useState([])\r\n\r\n    const [categoryArr, setcategoryArr] = useState([])\r\n    const [category, setcategory] = useState(\"\")\r\n\r\n\r\n    const [countryArr, setcountryArr] = useState([])\r\n    const [stateArr, setstateArr] = useState([])\r\n    const [cityArr, setcityArr] = useState([])\r\n    const [countryId, setcountryId] = useState(\"\")\r\n    const [stateId, setstateId] = useState(\"\")\r\n    const [cityId, setcityId] = useState(\"\")\r\n    // ** Store Vars\r\n    const dispatch = useDispatch()\r\n    const checkIsUser = () => {\r\n        if ((type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER || type === ROLES_CONSTANT.CONTRACTOR || type === ROLES_CONSTANT.RETAILER)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    // ** Vars\r\n    const {\r\n        control,\r\n        setValue,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm({ defaultValues })\r\n\r\n    const checkIsValid = () => {\r\n        if (`${name}` === \"\") {\r\n            alert(\"Name is Required\")\r\n            return\r\n        }\r\n        // if (`${mobile}` === \"\") {\r\n        //     alert(\"Mobile is Required\")\r\n        //     return 0\r\n        // }\r\n        if (!checkIsUser()) {\r\n            if (`${email}` === \"\") {\r\n                alert(\"Email is Required\")\r\n                return 0\r\n            }\r\n            if (`${password}` === \"\") {\r\n                alert(\"Password is Required\")\r\n                return 0\r\n            }\r\n            return true\r\n        } else {\r\n            // if (`${salesObj.value}` === \"\") {\r\n            //     alert(\"Sales employee is Required\")\r\n            //     return 0\r\n            // }\r\n        }\r\n\r\n        if (`${companyName}` === \"\") {\r\n            alert(\"Organization Name is Required\")\r\n            return 0\r\n        }\r\n        // if (`${companyEmail}` === \"\") {\r\n        //     alert(\"Organization Email is Required\")\r\n        //     return 0\r\n        // }\r\n        // if (`${companyPhone}` === \"\") {\r\n        //     alert(\"Organization Phone is Required\")\r\n        //     return 0\r\n        // }\r\n        if (`${gstNumber}` === \"\") {\r\n            alert(\"Gst is Required\")\r\n            return 0\r\n        }\r\n        if (`${address}` === \"\") {\r\n            alert(\"Address is Required\")\r\n            return 0\r\n        }\r\n        if (`${countryId}` === \"\") {\r\n            alert(\"Country is Required\")\r\n            return 0\r\n        }\r\n        if (`${stateId}` === \"\") {\r\n            alert(\"State is Required\")\r\n            return 0\r\n        }\r\n        if (`${cityId}` === \"\") {\r\n            alert(\"City is Required\")\r\n            return 0\r\n        }\r\n        if (`${yearOfEstablishment}` === \"\") {\r\n            alert(\"Year of Establishment is Required\")\r\n            return 0\r\n        }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n    // ** Function to handle form submit\r\n    const onSubmit = () => {\r\n        if (checkIsValid()) {\r\n            toggleSidebar()\r\n\r\n\r\n            const obj = {\r\n                name,\r\n                email,\r\n                phone: mobile,\r\n\r\n                role: type,\r\n                companyObj: {},\r\n                approved: true\r\n            }\r\n\r\n\r\n            if (!checkIsUser()) {\r\n\r\n                obj.password = password\r\n            } else {\r\n                obj.dob = dob\r\n                obj.address = address\r\n                obj.brandNames = brandNames\r\n                obj.whatsapp = whatsapp\r\n                obj.gstNumber = gstNumber\r\n                obj.countryId = countryId\r\n                obj.stateId = stateId\r\n                obj.cityId = cityId\r\n                obj.aniversaryDate = aniversaryDate\r\n                obj.landline = landline\r\n                obj.gstCertificate = gstCertificate\r\n                obj.bannerImage = bannerImage\r\n                obj.profileImage = profileImage\r\n                obj.categoryArr = category.map(el => ({ categoryId: el.value }))\r\n            }\r\n            if (type !== ROLES_CONSTANT.ADMIN && type !== ROLES_CONSTANT.SUBADMIN && type !== ROLES_CONSTANT.APPROVERS && type !== ROLES_CONSTANT.USER) {\r\n\r\n                obj.companyObj.name = companyName\r\n                obj.companyObj.email = companyEmail\r\n                obj.companyObj.phone = companyPhone\r\n                obj.companyObj.address = address\r\n                obj.companyObj.gstNumber = gstNumber\r\n                obj.companyObj.noofepmployee = noofepmployee\r\n                obj.companyObj.yearOfEstablishment = yearOfEstablishment\r\n                obj.companyObj.natureOfBusiness = natureOfBusiness\r\n                obj.companyObj.googleMapsLink = googleMapsLink\r\n                obj.companyName = companyName\r\n                obj.companyEmail = companyEmail\r\n                obj.companyPhone = companyPhone\r\n                obj.gstNumber = gstNumber\r\n                obj.dob = dob\r\n                obj.profileImage = profileImage\r\n                obj.signature = signature\r\n                obj.gstCertificate = gstCertificate\r\n                obj.countryId = countryId\r\n                obj.stateId = stateId\r\n                obj.cityId = cityId\r\n            }\r\n            if (salesObj && salesObj?._id) {\r\n                obj.salesId = salesObj?._id\r\n            }\r\n            dispatch(\r\n                addUser(obj)\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSidebarClosed = () => {\r\n        for (const key in defaultValues) {\r\n            console.log(key)\r\n            setValue(key, '')\r\n        }\r\n    }\r\n\r\n\r\n    const handleGetCoutries = async () => {\r\n        try {\r\n            const { data: res } = await getCountriesApi()\r\n            console.log(res.data, \"data\")\r\n            if (res.data) {\r\n                setcountryArr(res.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleNestedCategory = async () => {\r\n        try {\r\n            const { data: res } = await getCategoryApi()\r\n            if (res.success && res.data.length) {\r\n                setcategoryArr(res.data)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            toastError(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleGetStates = async (countryId) => {\r\n        try {\r\n            const { data: res } = await getStateByCountryApi(`countryId=${countryId}`)\r\n            if (res.data) {\r\n                setstateArr(res.data)\r\n            } else {\r\n                setstateArr([])\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleGetCities = async (stateId) => {\r\n        try {\r\n            const { data: res } = await getCityByStateApi(`stateId=${stateId}`)\r\n            if (res.data) {\r\n                setcityArr(res.data)\r\n            } else {\r\n                setcityArr([])\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getAllSalesUsers = async () => {\r\n        try {\r\n            const { data: res } = await getSalesUsersApi()\r\n            if (res) {\r\n                setSalesUsersArr(res.data)\r\n            }\r\n        } catch (error) {\r\n            toastError(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetCoutries()\r\n        handleNestedCategory()\r\n        getAllSalesUsers()\r\n    }, [])\r\n    useEffect(() => {\r\n        if (countryId) {\r\n            console.log(countryId, \"countryId\")\r\n            handleGetStates(countryId)\r\n        }\r\n    }, [countryId])\r\n\r\n    useEffect(() => {\r\n        if (stateId) {\r\n            handleGetCities(stateId)\r\n        }\r\n    }, [stateId])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={handleSidebarClosed}\r\n                toggle={toggleSidebar}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>Add User</h2>\r\n                    </div>\r\n\r\n                    <label>Role <span className=\"text-danger\">*</span>  </label>\r\n                    <Select options={\r\n                        Object.values(ROLES_CONSTANT).filter((el) => el !== 'ADMIN' && ((role !== ROLES_CONSTANT.APPROVERS && el !== ROLES_CONSTANT.APPROVERS))).map(el => ({ label: el, value: el }))\r\n                    }\r\n                        value={{ value: type, label: type }}\r\n                        onChange={(e) => settype(e.value)}\r\n                    />\r\n                    \r\n\r\n                    {(type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER || type === ROLES_CONSTANT.CONTRACTOR || type === ROLES_CONSTANT.RETAILER) &&\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label>Name of Organization <span className=\"text-danger\">*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyName}\r\n                                    onChange={(e) => setcompanyName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                         \r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label>Organization Phone / Landline</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyPhone}\r\n                                    onChange={(e) => setcompanyPhone(e.target.value)}\r\n                                    maxLength=\"10\"\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-md-6 mt-2\">\r\n                                <label>Landline Number <span className=\"text-danger\">*</span> </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={landline}\r\n                                    onChange={(e) => setLandline(e.target.value)}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Year of Establishment <span className=\"text-danger\">*</span> </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={yearOfEstablishment}\r\n                                    onChange={(e) => setYearOfEstablishment(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <div style={{ width: \"max-content\" }}>\r\n                                    <label>Category <span className=\"text-danger me-2\">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <Select className='form-control' options={categoryArr && categoryArr.length > 0 && categoryArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={category} closeMenuOnSelect={false} onChange={(e) => setcategory(e)} isMulti />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Dealing With Brand Names </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={brandNames}\r\n                                    onChange={(e) => setBrandNames(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Google Maps Link  </label>\r\n                                <a href=\"https://www.google.com/maps\" target=\"_blank\" style={{ textDecorationLine: \"underline\" }}> Click to open google maps</a>\r\n                                <br />\r\n                                <br />\r\n                                <span>Note : The link above will take you to google maps where you can select the your business's location to get the link and paste it in the text input given below</span>\r\n                                <br />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={googleMapsLink}\r\n                                    onChange={(e) => setGoogleMapsLink(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-2\">\r\n                                <label> Address <span className=\"text-danger\">*</span></label>\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    value={address}\r\n                                    onChange={(e) => setaddress(e.target.value)}\r\n                                ></textarea>\r\n                            </div>\r\n                            <div className=\"col-md-4 mt-2\">\r\n                                <label> Country <span className=\"text-danger\">*</span></label>\r\n                                {\r\n                                    countryArr && (\r\n                                        <select className=\"form-control\" onChange={(e) => setcountryId(e.target.value)}>\r\n                                            <option value=\"\">Please Select Country</option>\r\n                                            {countryArr.map((country) => (\r\n                                                <option value={country._id} >{country.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-4 mt-2\">\r\n                                <label> State <span className=\"text-danger\">*</span></label>\r\n                                {\r\n                                    stateArr && (\r\n                                        <select className=\"form-control\" onChange={(e) => setstateId(e.target.value)}>\r\n                                            <option value=\"\">Please Select State</option>\r\n                                            {stateArr.map((state) => (\r\n                                                <option value={state._id} >{state.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-4 mt-2\">\r\n                                <label> City <span className=\"text-danger\">*</span></label>\r\n                                {\r\n                                    cityArr && (\r\n                                        <select className=\"form-control\" onChange={(e) => setcityId(e.target.value)}>\r\n                                            <option value=\"\">Please Select City</option>\r\n                                            {cityArr.map((city) => (\r\n                                                <option value={city._id} >{city.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Profile Photo</label>\r\n\r\n                                <FileUpload onFileChange={(val) => { setProfileImage(val) }} />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Banner Photo  (Exterior/Interior Image of your Showroom/Unit)</label>\r\n\r\n                                <FileUpload onFileChange={(val) => setBannerImage(val)} />\r\n                            </div>\r\n                            {/* <div className=\"col-md-6 mt-2\">\r\n                                <label> Nature of your business</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={natureOfBusiness}\r\n                                    onChange={(e) => setNatureOfBusiness(e.target.value)}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> GST No <span className=\"text-danger\">*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={gstNumber}\r\n                                    onChange={(e) => setgstNumber(e.target.value)}\r\n                                />\r\n                            </div>\r\n{/* \r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label>Sales</label>\r\n                                <Select className='form-control' options={salesUsersArr && salesUsersArr.length > 0 && salesUsersArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={salesObj} onChange={(e) => setSalesObj(e)} />\r\n\r\n                            </div> */}\r\n\r\n\r\n                        </div>\r\n                    }\r\n                    <div className='row'>\r\n\r\n                        <h4 className=\"heading yellow mt-4\">{checkIsUser() ? \"Contact Person Details\" : \"\"}</h4>\r\n                        <div className=\"col-md-6 mt-2\">\r\n                            <label>{checkIsUser() ? \"Name of Authorised person\" : \"Name\"}<span className=\"text-danger\">*</span></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={name}\r\n                                onChange={(e) => setname(e.target.value)}\r\n                            />\r\n                        </div>\r\n                  <div className=\"col-md-6 mt-2\">\r\n                            <label>Email <span className=\"text-danger\">*</span> </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                        </div> \r\n                        <div className=\"col-md-6 mt-2\">\r\n                            <label>Date of Birth </label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                value={moment(aniversaryDate).format(\"YYYY-MM-DD\")}\r\n                                onChange={(e) => setAniversaryDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6 mt-2\">\r\n                            <label>Your Email Id <span className=\"text-danger\">*</span> </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6 mt-2\">\r\n                                    <label>Whatsapp No.</label>\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        value={whatsapp}\r\n                                        onChange={(e) => setwhatsapp(e.target.value)}\r\n                                        maxLength=\"10\"\r\n                                    />\r\n                                </div>\r\n                        <div className=\"col-md-6 mt-2\">\r\n                            <label>Mobile No. </label>\r\n                            <input\r\n                                type=\"tel\"\r\n                                className=\"form-control\"\r\n                                value={mobile}\r\n                                onChange={(e) => setmobile(e.target.value)}\r\n                                maxLength=\"10\"\r\n                            />\r\n                        </div>\r\n                    \r\n                        {\r\n                            !checkIsUser() &&\r\n                            <>\r\n\r\n                                <div className=\"col-md-6 mt-2\">\r\n                                    <label>Whatsapp No.</label>\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        value={whatsapp}\r\n                                        onChange={(e) => setwhatsapp(e.target.value)}\r\n                                        maxLength=\"10\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 mt-2\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12 mt-2\">\r\n                        <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AddModal\r\n","// ** React Import\r\nimport { useEffect, useState } from 'react'\r\n\r\n// ** Custom Components\r\n\r\n// ** Utils\r\n\r\n// ** Third Party Components\r\nimport { useForm } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n    Button, Form, Input, Label, Modal, ModalBody,\r\n    ModalHeader\r\n} from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\nimport FileUpload from '../../../../utility/FileUpload'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\nimport { getAllCity } from '../../../location/City/store'\r\nimport { getAllCountry } from '../../../location/Country/store'\r\nimport { getAllState } from '../../../location/State/store'\r\nimport { addUser, editUser } from '../store'\r\nimport { generateFilePath } from '../../../../services/url.service'\r\nimport { editUserApi, getSalesUsersApi } from '../../../../services/user.service'\r\nimport { getCityByStateApi, getCountriesApi, getStateByCountryApi } from '../../../../services/location.service'\r\nimport { getCategoryApi } from '../../../../services/category.service'\r\nimport Select from 'react-select'\r\nimport moment from 'moment'\r\n\r\nconst defaultValues = {\r\n    email: '',\r\n    phone: '',\r\n    company: '',\r\n    fullName: '',\r\n    lastName: ''\r\n}\r\n\r\nconst EditModal = ({ open, toggleFn, selectedUser }) => {\r\n    // ** States\r\n    const country = useSelector(state => state.countries.countries)\r\n    const states = useSelector(state => state.states.states) // states\r\n    const city = useSelector(state => state.cities.cities)\r\n\r\n    const role = useSelector(state => state.auth.userData.role)\r\n    const store = useSelector(state => state.users)\r\n\r\n    const [brandNames, setBrandNames] = useState(\"\")\r\n\r\n    ///////new Fields///////\r\n    const [natureOfBusiness, setNatureOfBusiness] = useState()\r\n    const [annualTurnover, setAnnualTurnover] = useState()\r\n    const [iecCode, setIecCode] = useState()\r\n    const [yearOfEstablishment, setYearOfEstablishment] = useState()\r\n    const [legalStatus, setLegalStatus] = useState()\r\n    const [cinNo, setCinNo] = useState()\r\n    const [companyCeo, setCompanyCeo] = useState()\r\n    const [googleMapsLink, setGoogleMapsLink] = useState()\r\n    const [salesObj, setSalesObj] = useState(null)\r\n    const [termsAccepted, setTermsAccepted] = useState(false)\r\n    const [name, setname] = useState(\"\")\r\n    const [mobile, setmobile] = useState(\"\")\r\n    const [email, setemail] = useState(\"\")\r\n    const [whatsapp, setwhatsapp] = useState(\"\")\r\n    const [type, settype] = useState(ROLES_CONSTANT.USER)\r\n    const [companyName, setcompanyName] = useState(\"\")\r\n    const [companyEmail, setcompanyEmail] = useState(\"\")\r\n    const [companyPhone, setcompanyPhone] = useState(\"\")\r\n    const [gstNumber, setgstNumber] = useState(\"\")\r\n    const [address, setaddress] = useState(\"\")\r\n    const [dob, setdob] = useState(\"\")\r\n    const [noofepmployee, setnoofepmployee] = useState(\"\")\r\n    const [profileImage, setProfileImage] = useState(\"\")\r\n    const [signature, setsignature] = useState(\"\")\r\n    const [gstCertificate, setgstCertificate] = useState(\"\")\r\n    const [landline, setLandline] = useState(\"\")\r\n    const [aniversaryDate, setAniversaryDate] = useState(new Date())\r\n    const [password, setPassword] = useState(\"\")\r\n    const [bannerImage, setBannerImage] = useState(\"\")\r\n\r\n    const [salesUsersArr, setSalesUsersArr] = useState([])\r\n\r\n    const [categoryArr, setcategoryArr] = useState([])\r\n    const [category, setcategory] = useState(\"\")\r\n\r\n\r\n    const [countryArr, setcountryArr] = useState([])\r\n    const [stateArr, setstateArr] = useState([])\r\n    const [cityArr, setcityArr] = useState([])\r\n    const [countryId, setcountryId] = useState(\"\")\r\n    const [stateId, setstateId] = useState(\"\")\r\n    const [cityId, setcityId] = useState(\"\")\r\n    // ** Store Vars\r\n\r\n    const checkIsUser = () => {\r\n        if ((type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER || type === ROLES_CONSTANT.CONTRACTOR || type === ROLES_CONSTANT.RETAILER)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleGetCoutries = async () => {\r\n        try {\r\n            const { data: res } = await getCountriesApi()\r\n            console.log(res.data, \"data\")\r\n            if (res.data) {\r\n                setcountryArr(res.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleNestedCategory = async () => {\r\n        try {\r\n            const { data: res } = await getCategoryApi()\r\n            if (res.success && res.data.length) {\r\n                setcategoryArr(res.data)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error)\r\n            toastError(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleGetStates = async (countryId) => {\r\n        try {\r\n            const { data: res } = await getStateByCountryApi(`countryId=${countryId}`)\r\n            if (res.data) {\r\n                setstateArr(res.data)\r\n            } else {\r\n                setstateArr([])\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleGetCities = async (stateId) => {\r\n        try {\r\n            const { data: res } = await getCityByStateApi(`stateId=${stateId}`)\r\n            if (res.data) {\r\n                setcityArr(res.data)\r\n            } else {\r\n                setcityArr([])\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getAllSalesUsers = async () => {\r\n        try {\r\n            const { data: res } = await getSalesUsersApi()\r\n            if (res) {\r\n                setSalesUsersArr(res.data)\r\n            }\r\n        } catch (error) {\r\n            toastError(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetCoutries()\r\n        handleNestedCategory()\r\n        getAllSalesUsers()\r\n    }, [])\r\n    useEffect(() => {\r\n        if (countryId) {\r\n            console.log(countryId, \"countryId\")\r\n            handleGetStates(countryId)\r\n        }\r\n    }, [countryId])\r\n\r\n    useEffect(() => {\r\n        if (stateId) {\r\n            handleGetCities(stateId)\r\n        }\r\n    }, [stateId])\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (salesUsersArr && salesUsersArr.length > 0 && selectedUser && selectedUser.salesId) {\r\n            const tempSalesObj = salesUsersArr.find(el => el._id === selectedUser.salesId)\r\n\r\n            if (tempSalesObj) {\r\n                setSalesObj({ label: tempSalesObj.name, value: tempSalesObj._id })\r\n            }\r\n        }\r\n    }, [salesUsersArr, selectedUser])\r\n\r\n    useEffect(() => {\r\n        if (categoryArr && categoryArr.length > 0 && selectedUser && selectedUser.categoryArr) {\r\n            const tempSalesObj = categoryArr.filter(el => selectedUser.categoryArr.some(ele => ele.categoryId === el._id))\r\n\r\n            if (tempSalesObj) {\r\n                setcategory(tempSalesObj.map((el) => ({ label: el.name, value: el._id })))\r\n            }\r\n        }\r\n    }, [categoryArr, selectedUser])\r\n    useEffect(() => {\r\n\r\n        if (selectedUser && selectedUser.name) {\r\n\r\n            settype(selectedUser.role)\r\n            // obj.password = password\r\n            setdob(selectedUser?.dob)\r\n            setaddress(selectedUser?.address)\r\n            setBrandNames(selectedUser?.brandNames)\r\n            setwhatsapp(selectedUser?.whatsapp)\r\n            setgstNumber(selectedUser?.companyObj?.gstNumber)\r\n            setAniversaryDate(selectedUser?.aniversaryDate)\r\n            setLandline(selectedUser?.landline)\r\n            setgstCertificate(selectedUser?.gstCertificate)\r\n            setBannerImage(selectedUser?.bannerImage)\r\n            setProfileImage(selectedUser?.profileImage)\r\n            // setcategory(selectedUser?.category.map(el => ({ categoryId: el.value })))\r\n            setcompanyName(selectedUser?.companyObj?.name)\r\n            setcompanyEmail(selectedUser?.companyObj?.email)\r\n            setcompanyPhone(selectedUser?.companyObj?.phone)\r\n            setcountryId(selectedUser?.countryId)\r\n            setstateId(selectedUser?.stateId)\r\n            setcityId(selectedUser?.cityId)\r\n            setaddress(selectedUser?.companyObj?.address)\r\n            setname(selectedUser?.name)\r\n            setemail(selectedUser?.email)\r\n            setdob(selectedUser?.dob)\r\n            setmobile(selectedUser?.phone)\r\n            setYearOfEstablishment(selectedUser?.companyObj?.yearOfEstablishment)\r\n            setNatureOfBusiness(selectedUser?.companyObj?.natureOfBusiness)\r\n            setGoogleMapsLink(selectedUser?.companyObj?.googleMapsLink)\r\n            // salesId = salesObj?._id\r\n            // companyObj.address = address\r\n            // companyObj.gstNumber = gstNumber\r\n            // companyObj.noofepmployee = noofepmployee\r\n        }\r\n\r\n        console.log(selectedUser?.documents && selectedUser?.documents.length > 0 && selectedUser?.documents.filter(el => el?.name === \"gstCertificate\")[0]?.image)\r\n\r\n        console.log(selectedUser, \"selectedUser\")\r\n    }, [selectedUser])\r\n\r\n    useEffect(() => {\r\n        setcityArr(city)\r\n\r\n    }, [city])\r\n\r\n    useEffect(() => {\r\n        setstateArr(states)\r\n    }, [states])\r\n\r\n    useEffect(() => {\r\n        setcountryArr(country)\r\n    }, [country])\r\n\r\n    // ** Vars\r\n    const {\r\n        control,\r\n        setValue,\r\n        setError,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm({ defaultValues })\r\n\r\n    const checkIsValid = () => {\r\n        if (`${name}` === \"\") {\r\n            alert(\"Name is Required\")\r\n            return\r\n        }\r\n        // if (`${mobile}` === \"\") {\r\n        //     alert(\"Mobile is Required\")\r\n        //     return 0\r\n        // }\r\n        if (!checkIsUser()) {\r\n            if (`${email}` === \"\") {\r\n                alert(\"Email is Required\")\r\n                return 0\r\n            }\r\n            if (`${password}` === \"\") {\r\n                alert(\"Password is Required\")\r\n                return 0\r\n            }\r\n            return true\r\n        } else {\r\n            // if ((salesUsersArr?.length > 0)  && !(salesObj || salesObj?.value || salesObj?.value === \"\")) {\r\n            //     alert(\"Sales employee is Required\")\r\n            //     return 0\r\n            // }\r\n            // if (!(category && category.length >= 0)) {\r\n            //     alert(\"Please select atleast one category\")\r\n            //     return 0\r\n            // }\r\n\r\n        }\r\n\r\n        if (`${companyName}` === \"\") {\r\n            alert(\"Organization Name is Required\")\r\n            return 0\r\n        }\r\n        // if (`${companyEmail}` === \"\") {\r\n        //     alert(\"Organization Email is Required\")\r\n        //     return 0\r\n        // }\r\n        // if (`${companyPhone}` === \"\") {\r\n        //     alert(\"Organization Phone is Required\")\r\n        //     return 0\r\n        // }\r\n        if (`${gstNumber}` === \"\") {\r\n            alert(\"Gst is Required\")\r\n            return 0\r\n        }\r\n        if (`${address}` === \"\") {\r\n            alert(\"Address is Required\")\r\n            return 0\r\n        }\r\n        if (`${countryId}` === \"\") {\r\n            alert(\"Country is Required\")\r\n            return 0\r\n        }\r\n        if (`${stateId}` === \"\") {\r\n            alert(\"State is Required\")\r\n            return 0\r\n        }\r\n        if (`${cityId}` === \"\") {\r\n            alert(\"City is Required\")\r\n            return 0\r\n        }\r\n        if (`${yearOfEstablishment}` === \"\") {\r\n            alert(\"Year of Establishment is Required\")\r\n            return 0\r\n        }\r\n\r\n\r\n        return true\r\n    }\r\n\r\n    // ** Function to handle form submit\r\n    const onSubmit = async () => {\r\n        try {\r\n\r\n            if (checkIsValid()) {\r\n                console.log(\"onSubmit\")\r\n                const obj = {\r\n                    name,\r\n                    email,\r\n                    phone: mobile,\r\n\r\n                    role: type,\r\n                    companyObj: {},\r\n                    approved: true\r\n                }\r\n\r\n                if (!checkIsUser()) {\r\n\r\n                    obj.password = password\r\n                } else {\r\n                    obj.dob = dob\r\n                    obj.address = address\r\n                    obj.brandNames = brandNames\r\n                    obj.whatsapp = whatsapp\r\n                    obj.gstNumber = gstNumber\r\n                    obj.countryId = countryId\r\n                    obj.stateId = stateId\r\n                    obj.cityId = cityId\r\n                    obj.aniversaryDate = aniversaryDate\r\n                    obj.landline = landline\r\n                    obj.gstCertificate = gstCertificate\r\n                    obj.bannerImage = bannerImage\r\n                    obj.profileImage = profileImage\r\n                    obj.categoryArr = category.map(el => ({ categoryId: el.value }))\r\n                }\r\n                if (type !== ROLES_CONSTANT.ADMIN && type !== ROLES_CONSTANT.SUBADMIN && type !== ROLES_CONSTANT.APPROVERS && type !== ROLES_CONSTANT.USER) {\r\n\r\n                    obj.companyObj.name = companyName\r\n                    obj.companyObj.email = companyEmail\r\n                    obj.companyObj.phone = companyPhone\r\n                    obj.companyObj.address = address\r\n                    obj.companyObj.gstNumber = gstNumber\r\n                    obj.companyObj.noofepmployee = noofepmployee\r\n                    obj.companyObj.yearOfEstablishment = yearOfEstablishment\r\n                    obj.companyObj.googleMapsLink = googleMapsLink\r\n                    obj.companyObj.natureOfBusiness = natureOfBusiness\r\n                    obj.companyName = companyName\r\n                    obj.companyEmail = companyEmail\r\n                    obj.companyPhone = companyPhone\r\n                    obj.gstNumber = gstNumber\r\n                    obj.dob = dob\r\n                    obj.profileImage = profileImage\r\n                    obj.signature = signature\r\n                    obj.gstCertificate = gstCertificate\r\n                    obj.countryId = countryId\r\n                    obj.stateId = stateId\r\n                    obj.cityId = cityId\r\n                }\r\n                if (salesObj && salesObj?._id) {\r\n                    obj.salesId = salesObj?._id\r\n                }\r\n\r\n\r\n                console.log(\"onSubmit\")\r\n                const { data: res } = await editUserApi(obj, selectedUser._id)\r\n                if (res.message) {\r\n                    toastSuccess(res.message)\r\n                    toggleFn()\r\n                }\r\n\r\n                // dispatch(\r\n                //     editUser(obj, selectedUser._id)\r\n                // )\r\n                console.log(\"onSubmit\")\r\n            }\r\n        } catch (error) {\r\n            toastError(error)\r\n        }\r\n\r\n    }\r\n\r\n    const handleSidebarClosed = () => {\r\n        for (const key in defaultValues) {\r\n            console.log(key)\r\n            setValue(key, '')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (countryId) {\r\n            dispatch(getAllState(`countryId=${countryId}`))\r\n        }\r\n    }, [countryId])\r\n\r\n    useEffect(() => {\r\n        if (stateId) {\r\n            dispatch(getAllCity(`stateId=${stateId}`))\r\n        }\r\n    }, [stateId])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountry())\r\n        // dispatch(getAllCity())\r\n        dispatch(getAllState())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                onClosed={() => toggleFn()}\r\n                className='modal-dialog-centered modal-lg'\r\n            >\r\n                <ModalHeader className='bg-transparent' toggle={() => toggleFn()}></ModalHeader>\r\n                <ModalBody className='px-3 pb-3'>\r\n                    <div className='text-center'>\r\n                        <h2>Edit User</h2>\r\n                    </div>\r\n\r\n                    <label>Role <span className=\"text-danger\">*</span>  </label>\r\n                    <Select options={\r\n                        Object.values(ROLES_CONSTANT).filter((el) => el !== 'ADMIN' && ((role !== ROLES_CONSTANT.APPROVERS && el !== ROLES_CONSTANT.APPROVERS))).map(el => ({ label: el, value: el }))\r\n                    }\r\n                        value={{ value: type, label: type }}\r\n                        onChange={(e) => settype(e.value)}\r\n                    />\r\n\r\n                    {(type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER || type === ROLES_CONSTANT.CONTRACTOR || type === ROLES_CONSTANT.RETAILER) &&\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label>Name of Organization <span className=\"text-danger\">*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyName}\r\n                                    onChange={(e) => setcompanyName(e.target.value)}\r\n                                />\r\n                            </div>\r\n                         \r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label>Organization Phone / Landline</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={companyPhone}\r\n                                    onChange={(e) => setcompanyPhone(e.target.value)}\r\n                                    maxLength=\"10\"\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-md-6 mt-2\">\r\n                                <label>Landline Number </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={landline}\r\n                                    onChange={(e) => setLandline(e.target.value)}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Year of Establishment <span className=\"text-danger\">*</span> </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={yearOfEstablishment}\r\n                                    onChange={(e) => setYearOfEstablishment(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <div style={{ width: \"max-content\" }}>\r\n                                    <label>Category <span className=\"text-danger me-2\">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <Select className='form-control' options={categoryArr && categoryArr.length > 0 && categoryArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={category} closeMenuOnSelect={false} onChange={(e) => setcategory(e)} isMulti />\r\n\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Dealing With Brand Names </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={brandNames}\r\n                                    onChange={(e) => setBrandNames(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Google Maps Link </label>\r\n                                <a href=\"https://www.google.com/maps\" target=\"_blank\" style={{ textDecorationLine: \"underline\" }}> Click to open google maps</a>\r\n                                <br />\r\n                                <br />\r\n                                <span>Note : The link above will take you to google maps where you can select the your business's location to get the link and paste it in the text input given below</span>\r\n                                <br />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={googleMapsLink}\r\n                                    onChange={(e) => setGoogleMapsLink(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-2\">\r\n                                <label> Address <span className=\"text-danger\">*</span></label>\r\n                                <textarea\r\n                                    className=\"form-control\"\r\n                                    value={address}\r\n                                    onChange={(e) => setaddress(e.target.value)}\r\n                                ></textarea>\r\n                            </div>\r\n                            <div className=\"col-md-4 mt-2\">\r\n                                <label> Country <span className=\"text-danger\">*</span></label>\r\n                                {\r\n                                    countryArr && (\r\n                                        <select className=\"form-control\" value={countryId} onChange={(e) => setcountryId(e.target.value)}>\r\n                                            <option value=\"\">Please Select Country</option>\r\n                                            {countryArr.map((country) => (\r\n                                                <option value={country._id} >{country.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-4 mt-2\">\r\n                                <label> State <span className=\"text-danger\">*</span></label>\r\n                                {\r\n                                    stateArr && (\r\n                                        <select className=\"form-control\" value={stateId} onChange={(e) => setstateId(e.target.value)}>\r\n                                            <option value=\"\">Please Select State</option>\r\n                                            {stateArr.map((state) => (\r\n                                                <option value={state._id} >{state.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-4 mt-2\">\r\n                                <label> City <span className=\"text-danger\">*</span></label>\r\n                                {\r\n                                    cityArr && (\r\n                                        <select className=\"form-control\" value={cityId} onChange={(e) => setcityId(e.target.value)}>\r\n                                            <option value=\"\">Please Select City</option>\r\n                                            {cityArr.map((city) => (\r\n                                                <option value={city._id} >{city.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Profile Photo</label>\r\n\r\n                                <div>\r\n                                    {\r\n                                       profileImage && profileImage.includes(\"base64\") ? <img src={profileImage} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(profileImage)} style={{ height: 100, width: 100 }} />\r\n                                    }\r\n                                </div>\r\n\r\n                                <FileUpload onFileChange={(val) => { setProfileImage(val) }} />\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> Banner (Image of your Showroom)</label>\r\n\r\n                                <div>\r\n                                    {\r\n                                      profileImage &&  profileImage.includes(\"base64\") ? <img src={generateFilePath(bannerImage)} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(bannerImage)} style={{ height: 100, width: 100 }} />\r\n                                    }\r\n                                </div>\r\n\r\n                                <FileUpload onFileChange={(val) => setBannerImage(val)} />\r\n                            </div>\r\n                            {/* <div className=\"col-md-6 mt-2\">\r\n                                <label> Nature of your business</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={natureOfBusiness}\r\n                                    onChange={(e) => setNatureOfBusiness(e.target.value)}\r\n                                />\r\n                            </div> */}\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label> GST No <span className=\"text-danger\">*</span></label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={gstNumber}\r\n                                    onChange={(e) => setgstNumber(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <label>Sales</label>\r\n                                <Select className='form-control' options={salesUsersArr && salesUsersArr.length > 0 && salesUsersArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={salesObj} onChange={(e) => setSalesObj(e)} />\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    }\r\n                    <div className='row'>\r\n\r\n                        <h4 className=\"heading yellow mt-4\">{checkIsUser() ? \"Contact Person Details\" : \"\"}</h4>\r\n                        <div className=\"col-md-6 mt-2\">\r\n                            <label>{checkIsUser() ? \"Name of Authorised person\" : \"Name\"}<span className=\"text-danger\">*</span></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={name}\r\n                                onChange={(e) => setname(e.target.value)}\r\n                            />\r\n                        </div>\r\n                      <div className=\"col-md-6 mt-2\">\r\n                            <label>Email <span className=\"text-danger\">*</span> </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                        </div> <div className=\"col-md-6 mt-2\">\r\n                            <label>Date of Birth  </label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                value={ moment(aniversaryDate).format(\"YYYY-MM-DD\")}\r\n                                onChange={(e) => setAniversaryDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-6 mt-2\">\r\n                            <label>Mobile No. <span className=\"text-danger\">*</span></label>\r\n                            <input\r\n                                type=\"tel\"\r\n                                className=\"form-control\"\r\n                                value={mobile}\r\n                                onChange={(e) => setmobile(e.target.value)}\r\n                                maxLength=\"10\"\r\n                            />\r\n                        </div>\r\n                        {\r\n                            !checkIsUser() &&\r\n                            <>\r\n\r\n                                <div className=\"col-md-6 mt-2\">\r\n                                    <label>Whatsapp No.</label>\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        className=\"form-control\"\r\n                                        value={whatsapp}\r\n                                        onChange={(e) => setwhatsapp(e.target.value)}\r\n                                        maxLength=\"10\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 mt-2\">\r\n                                    <label>Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"col-md-12 mt-2\">\r\n                        <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n        // <Sidebar\r\n        //   size='lg'\r\n        //   open={open}\r\n        //   title='New User'\r\n        //   headerClassName='mb-1'\r\n        //   contentClassName='pt-0'\r\n        //   toggleFn={toggleFn}\r\n        //   onClosed={handleSidebarClosed}\r\n        // >\r\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='fullName'>\r\n        //         Full Name <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='fullName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='lastName'>\r\n        //         lastName <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='lastName'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='userEmail'>\r\n        //         Email <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='email'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input\r\n        //             type='email'\r\n        //             id='userEmail'\r\n        //             placeholder='john.doe@example.com'\r\n        //             invalid={errors.email && true}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        //     </div>\r\n\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='phone'>\r\n        //         phone <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='phone'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='company'>\r\n        //         Company <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='company'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='country'>\r\n        //         Country <span className='text-danger'>*</span>\r\n        //       </Label>\r\n        //       <Controller\r\n        //         name='country'\r\n        //         control={control}\r\n        //         render={({ field }) => (\r\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\r\n        //           <Select\r\n        //             isClearable={false}\r\n        //             classNamePrefix='select'\r\n        //             options={countryOptions}\r\n        //             theme={selectThemeColors}\r\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\r\n        //             {...field}\r\n        //           />\r\n        //         )}\r\n        //       />\r\n        //     </div>\r\n        //     <div className='mb-1'>\r\n        //       <Label className='form-label' for='user-role'>\r\n        //         User Role\r\n        //       </Label>\r\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n        //         <option value='subscriber'>Subscriber</option>\r\n        //         <option value='editor'>Editor</option>\r\n        //         <option value='maintainer'>Maintainer</option>\r\n        //         <option value='author'>Author</option>\r\n        //         <option value='admin'>Admin</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\r\n        //       <Label className='form-label' for='select-plan'>\r\n        //         Select Plan\r\n        //       </Label>\r\n        //       <Input type='select' id='select-plan' name='select-plan'>\r\n        //         <option value='basic'>Basic</option>\r\n        //         <option value='enterprise'>Enterprise</option>\r\n        //         <option value='company'>Company</option>\r\n        //         <option value='team'>Team</option>\r\n        //       </Input>\r\n        //     </div>\r\n        //     <Button type='submit' className='me-1' color='primary'>\r\n        //       Submit\r\n        //     </Button>\r\n        //     <Button type='reset' color='secondary' outline onClick={toggleFn}>\r\n        //       Cancel\r\n        //     </Button>\r\n        //   </Form>\r\n        // </Sidebar>\r\n    )\r\n}\r\n\r\nexport default EditModal\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\n\r\n// ** Store & Actions\r\n\r\n// ** Icons Imports\r\nimport { approveUserById, blockUserById, verifyUserById } from '../../../../services/user.service'\r\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\r\n\r\n// ** React Imports\r\nimport { Fragment, useEffect, useState } from 'react'\r\n// ** Invoice List Sidebar\r\n\r\n// ** Table Columns\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteUser, getAllData, getData } from '../store'\r\n\r\n// ** Third Party Components\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User } from 'react-feather'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Select from 'react-select'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\r\n  Label, Row\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\r\nimport AddModal from './AddModal'\r\nimport EditModal from './EditModal'\r\nimport RegisterModal from './RegisterModal'\r\n\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.users)\r\n  const role = useSelector(state => state.auth.userData.role)\r\n\r\n  const [selectedUser, setSelectedUser] = useState({})\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n  const [rolesOptions, setrolesOptions] = useState([])\r\n  const [editModal, setEditModal] = useState(false)\r\n  const [registerModal, setRegisterModal] = useState(false)\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n  const toggleFn = () => setEditModal(!editModal)\r\n  const togglregister = () => setRegisterModal(!registerModal)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        showName: true\r\n        // currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    // ** Set Roles\r\n\r\n    const roleSelect = Object.values(ROLES_CONSTANT).map(el => {\r\n      return { label: el, value: el }\r\n    })\r\n    // console.log(store, \"storestorestorestore\")\r\n\r\n    let arr = [{ label: \"All\", value: \"All\" }, ...roleSelect]\r\n    if (!(role === ROLES_CONSTANT.SALES || role === ROLES_CONSTANT.FIELDUSER)) {\r\n      arr = [{ label: \"All\", value: \"All\" }, ...roleSelect]\r\n    } else {\r\n      arr = [...roleSelect.filter(el => el.label === ROLES_CONSTANT.DISTRIBUTOR || el.label === ROLES_CONSTANT.DEALER || el.label === ROLES_CONSTANT.MANUFACTURER || el.label === ROLES_CONSTANT.RETAILER || el.label === ROLES_CONSTANT.CONTRACTOR)]\r\n\r\n    }\r\n    setrolesOptions(arr)\r\n\r\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  // const roleOptions = [\r\n  //   { value: '', label: 'Select Role' },\r\n  //   { value: 'admin', label: 'Admin' },\r\n  //   { value: 'author', label: 'Author' },\r\n  //   { value: 'editor', label: 'Editor' },\r\n  //   { value: 'maintainer', label: 'Maintainer' },\r\n  //   { value: 'subscriber', label: 'Subscriber' }\r\n  // ]\r\n\r\n  // const planOptions = [\r\n  //   { value: '', label: 'Select Plan' },\r\n  //   { value: 'basic', label: 'Basic' },\r\n  //   { value: 'company', label: 'Company' },\r\n  //   { value: 'enterprise', label: 'Enterprise' },\r\n  //   { value: 'team', label: 'Team' }\r\n  // ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status/View All', number: 0 },\r\n    { value: 'active', label: 'Active', number: true },\r\n    { value: 'inactive', label: 'Inactive', number: false }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    setCurrentPage(1)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n\r\n    return store.data\r\n\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n  }\r\n\r\n\r\n  const handleSelectEdit = (value) => {\r\n    setSelectedUser(value)\r\n    // toggleFn()\r\n  }\r\n\r\n\r\n  const handleStatus = async (id, status) => {\r\n    try {\r\n      const obj = {\r\n        status\r\n      }\r\n      const { data: res } = await approveUserById(id, obj)\r\n      if (res.message) {\r\n        toastSuccess(res.message)\r\n        dispatch(\r\n          getData({\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,\r\n            role: currentRole.value,\r\n            status: currentStatus.value,\r\n            showName: true\r\n          }))\r\n      }\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n\r\n  const handleVerification = async (id, status) => {\r\n    try {\r\n      const obj = {\r\n        isVerified: status\r\n      }\r\n      const { data: res } = await verifyUserById(id, obj)\r\n      if (res.message) {\r\n        toastSuccess(res.message)\r\n        dispatch(\r\n          getData({\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,\r\n            role: currentRole.value,\r\n            status: currentStatus.value,\r\n            showName: true\r\n          }))\r\n      }\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n  const handleisBlocked = async (id, status) => {\r\n    try {\r\n      const obj = {\r\n        isBlocked: status\r\n      }\r\n      const { data: res } = await blockUserById(id, obj)\r\n      if (res.message) {\r\n        toastSuccess(res.message)\r\n        dispatch(\r\n          getData({\r\n            sort,\r\n            sortColumn,\r\n            q: searchTerm,\r\n            page: currentPage,\r\n            perPage: rowsPerPage,\r\n            role: currentRole.value,\r\n            status: currentStatus.value,\r\n            showName: true\r\n          }))\r\n      }\r\n    } catch (error) {\r\n      toastError(error)\r\n    }\r\n  }\r\n\r\n\r\n  // ** Renders Role Columns\r\n  const renderRole = row => {\r\n    const roleObj = {\r\n      USER: {\r\n        class: 'text-primary',\r\n        icon: User\r\n      },\r\n      MANUFACTURER: {\r\n        class: 'text-success',\r\n        icon: Database\r\n      },\r\n      editor: {\r\n        class: 'text-info',\r\n        icon: Edit2\r\n      },\r\n      DISTRIBUTOR: {\r\n        class: 'text-warning',\r\n        icon: Settings\r\n      },\r\n      DEALER: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      },\r\n      APPROVERS: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      },\r\n      RETAILER: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      },\r\n      CONTRACTOR: {\r\n        class: 'text-danger',\r\n        icon: Slack\r\n      }\r\n    }\r\n\r\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n    return (\r\n      <span className='text-truncate text-capitalize align-middle'>\r\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n        {row.role}\r\n      </span>\r\n    )\r\n  }\r\n\r\n\r\n  const columns = [\r\n    {\r\n      name: 'User',\r\n      sortable: true,\r\n      minWidth: '300px',\r\n      sortField: 'fullName',\r\n      selector: row => row.name,\r\n      cell: row => (\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          {/* {renderClient(row)} */}\r\n          <div className='d-flex flex-column'>\r\n            <Link\r\n              to={`/apps/user/view/${row._id}`}\r\n              className='user_name text-truncate text-body'\r\n              onClick={() => dispatch(getUser(row._id))}\r\n            >\r\n              <span className='fw-bolder'>{row.companyObj?.name ? row.companyObj?.name : row.name}</span>\r\n            </Link>\r\n            <small className=' mb-0'>{row.email}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: 'Role',\r\n      sortable: true,\r\n      minWidth: '172px',\r\n      sortField: 'role',\r\n      selector: row => row?.role,\r\n      cell: row => renderRole(row)\r\n    },\r\n    // {\r\n    //   name: 'Plan',\r\n    //   minWidth: '138px',\r\n    //   sortable: true,\r\n    //   sortField: 'currentPlan',\r\n    //   selector: row => row.currentPlan,\r\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n    // },\r\n    // {\r\n    //   name: 'Billing',\r\n    //   minWidth: '230px',\r\n    //   sortable: true,\r\n    //   sortField: 'billing',\r\n    //   selector: row => row.billing,\r\n    //   cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n    // },\r\n    {\r\n      name: 'Approved',\r\n      minWidth: '138px',\r\n      sortable: false,\r\n      sortField: 'approved',\r\n      selector: row => row.approved,\r\n      cell: row => (\r\n        <>\r\n          {\r\n            role !== ROLES_CONSTANT.ADMIN ? <div>You don't have access to approve users</div> : <div className='form-check form-switch'><Input type='switch' name='customSwitch' id='exampleCustomSwitch' checked={row.approved} onChange={() => handleStatus(row._id, !row.approved)} /> </div>\r\n          }\r\n        </>\r\n\r\n      )\r\n    },\r\n    {\r\n      name: 'Blocked Subscription',\r\n      minWidth: '138px',\r\n      sortable: true,\r\n      sortField: 'isBlocked',\r\n      selector: row => row.isBlocked,\r\n      cell: row => (\r\n        <>\r\n          {role !== ROLES_CONSTANT.ADMIN ? <div>You don't have access to block users</div> : <div className='form-check form-switch'><Input type='switch' name='customSwitch' id='exampleCustomSwitch' defaultChecked={row.isBlocked} onChange={() => handleisBlocked(row._id, !row.isBlocked)} /></div>}\r\n        </>\r\n\r\n      )\r\n    },\r\n    {\r\n      name: 'Is Verified',\r\n      minWidth: '138px',\r\n      sortable: false,\r\n      sortField: 'approved',\r\n      selector: row => row.isVerified,\r\n      cell: row => (\r\n        <>\r\n          {role !== ROLES_CONSTANT.ADMIN ? <div>You don't have access to verify users</div> : <div className='form-check form-switch'><Input type='switch' name='customSwitch' id='exampleCustomSwitch' checked={row.isVerified} onChange={() => handleVerification(row._id, !row.isVerified)} /></div>}\r\n        </>\r\n\r\n      )\r\n    },\r\n    {\r\n      name: 'Actions',\r\n      minWidth: '100px',\r\n      sortable: false,\r\n\r\n      cell: row => (\r\n        <>\r\n          <Link color='success' className='btn-sm btn-success asdfasdf' to={`/apps/user/view/${row._id}`}\r\n            onClick={() => dispatch(getUser(row.id))}\r\n          >     <FileText size={14} />\r\n          </Link>\r\n\r\n          <Button color='primary' onClick={(e) => { e.preventDefault(); setSelectedUser(row); setEditModal(true) }} className='ms-2 '\r\n\r\n          >\r\n            <Edit size={14} />\r\n          </Button>\r\n\r\n          {/* <Button color='primary asdfasf'  className='btn-sm ms-2' onClick={togglregister}>\r\n            <User size={14} />\r\n            </Button> */}\r\n          \r\n\r\n          {\r\n            (role !== ROLES_CONSTANT.FIELDUSER && role !== ROLES_CONSTANT.SALES) &&\r\n            <Button color='danger' className='ms-2 btn-sm'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                dispatch(deleteUser(row._id))\r\n              }}\r\n            >    <Trash2 size={14} /></Button>\r\n          }\r\n\r\n        </>\r\n\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Label for='role-select'>Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={rolesOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                onChange={data => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n\r\n            <Col md='4'>\r\n              <Label for='status-select'>Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n\r\n      <Card className='overflow-hidden'>\r\n\r\n        <div className='mx-2 pt-2 pb-3'>\r\n          <Row>\r\n            <Col xl='8' className='d-flex align-items-center p-0'>\r\n              <div className='d-flex align-items-center w-100'>\r\n                <label htmlFor='rows-per-page'>Show</label>\r\n                <Input\r\n                  className='mx-50'\r\n                  type='select'\r\n                  id='rows-per-page'\r\n                  value={rowsPerPage}\r\n                  onChange={handlePerPage}\r\n                  style={{ width: '5rem' }}\r\n                >\r\n                  <option value='10'>10</option>\r\n                  <option value='25'>25</option>\r\n                  <option value='50'>50</option>\r\n                  <option value='100'>100</option>\r\n                  <option value='500'>500</option>\r\n                </Input>\r\n                <label htmlFor='rows-per-page'>Entries</label>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              xl='4'\r\n              className='d-flex justify-content-end'\r\n            >\r\n              <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n                <label className='mb-0' htmlFor='search-invoice'>\r\n                  Search:\r\n                </label>\r\n                <Input\r\n                  id='search-invoice'\r\n                  className='ms-50 w-100'\r\n                  type='text'\r\n                  value={searchTerm}\r\n                  onChange={e => handleFilter(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n                Add New User\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            columns={columns}\r\n            paginationServer\r\n            paginationComponent={CustomPagination}\r\n            // sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            data={store.data}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n      <EditModal open={editModal} toggleFn={(value) => setEditModal(value)} selectedUser={selectedUser} />\r\n      {/* <RegisterModal open={registerModal} togglregister={(value) => setRegisterModal(value)}  /> */}\r\n       {/* const [registerModal, setRegisterModal] = useState(false) */}\r\n      \r\n      \r\n      {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\nimport { useSelector } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst UsersList = () => {\r\n  const store = useSelector(state => state.users)\r\n  const [TotalUsers, setTotalUsers] = useState(0)\r\n  const [TotalDistributors, setTotalDistributors] = useState(0)\r\n  const [TotalManufacturers, setTotalManufacturers] = useState(0)\r\n  const [TotalDealers, setTotalDealers] = useState(0)\r\n  // const [, set] = useState()\r\n  useEffect(() => {\r\n    console.log(store, \"store\")\r\n    if (store) {\r\n      setTotalUsers(store.totalUsers)\r\n      setTotalDistributors(store.totalDistributors)\r\n      setTotalManufacturers(store.totalManufacturers)\r\n      setTotalDealers(store.totalDealers)\r\n    }\r\n  }, [store])\r\n\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalUsers}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Total Manufacturers'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalManufacturers}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Total Dealers'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalDealers}</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Total Distributors'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalDistributors}</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n"],"sourceRoot":""}