{"version":3,"sources":["services/location.service.js","views/apps/user/list/AddModal.js","views/apps/user/list/EditModal.js","views/apps/user/list/Table.js","views/apps/user/list/index.js"],"names":["getCountriesApi","async","axios","get","url","query","getStateByCountryApi","getCityByStateApi","defaultValues","email","phone","company","fullName","lastName","AddModal","open","toggleSidebar","role","useSelector","state","auth","userData","brandNames","setBrandNames","users","salesUsers","useState","natureOfBusiness","setNatureOfBusiness","annualTurnover","setAnnualTurnover","iecCode","setIecCode","yearOfEstablishment","setYearOfEstablishment","legalStatus","setLegalStatus","cinNo","setCinNo","companyCeo","setCompanyCeo","googleMapsLink","setGoogleMapsLink","salesObj","setSalesObj","termsAccepted","setTermsAccepted","name","setname","mobile","setmobile","setemail","whatsapp","setwhatsapp","type","settype","ROLES_CONSTANT","USER","companyName","setcompanyName","companyEmail","setcompanyEmail","companyPhone","setcompanyPhone","gstNumber","setgstNumber","address","setaddress","dob","setdob","noofepmployee","setnoofepmployee","profileImage","setProfileImage","signature","setsignature","gstCertificate","setgstCertificate","landline","setLandline","aniversaryDate","setAniversaryDate","Date","password","setPassword","bannerImage","setBannerImage","salesUsersArr","setSalesUsersArr","categoryArr","setcategoryArr","category","setcategory","countryArr","setcountryArr","stateArr","setstateArr","cityArr","setcityArr","countryId","setcountryId","stateId","setstateId","cityId","setcityId","dispatch","useDispatch","checkIsUser","DISTRIBUTOR","MANUFACTURER","DEALER","control","setValue","setError","handleSubmit","formState","errors","useForm","onSubmit","alert","checkIsValid","obj","companyObj","approved","map","el","categoryId","value","ADMIN","SUBADMIN","APPROVERS","_id","salesId","addUser","useEffect","data","res","console","log","error","handleGetCoutries","getCategoryApi","success","length","toastError","handleNestedCategory","getSalesUsersApi","getAllSalesUsers","handleGetStates","handleGetCities","isOpen","onClosed","key","toggle","className","options","Object","values","filter","label","onChange","e","target","maxLength","style","width","closeMenuOnSelect","isMulti","href","textDecorationLine","country","city","FileUpload","onFileChange","val","moment","format","color","onClick","EditModal","toggleFn","selectedUser","countries","states","cities","tempSalesObj","find","some","ele","documents","image","editUserApi","message","toastSuccess","getAllState","getAllCity","getAllCountry","includes","src","height","generateFilePath","UsersList","store","setSelectedUser","sort","setSort","searchTerm","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","currentStatus","setCurrentStatus","number","rolesOptions","setrolesOptions","editModal","setEditModal","registerModal","setRegisterModal","getAllData","getData","q","page","perPage","status","showName","roleSelect","arr","SALES","FIELDUSER","columns","sortable","minWidth","sortField","selector","row","cell","to","getUser","roleObj","class","icon","User","Database","editor","Edit2","Settings","Slack","Icon","size","renderRole","id","checked","approveUserById","handleStatus","isBlocked","defaultChecked","blockUserById","handleisBlocked","isVerified","verifyUserById","handleVerification","preventDefault","deleteUser","tag","md","for","isClearable","classNamePrefix","theme","selectThemeColors","xl","htmlFor","parseInt","currentTarget","handleFilter","noHeader","pagination","paginationServer","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","TotalUsers","setTotalUsers","TotalDistributors","setTotalDistributors","TotalManufacturers","setTotalManufacturers","TotalDealers","setTotalDealers","totalUsers","totalDistributors","totalManufacturers","totalDealers","lg","sm","StatsHorizontal","statTitle","renderStats","Table"],"mappings":"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","file":"static/js/166.b069a1f4.chunk.js","sourcesContent":["import axios from \"axios\"\nimport url from \"./url.service\"\n\nexport const getCountriesApi = async (query) => {\n    return axios.get(`${url}/country?${query}`)\n}\nexport const getStateByCountryApi = async (query) => {\n    return axios.get(`${url}/state?${query}`)\n}\n\nexport const getCityByStateApi = async (query) => {\n    return axios.get(`${url}/city?${query}`)\n}","// ** React Import\nimport { useEffect, useState } from 'react'\n\n// ** Custom Components\n\n// ** Utils\n\n// ** Third Party Components\nimport { useForm } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport {\n    Button,\n    Modal, ModalBody,\n    ModalHeader\n} from 'reactstrap'\n\n// ** Store & Actions\nimport moment from 'moment'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select from 'react-select'\nimport { getCategoryApi } from '../../../../services/category.service'\nimport { getCityByStateApi, getCountriesApi, getStateByCountryApi } from '../../../../services/location.service'\nimport { getSalesUsersApi } from '../../../../services/user.service'\nimport FileUpload from '../../../../utility/FileUpload'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\nimport { toastError } from '../../../../utility/toastutill'\nimport { addUser } from '../store'\n\nconst defaultValues = {\n    email: '',\n    phone: '',\n    company: '',\n    fullName: '',\n    lastName: ''\n}\n\nconst AddModal = ({ open, toggleSidebar }) => {\n    // ** States\n    const role = useSelector(state => state.auth.userData.role)\n\n    const salesUsers = useSelector(state => state.users.salesUsers)\n    const [brandNames, setBrandNames] = useState(\"\")\n\n    ///////new Fields///////\n    const [natureOfBusiness, setNatureOfBusiness] = useState()\n    const [annualTurnover, setAnnualTurnover] = useState()\n    const [iecCode, setIecCode] = useState()\n    const [yearOfEstablishment, setYearOfEstablishment] = useState()\n    const [legalStatus, setLegalStatus] = useState()\n    const [cinNo, setCinNo] = useState()\n    const [companyCeo, setCompanyCeo] = useState()\n    const [googleMapsLink, setGoogleMapsLink] = useState()\n    const [salesObj, setSalesObj] = useState(null)\n    const [termsAccepted, setTermsAccepted] = useState(false)\n    const [name, setname] = useState(\"\")\n    const [mobile, setmobile] = useState(\"\")\n    const [email, setemail] = useState(\"\")\n    const [whatsapp, setwhatsapp] = useState(\"\")\n    const [type, settype] = useState(ROLES_CONSTANT.USER)\n    const [companyName, setcompanyName] = useState(\"\")\n    const [companyEmail, setcompanyEmail] = useState(\"\")\n    const [companyPhone, setcompanyPhone] = useState(\"\")\n    const [gstNumber, setgstNumber] = useState(\"\")\n    const [address, setaddress] = useState(\"\")\n    const [dob, setdob] = useState(\"\")\n    const [noofepmployee, setnoofepmployee] = useState(\"\")\n    const [profileImage, setProfileImage] = useState(\"\")\n    const [signature, setsignature] = useState(\"\")\n    const [gstCertificate, setgstCertificate] = useState(\"\")\n    const [landline, setLandline] = useState(\"\")\n    const [aniversaryDate, setAniversaryDate] = useState(new Date())\n    const [password, setPassword] = useState(\"\")\n    const [bannerImage, setBannerImage] = useState(\"\")\n\n    const [salesUsersArr, setSalesUsersArr] = useState([])\n\n    const [categoryArr, setcategoryArr] = useState([])\n    const [category, setcategory] = useState(\"\")\n\n\n    const [countryArr, setcountryArr] = useState([])\n    const [stateArr, setstateArr] = useState([])\n    const [cityArr, setcityArr] = useState([])\n    const [countryId, setcountryId] = useState(\"\")\n    const [stateId, setstateId] = useState(\"\")\n    const [cityId, setcityId] = useState(\"\")\n    // ** Store Vars\n    const dispatch = useDispatch()\n    const checkIsUser = () => {\n        if ((type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER)) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n\n    // ** Vars\n    const {\n        control,\n        setValue,\n        setError,\n        handleSubmit,\n        formState: { errors }\n    } = useForm({ defaultValues })\n\n    const checkIsValid = () => {\n        if (`${name}` === \"\") {\n            alert(\"Name is Required\")\n            return\n        }\n        // if (`${mobile}` === \"\") {\n        //     alert(\"Mobile is Required\")\n        //     return 0\n        // }\n        if (!checkIsUser()) {\n            if (`${email}` === \"\") {\n                alert(\"Email is Required\")\n                return 0\n            }\n            if (`${password}` === \"\") {\n                alert(\"Password is Required\")\n                return 0\n            }\n            return true\n        } else {\n            // if (`${salesObj.value}` === \"\") {\n            //     alert(\"Sales employee is Required\")\n            //     return 0\n            // }\n        }\n\n        if (`${companyName}` === \"\") {\n            alert(\"Organization Name is Required\")\n            return 0\n        }\n        // if (`${companyEmail}` === \"\") {\n        //     alert(\"Organization Email is Required\")\n        //     return 0\n        // }\n        // if (`${companyPhone}` === \"\") {\n        //     alert(\"Organization Phone is Required\")\n        //     return 0\n        // }\n        if (`${gstNumber}` === \"\") {\n            alert(\"Gst is Required\")\n            return 0\n        }\n        if (`${address}` === \"\") {\n            alert(\"Address is Required\")\n            return 0\n        }\n        if (`${countryId}` === \"\") {\n            alert(\"Country is Required\")\n            return 0\n        }\n        if (`${stateId}` === \"\") {\n            alert(\"State is Required\")\n            return 0\n        }\n        if (`${cityId}` === \"\") {\n            alert(\"City is Required\")\n            return 0\n        }\n        if (`${yearOfEstablishment}` === \"\") {\n            alert(\"Year of Establishment is Required\")\n            return 0\n        }\n\n\n        return true\n    }\n\n    // ** Function to handle form submit\n    const onSubmit = () => {\n        if (checkIsValid()) {\n            toggleSidebar()\n\n\n            const obj = {\n                name,\n                email,\n                phone: mobile,\n\n                role: type,\n                companyObj: {},\n                approved: true\n            }\n\n\n            if (!checkIsUser()) {\n\n                obj.password = password\n            } else {\n                obj.dob = dob\n                obj.address = address\n                obj.brandNames = brandNames\n                obj.whatsapp = whatsapp\n                obj.gstNumber = gstNumber\n                obj.countryId = countryId\n                obj.stateId = stateId\n                obj.cityId = cityId\n                obj.aniversaryDate = aniversaryDate\n                obj.landline = landline\n                obj.gstCertificate = gstCertificate\n                obj.bannerImage = bannerImage\n                obj.profileImage = profileImage\n                obj.categoryArr = category.map(el => ({ categoryId: el.value }))\n            }\n            if (type !== ROLES_CONSTANT.ADMIN && type !== ROLES_CONSTANT.SUBADMIN && type !== ROLES_CONSTANT.APPROVERS && type !== ROLES_CONSTANT.USER) {\n\n                obj.companyObj.name = companyName\n                obj.companyObj.email = companyEmail\n                obj.companyObj.phone = companyPhone\n                obj.companyObj.address = address\n                obj.companyObj.gstNumber = gstNumber\n                obj.companyObj.noofepmployee = noofepmployee\n                obj.companyObj.yearOfEstablishment = yearOfEstablishment\n                obj.companyObj.natureOfBusiness = natureOfBusiness\n                obj.companyObj.googleMapsLink = googleMapsLink\n                obj.companyName = companyName\n                obj.companyEmail = companyEmail\n                obj.companyPhone = companyPhone\n                obj.gstNumber = gstNumber\n                obj.dob = dob\n                obj.profileImage = profileImage\n                obj.signature = signature\n                obj.gstCertificate = gstCertificate\n                obj.countryId = countryId\n                obj.stateId = stateId\n                obj.cityId = cityId\n            }\n            if (salesObj && salesObj?._id) {\n                obj.salesId = salesObj?._id\n            }\n            dispatch(\n                addUser(obj)\n            )\n        }\n    }\n\n    const handleSidebarClosed = () => {\n        for (const key in defaultValues) {\n            console.log(key)\n            setValue(key, '')\n        }\n    }\n\n\n    const handleGetCoutries = async () => {\n        try {\n            const { data: res } = await getCountriesApi()\n            console.log(res.data, \"data\")\n            if (res.data) {\n                setcountryArr(res.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleNestedCategory = async () => {\n        try {\n            const { data: res } = await getCategoryApi()\n            if (res.success && res.data.length) {\n                setcategoryArr(res.data)\n            }\n\n        } catch (error) {\n            console.error(error)\n            toastError(error)\n        }\n    }\n\n\n    const handleGetStates = async (countryId) => {\n        try {\n            const { data: res } = await getStateByCountryApi(`countryId=${countryId}`)\n            if (res.data) {\n                setstateArr(res.data)\n            } else {\n                setstateArr([])\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleGetCities = async (stateId) => {\n        try {\n            const { data: res } = await getCityByStateApi(`stateId=${stateId}`)\n            if (res.data) {\n                setcityArr(res.data)\n            } else {\n                setcityArr([])\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getAllSalesUsers = async () => {\n        try {\n            const { data: res } = await getSalesUsersApi()\n            if (res) {\n                setSalesUsersArr(res.data)\n            }\n        } catch (error) {\n            toastError(error)\n        }\n    }\n\n    useEffect(() => {\n        handleGetCoutries()\n        handleNestedCategory()\n        getAllSalesUsers()\n    }, [])\n    useEffect(() => {\n        if (countryId) {\n            console.log(countryId, \"countryId\")\n            handleGetStates(countryId)\n        }\n    }, [countryId])\n\n    useEffect(() => {\n        if (stateId) {\n            handleGetCities(stateId)\n        }\n    }, [stateId])\n\n\n    return (\n        <>\n            <Modal\n                isOpen={open}\n                onClosed={handleSidebarClosed}\n                toggle={toggleSidebar}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\n                <ModalBody className='px-3 pb-3'>\n                    <div className='text-center'>\n                        <h2>Add User</h2>\n                    </div>\n\n                    <label>Role <span className=\"text-danger\">*</span>  </label>\n                    <Select options={\n                        Object.values(ROLES_CONSTANT).filter((el) => el !== 'ADMIN' && ((role !== ROLES_CONSTANT.APPROVERS && el !== ROLES_CONSTANT.APPROVERS))).map(el => ({ label: el, value: el }))\n                    }\n                        value={{ value: type, label: type }}\n                        onChange={(e) => settype(e.value)}\n                    />\n                    \n\n                    {(type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER) &&\n                        <div className=\"row\">\n\n                            <div className=\"col-md-6 mt-2\">\n                                <label>Name of Organization <span className=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={companyName}\n                                    onChange={(e) => setcompanyName(e.target.value)}\n                                />\n                            </div>\n                         \n                            <div className=\"col-md-6 mt-2\">\n                                <label>Organization Phone / Landline</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={companyPhone}\n                                    onChange={(e) => setcompanyPhone(e.target.value)}\n                                    maxLength=\"10\"\n                                />\n                            </div>\n                            {/* <div className=\"col-md-6 mt-2\">\n                                <label>Landline Number <span className=\"text-danger\">*</span> </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={landline}\n                                    onChange={(e) => setLandline(e.target.value)}\n                                />\n                            </div> */}\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Year of Establishment <span className=\"text-danger\">*</span> </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={yearOfEstablishment}\n                                    onChange={(e) => setYearOfEstablishment(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <div style={{ width: \"max-content\" }}>\n                                    <label>Category <span className=\"text-danger me-2\">*</span>\n                                    </label>\n                                </div>\n                                <Select className='form-control' options={categoryArr && categoryArr.length > 0 && categoryArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={category} closeMenuOnSelect={false} onChange={(e) => setcategory(e)} isMulti />\n\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Dealing With Brand Names </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={brandNames}\n                                    onChange={(e) => setBrandNames(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Google Maps Link  </label>\n                                <a href=\"https://www.google.com/maps\" target=\"_blank\" style={{ textDecorationLine: \"underline\" }}> Click to open google maps</a>\n                                <br />\n                                <br />\n                                <span>Note : The link above will take you to google maps where you can select the your business's location to get the link and paste it in the text input given below</span>\n                                <br />\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={googleMapsLink}\n                                    onChange={(e) => setGoogleMapsLink(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-12 mt-2\">\n                                <label> Address <span className=\"text-danger\">*</span></label>\n                                <textarea\n                                    className=\"form-control\"\n                                    value={address}\n                                    onChange={(e) => setaddress(e.target.value)}\n                                ></textarea>\n                            </div>\n                            <div className=\"col-md-4 mt-2\">\n                                <label> Country <span className=\"text-danger\">*</span></label>\n                                {\n                                    countryArr && (\n                                        <select className=\"form-control\" onChange={(e) => setcountryId(e.target.value)}>\n                                            <option value=\"\">Please Select Country</option>\n                                            {countryArr.map((country) => (\n                                                <option value={country._id} >{country.name}</option>\n                                            ))}\n                                        </select>\n                                    )\n                                }\n                            </div>\n                            <div className=\"col-md-4 mt-2\">\n                                <label> State <span className=\"text-danger\">*</span></label>\n                                {\n                                    stateArr && (\n                                        <select className=\"form-control\" onChange={(e) => setstateId(e.target.value)}>\n                                            <option value=\"\">Please Select State</option>\n                                            {stateArr.map((state) => (\n                                                <option value={state._id} >{state.name}</option>\n                                            ))}\n                                        </select>\n                                    )\n                                }\n                            </div>\n                            <div className=\"col-md-4 mt-2\">\n                                <label> City <span className=\"text-danger\">*</span></label>\n                                {\n                                    cityArr && (\n                                        <select className=\"form-control\" onChange={(e) => setcityId(e.target.value)}>\n                                            <option value=\"\">Please Select City</option>\n                                            {cityArr.map((city) => (\n                                                <option value={city._id} >{city.name}</option>\n                                            ))}\n                                        </select>\n                                    )\n                                }\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Profile Photo</label>\n\n                                <FileUpload onFileChange={(val) => { setProfileImage(val) }} />\n                            </div>\n\n\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Banner Photo  (Exterior/Interior Image of your Showroom/Unit)</label>\n\n                                <FileUpload onFileChange={(val) => setBannerImage(val)} />\n                            </div>\n                            {/* <div className=\"col-md-6 mt-2\">\n                                <label> Nature of your business</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={natureOfBusiness}\n                                    onChange={(e) => setNatureOfBusiness(e.target.value)}\n                                />\n                            </div> */}\n                            <div className=\"col-md-6 mt-2\">\n                                <label> GST No <span className=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={gstNumber}\n                                    onChange={(e) => setgstNumber(e.target.value)}\n                                />\n                            </div>\n{/* \n                            <div className=\"col-md-6 mt-2\">\n                                <label>Sales</label>\n                                <Select className='form-control' options={salesUsersArr && salesUsersArr.length > 0 && salesUsersArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={salesObj} onChange={(e) => setSalesObj(e)} />\n\n                            </div> */}\n\n\n                        </div>\n                    }\n                    <div className='row'>\n\n                        <h4 className=\"heading yellow mt-4\">{checkIsUser() ? \"Contact Person Details\" : \"\"}</h4>\n                        <div className=\"col-md-6 mt-2\">\n                            <label>{checkIsUser() ? \"Name of Authorised person\" : \"Name\"}<span className=\"text-danger\">*</span></label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={name}\n                                onChange={(e) => setname(e.target.value)}\n                            />\n                        </div>\n                  <div className=\"col-md-6 mt-2\">\n                            <label>Email <span className=\"text-danger\">*</span> </label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setemail(e.target.value)}\n                            />\n                        </div> \n                        <div className=\"col-md-6 mt-2\">\n                            <label>Date of Birth </label>\n                            <input\n                                type=\"date\"\n                                className=\"form-control\"\n                                value={moment(aniversaryDate).format(\"YYYY-MM-DD\")}\n                                onChange={(e) => setAniversaryDate(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-md-6 mt-2\">\n                            <label>Your Email Id <span className=\"text-danger\">*</span> </label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setemail(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"col-md-6 mt-2\">\n                                    <label>Whatsapp No.</label>\n                                    <input\n                                        type=\"tel\"\n                                        className=\"form-control\"\n                                        value={whatsapp}\n                                        onChange={(e) => setwhatsapp(e.target.value)}\n                                        maxLength=\"10\"\n                                    />\n                                </div>\n                        <div className=\"col-md-6 mt-2\">\n                            <label>Mobile No. </label>\n                            <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                value={mobile}\n                                onChange={(e) => setmobile(e.target.value)}\n                                maxLength=\"10\"\n                            />\n                        </div>\n                    \n                        {\n                            !checkIsUser() &&\n                            <>\n\n                                <div className=\"col-md-6 mt-2\">\n                                    <label>Whatsapp No.</label>\n                                    <input\n                                        type=\"tel\"\n                                        className=\"form-control\"\n                                        value={whatsapp}\n                                        onChange={(e) => setwhatsapp(e.target.value)}\n                                        maxLength=\"10\"\n                                    />\n                                </div>\n\n                                <div className=\"col-md-6 mt-2\">\n                                    <label>Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n                            </>\n                        }\n                    </div>\n\n                    <div className=\"col-md-12 mt-2\">\n                        <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\n                            Submit\n                        </Button>\n                    </div>\n\n\n                </ModalBody>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default AddModal\n","// ** React Import\nimport { useEffect, useState } from 'react'\n\n// ** Custom Components\n\n// ** Utils\n\n// ** Third Party Components\nimport { useForm } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport {\n    Button, Form, Input, Label, Modal, ModalBody,\n    ModalHeader\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\nimport FileUpload from '../../../../utility/FileUpload'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\nimport { getAllCity } from '../../../location/City/store'\nimport { getAllCountry } from '../../../location/Country/store'\nimport { getAllState } from '../../../location/State/store'\nimport { addUser, editUser } from '../store'\nimport { generateFilePath } from '../../../../services/url.service'\nimport { editUserApi, getSalesUsersApi } from '../../../../services/user.service'\nimport { getCityByStateApi, getCountriesApi, getStateByCountryApi } from '../../../../services/location.service'\nimport { getCategoryApi } from '../../../../services/category.service'\nimport Select from 'react-select'\nimport moment from 'moment'\n\nconst defaultValues = {\n    email: '',\n    phone: '',\n    company: '',\n    fullName: '',\n    lastName: ''\n}\n\nconst EditModal = ({ open, toggleFn, selectedUser }) => {\n    // ** States\n    const country = useSelector(state => state.countries.countries)\n    const states = useSelector(state => state.states.states) // states\n    const city = useSelector(state => state.cities.cities)\n\n    const role = useSelector(state => state.auth.userData.role)\n    const store = useSelector(state => state.users)\n\n    const [brandNames, setBrandNames] = useState(\"\")\n\n    ///////new Fields///////\n    const [natureOfBusiness, setNatureOfBusiness] = useState()\n    const [annualTurnover, setAnnualTurnover] = useState()\n    const [iecCode, setIecCode] = useState()\n    const [yearOfEstablishment, setYearOfEstablishment] = useState()\n    const [legalStatus, setLegalStatus] = useState()\n    const [cinNo, setCinNo] = useState()\n    const [companyCeo, setCompanyCeo] = useState()\n    const [googleMapsLink, setGoogleMapsLink] = useState()\n    const [salesObj, setSalesObj] = useState(null)\n    const [termsAccepted, setTermsAccepted] = useState(false)\n    const [name, setname] = useState(\"\")\n    const [mobile, setmobile] = useState(\"\")\n    const [email, setemail] = useState(\"\")\n    const [whatsapp, setwhatsapp] = useState(\"\")\n    const [type, settype] = useState(ROLES_CONSTANT.USER)\n    const [companyName, setcompanyName] = useState(\"\")\n    const [companyEmail, setcompanyEmail] = useState(\"\")\n    const [companyPhone, setcompanyPhone] = useState(\"\")\n    const [gstNumber, setgstNumber] = useState(\"\")\n    const [address, setaddress] = useState(\"\")\n    const [dob, setdob] = useState(\"\")\n    const [noofepmployee, setnoofepmployee] = useState(\"\")\n    const [profileImage, setProfileImage] = useState(\"\")\n    const [signature, setsignature] = useState(\"\")\n    const [gstCertificate, setgstCertificate] = useState(\"\")\n    const [landline, setLandline] = useState(\"\")\n    const [aniversaryDate, setAniversaryDate] = useState(new Date())\n    const [password, setPassword] = useState(\"\")\n    const [bannerImage, setBannerImage] = useState(\"\")\n\n    const [salesUsersArr, setSalesUsersArr] = useState([])\n\n    const [categoryArr, setcategoryArr] = useState([])\n    const [category, setcategory] = useState(\"\")\n\n\n    const [countryArr, setcountryArr] = useState([])\n    const [stateArr, setstateArr] = useState([])\n    const [cityArr, setcityArr] = useState([])\n    const [countryId, setcountryId] = useState(\"\")\n    const [stateId, setstateId] = useState(\"\")\n    const [cityId, setcityId] = useState(\"\")\n    // ** Store Vars\n\n    const checkIsUser = () => {\n        if ((type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER)) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const handleGetCoutries = async () => {\n        try {\n            const { data: res } = await getCountriesApi()\n            console.log(res.data, \"data\")\n            if (res.data) {\n                setcountryArr(res.data)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleNestedCategory = async () => {\n        try {\n            const { data: res } = await getCategoryApi()\n            if (res.success && res.data.length) {\n                setcategoryArr(res.data)\n            }\n\n        } catch (error) {\n            console.error(error)\n            toastError(error)\n        }\n    }\n\n\n    const handleGetStates = async (countryId) => {\n        try {\n            const { data: res } = await getStateByCountryApi(`countryId=${countryId}`)\n            if (res.data) {\n                setstateArr(res.data)\n            } else {\n                setstateArr([])\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleGetCities = async (stateId) => {\n        try {\n            const { data: res } = await getCityByStateApi(`stateId=${stateId}`)\n            if (res.data) {\n                setcityArr(res.data)\n            } else {\n                setcityArr([])\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const getAllSalesUsers = async () => {\n        try {\n            const { data: res } = await getSalesUsersApi()\n            if (res) {\n                setSalesUsersArr(res.data)\n            }\n        } catch (error) {\n            toastError(error)\n        }\n    }\n\n    useEffect(() => {\n        handleGetCoutries()\n        handleNestedCategory()\n        getAllSalesUsers()\n    }, [])\n    useEffect(() => {\n        if (countryId) {\n            console.log(countryId, \"countryId\")\n            handleGetStates(countryId)\n        }\n    }, [countryId])\n\n    useEffect(() => {\n        if (stateId) {\n            handleGetCities(stateId)\n        }\n    }, [stateId])\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (salesUsersArr && salesUsersArr.length > 0 && selectedUser && selectedUser.salesId) {\n            const tempSalesObj = salesUsersArr.find(el => el._id === selectedUser.salesId)\n\n            if (tempSalesObj) {\n                setSalesObj({ label: tempSalesObj.name, value: tempSalesObj._id })\n            }\n        }\n    }, [salesUsersArr, selectedUser])\n\n    useEffect(() => {\n        if (categoryArr && categoryArr.length > 0 && selectedUser && selectedUser.categoryArr) {\n            const tempSalesObj = categoryArr.filter(el => selectedUser.categoryArr.some(ele => ele.categoryId === el._id))\n\n            if (tempSalesObj) {\n                setcategory(tempSalesObj.map((el) => ({ label: el.name, value: el._id })))\n            }\n        }\n    }, [categoryArr, selectedUser])\n    useEffect(() => {\n\n        if (selectedUser && selectedUser.name) {\n\n            settype(selectedUser.role)\n            // obj.password = password\n            setdob(selectedUser?.dob)\n            setaddress(selectedUser?.address)\n            setBrandNames(selectedUser?.brandNames)\n            setwhatsapp(selectedUser?.whatsapp)\n            setgstNumber(selectedUser?.companyObj?.gstNumber)\n            setAniversaryDate(selectedUser?.aniversaryDate)\n            setLandline(selectedUser?.landline)\n            setgstCertificate(selectedUser?.gstCertificate)\n            setBannerImage(selectedUser?.bannerImage)\n            setProfileImage(selectedUser?.profileImage)\n            // setcategory(selectedUser?.category.map(el => ({ categoryId: el.value })))\n            setcompanyName(selectedUser?.companyObj?.name)\n            setcompanyEmail(selectedUser?.companyObj?.email)\n            setcompanyPhone(selectedUser?.companyObj?.phone)\n            setcountryId(selectedUser?.countryId)\n            setstateId(selectedUser?.stateId)\n            setcityId(selectedUser?.cityId)\n            setaddress(selectedUser?.companyObj?.address)\n            setname(selectedUser?.name)\n            setemail(selectedUser?.email)\n            setdob(selectedUser?.dob)\n            setmobile(selectedUser?.phone)\n            setYearOfEstablishment(selectedUser?.companyObj?.yearOfEstablishment)\n            setNatureOfBusiness(selectedUser?.companyObj?.natureOfBusiness)\n            setGoogleMapsLink(selectedUser?.companyObj?.googleMapsLink)\n            // salesId = salesObj?._id\n            // companyObj.address = address\n            // companyObj.gstNumber = gstNumber\n            // companyObj.noofepmployee = noofepmployee\n        }\n\n        console.log(selectedUser?.documents && selectedUser?.documents.length > 0 && selectedUser?.documents.filter(el => el?.name === \"gstCertificate\")[0]?.image)\n\n        console.log(selectedUser, \"selectedUser\")\n    }, [selectedUser])\n\n    useEffect(() => {\n        setcityArr(city)\n\n    }, [city])\n\n    useEffect(() => {\n        setstateArr(states)\n    }, [states])\n\n    useEffect(() => {\n        setcountryArr(country)\n    }, [country])\n\n    // ** Vars\n    const {\n        control,\n        setValue,\n        setError,\n        handleSubmit,\n        formState: { errors }\n    } = useForm({ defaultValues })\n\n    const checkIsValid = () => {\n        if (`${name}` === \"\") {\n            alert(\"Name is Required\")\n            return\n        }\n        // if (`${mobile}` === \"\") {\n        //     alert(\"Mobile is Required\")\n        //     return 0\n        // }\n        if (!checkIsUser()) {\n            if (`${email}` === \"\") {\n                alert(\"Email is Required\")\n                return 0\n            }\n            if (`${password}` === \"\") {\n                alert(\"Password is Required\")\n                return 0\n            }\n            return true\n        } else {\n            // if ((salesUsersArr?.length > 0)  && !(salesObj || salesObj?.value || salesObj?.value === \"\")) {\n            //     alert(\"Sales employee is Required\")\n            //     return 0\n            // }\n            // if (!(category && category.length >= 0)) {\n            //     alert(\"Please select atleast one category\")\n            //     return 0\n            // }\n\n        }\n\n        if (`${companyName}` === \"\") {\n            alert(\"Organization Name is Required\")\n            return 0\n        }\n        // if (`${companyEmail}` === \"\") {\n        //     alert(\"Organization Email is Required\")\n        //     return 0\n        // }\n        // if (`${companyPhone}` === \"\") {\n        //     alert(\"Organization Phone is Required\")\n        //     return 0\n        // }\n        if (`${gstNumber}` === \"\") {\n            alert(\"Gst is Required\")\n            return 0\n        }\n        if (`${address}` === \"\") {\n            alert(\"Address is Required\")\n            return 0\n        }\n        if (`${countryId}` === \"\") {\n            alert(\"Country is Required\")\n            return 0\n        }\n        if (`${stateId}` === \"\") {\n            alert(\"State is Required\")\n            return 0\n        }\n        if (`${cityId}` === \"\") {\n            alert(\"City is Required\")\n            return 0\n        }\n        if (`${yearOfEstablishment}` === \"\") {\n            alert(\"Year of Establishment is Required\")\n            return 0\n        }\n\n\n        return true\n    }\n\n    // ** Function to handle form submit\n    const onSubmit = async () => {\n        try {\n\n            if (checkIsValid()) {\n                console.log(\"onSubmit\")\n                const obj = {\n                    name,\n                    email,\n                    phone: mobile,\n\n                    role: type,\n                    companyObj: {},\n                    approved: true\n                }\n\n                if (!checkIsUser()) {\n\n                    obj.password = password\n                } else {\n                    obj.dob = dob\n                    obj.address = address\n                    obj.brandNames = brandNames\n                    obj.whatsapp = whatsapp\n                    obj.gstNumber = gstNumber\n                    obj.countryId = countryId\n                    obj.stateId = stateId\n                    obj.cityId = cityId\n                    obj.aniversaryDate = aniversaryDate\n                    obj.landline = landline\n                    obj.gstCertificate = gstCertificate\n                    obj.bannerImage = bannerImage\n                    obj.profileImage = profileImage\n                    obj.categoryArr = category.map(el => ({ categoryId: el.value }))\n                }\n                if (type !== ROLES_CONSTANT.ADMIN && type !== ROLES_CONSTANT.SUBADMIN && type !== ROLES_CONSTANT.APPROVERS && type !== ROLES_CONSTANT.USER) {\n\n                    obj.companyObj.name = companyName\n                    obj.companyObj.email = companyEmail\n                    obj.companyObj.phone = companyPhone\n                    obj.companyObj.address = address\n                    obj.companyObj.gstNumber = gstNumber\n                    obj.companyObj.noofepmployee = noofepmployee\n                    obj.companyObj.yearOfEstablishment = yearOfEstablishment\n                    obj.companyObj.googleMapsLink = googleMapsLink\n                    obj.companyObj.natureOfBusiness = natureOfBusiness\n                    obj.companyName = companyName\n                    obj.companyEmail = companyEmail\n                    obj.companyPhone = companyPhone\n                    obj.gstNumber = gstNumber\n                    obj.dob = dob\n                    obj.profileImage = profileImage\n                    obj.signature = signature\n                    obj.gstCertificate = gstCertificate\n                    obj.countryId = countryId\n                    obj.stateId = stateId\n                    obj.cityId = cityId\n                }\n                if (salesObj && salesObj?._id) {\n                    obj.salesId = salesObj?._id\n                }\n\n\n                console.log(\"onSubmit\")\n                const { data: res } = await editUserApi(obj, selectedUser._id)\n                if (res.message) {\n                    toastSuccess(res.message)\n                    toggleFn()\n                }\n\n                // dispatch(\n                //     editUser(obj, selectedUser._id)\n                // )\n                console.log(\"onSubmit\")\n            }\n        } catch (error) {\n            toastError(error)\n        }\n\n    }\n\n    const handleSidebarClosed = () => {\n        for (const key in defaultValues) {\n            console.log(key)\n            setValue(key, '')\n        }\n    }\n\n    useEffect(() => {\n        if (countryId) {\n            dispatch(getAllState(`countryId=${countryId}`))\n        }\n    }, [countryId])\n\n    useEffect(() => {\n        if (stateId) {\n            dispatch(getAllCity(`stateId=${stateId}`))\n        }\n    }, [stateId])\n\n    useEffect(() => {\n        dispatch(getAllCountry())\n        // dispatch(getAllCity())\n        dispatch(getAllState())\n    }, [])\n\n    return (\n        <>\n            <Modal\n                isOpen={open}\n                onClosed={() => toggleFn()}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={() => toggleFn()}></ModalHeader>\n                <ModalBody className='px-3 pb-3'>\n                    <div className='text-center'>\n                        <h2>Edit User</h2>\n                    </div>\n\n                    <label>Role <span className=\"text-danger\">*</span>  </label>\n                    <Select options={\n                        Object.values(ROLES_CONSTANT).filter((el) => el !== 'ADMIN' && ((role !== ROLES_CONSTANT.APPROVERS && el !== ROLES_CONSTANT.APPROVERS))).map(el => ({ label: el, value: el }))\n                    }\n                        value={{ value: type, label: type }}\n                        onChange={(e) => settype(e.value)}\n                    />\n\n                    {(type === ROLES_CONSTANT.DISTRIBUTOR || type === ROLES_CONSTANT.MANUFACTURER || type === ROLES_CONSTANT.DEALER) &&\n                        <div className=\"row\">\n\n                            <div className=\"col-md-6 mt-2\">\n                                <label>Name of Organization <span className=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={companyName}\n                                    onChange={(e) => setcompanyName(e.target.value)}\n                                />\n                            </div>\n                         \n                            <div className=\"col-md-6 mt-2\">\n                                <label>Organization Phone / Landline</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={companyPhone}\n                                    onChange={(e) => setcompanyPhone(e.target.value)}\n                                    maxLength=\"10\"\n                                />\n                            </div>\n                            {/* <div className=\"col-md-6 mt-2\">\n                                <label>Landline Number </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={landline}\n                                    onChange={(e) => setLandline(e.target.value)}\n                                />\n                            </div> */}\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Year of Establishment <span className=\"text-danger\">*</span> </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={yearOfEstablishment}\n                                    onChange={(e) => setYearOfEstablishment(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <div style={{ width: \"max-content\" }}>\n                                    <label>Category <span className=\"text-danger me-2\">*</span>\n                                    </label>\n                                </div>\n                                <Select className='form-control' options={categoryArr && categoryArr.length > 0 && categoryArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={category} closeMenuOnSelect={false} onChange={(e) => setcategory(e)} isMulti />\n\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Dealing With Brand Names </label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={brandNames}\n                                    onChange={(e) => setBrandNames(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Google Maps Link </label>\n                                <a href=\"https://www.google.com/maps\" target=\"_blank\" style={{ textDecorationLine: \"underline\" }}> Click to open google maps</a>\n                                <br />\n                                <br />\n                                <span>Note : The link above will take you to google maps where you can select the your business's location to get the link and paste it in the text input given below</span>\n                                <br />\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={googleMapsLink}\n                                    onChange={(e) => setGoogleMapsLink(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-md-12 mt-2\">\n                                <label> Address <span className=\"text-danger\">*</span></label>\n                                <textarea\n                                    className=\"form-control\"\n                                    value={address}\n                                    onChange={(e) => setaddress(e.target.value)}\n                                ></textarea>\n                            </div>\n                            <div className=\"col-md-4 mt-2\">\n                                <label> Country <span className=\"text-danger\">*</span></label>\n                                {\n                                    countryArr && (\n                                        <select className=\"form-control\" value={countryId} onChange={(e) => setcountryId(e.target.value)}>\n                                            <option value=\"\">Please Select Country</option>\n                                            {countryArr.map((country) => (\n                                                <option value={country._id} >{country.name}</option>\n                                            ))}\n                                        </select>\n                                    )\n                                }\n                            </div>\n                            <div className=\"col-md-4 mt-2\">\n                                <label> State <span className=\"text-danger\">*</span></label>\n                                {\n                                    stateArr && (\n                                        <select className=\"form-control\" value={stateId} onChange={(e) => setstateId(e.target.value)}>\n                                            <option value=\"\">Please Select State</option>\n                                            {stateArr.map((state) => (\n                                                <option value={state._id} >{state.name}</option>\n                                            ))}\n                                        </select>\n                                    )\n                                }\n                            </div>\n                            <div className=\"col-md-4 mt-2\">\n                                <label> City <span className=\"text-danger\">*</span></label>\n                                {\n                                    cityArr && (\n                                        <select className=\"form-control\" value={cityId} onChange={(e) => setcityId(e.target.value)}>\n                                            <option value=\"\">Please Select City</option>\n                                            {cityArr.map((city) => (\n                                                <option value={city._id} >{city.name}</option>\n                                            ))}\n                                        </select>\n                                    )\n                                }\n                            </div>\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Profile Photo</label>\n\n                                <div>\n                                    {\n                                       profileImage && profileImage.includes(\"base64\") ? <img src={profileImage} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(profileImage)} style={{ height: 100, width: 100 }} />\n                                    }\n                                </div>\n\n                                <FileUpload onFileChange={(val) => { setProfileImage(val) }} />\n                            </div>\n\n\n                            <div className=\"col-md-6 mt-2\">\n                                <label> Banner (Image of your Showroom)</label>\n\n                                <div>\n                                    {\n                                      profileImage &&  profileImage.includes(\"base64\") ? <img src={generateFilePath(bannerImage)} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(bannerImage)} style={{ height: 100, width: 100 }} />\n                                    }\n                                </div>\n\n                                <FileUpload onFileChange={(val) => setBannerImage(val)} />\n                            </div>\n                            {/* <div className=\"col-md-6 mt-2\">\n                                <label> Nature of your business</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={natureOfBusiness}\n                                    onChange={(e) => setNatureOfBusiness(e.target.value)}\n                                />\n                            </div> */}\n                            <div className=\"col-md-6 mt-2\">\n                                <label> GST No <span className=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    value={gstNumber}\n                                    onChange={(e) => setgstNumber(e.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"col-md-6 mt-2\">\n                                <label>Sales</label>\n                                <Select className='form-control' options={salesUsersArr && salesUsersArr.length > 0 && salesUsersArr.map((el) => ({ ...el, label: el.name, value: el._id }))} value={salesObj} onChange={(e) => setSalesObj(e)} />\n\n                            </div>\n\n\n                        </div>\n                    }\n                    <div className='row'>\n\n                        <h4 className=\"heading yellow mt-4\">{checkIsUser() ? \"Contact Person Details\" : \"\"}</h4>\n                        <div className=\"col-md-6 mt-2\">\n                            <label>{checkIsUser() ? \"Name of Authorised person\" : \"Name\"}<span className=\"text-danger\">*</span></label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={name}\n                                onChange={(e) => setname(e.target.value)}\n                            />\n                        </div>\n                      <div className=\"col-md-6 mt-2\">\n                            <label>Email <span className=\"text-danger\">*</span> </label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setemail(e.target.value)}\n                            />\n                        </div> <div className=\"col-md-6 mt-2\">\n                            <label>Date of Birth  </label>\n                            <input\n                                type=\"date\"\n                                className=\"form-control\"\n                                value={ moment(aniversaryDate).format(\"YYYY-MM-DD\")}\n                                onChange={(e) => setAniversaryDate(e.target.value)}\n                            />\n                        </div>\n                        \n                        <div className=\"col-md-6 mt-2\">\n                            <label>Mobile No. <span className=\"text-danger\">*</span></label>\n                            <input\n                                type=\"tel\"\n                                className=\"form-control\"\n                                value={mobile}\n                                onChange={(e) => setmobile(e.target.value)}\n                                maxLength=\"10\"\n                            />\n                        </div>\n                        {\n                            !checkIsUser() &&\n                            <>\n\n                                <div className=\"col-md-6 mt-2\">\n                                    <label>Whatsapp No.</label>\n                                    <input\n                                        type=\"tel\"\n                                        className=\"form-control\"\n                                        value={whatsapp}\n                                        onChange={(e) => setwhatsapp(e.target.value)}\n                                        maxLength=\"10\"\n                                    />\n                                </div>\n\n                                <div className=\"col-md-6 mt-2\">\n                                    <label>Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n                            </>\n                        }\n                    </div>\n\n                    <div className=\"col-md-12 mt-2\">\n                        <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\n                            Submit\n                        </Button>\n                    </div>\n\n\n                </ModalBody>\n            </Modal>\n        </>\n        // <Sidebar\n        //   size='lg'\n        //   open={open}\n        //   title='New User'\n        //   headerClassName='mb-1'\n        //   contentClassName='pt-0'\n        //   toggleFn={toggleFn}\n        //   onClosed={handleSidebarClosed}\n        // >\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='fullName'>\n        //         Full Name <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='fullName'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='lastName'>\n        //         lastName <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='lastName'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='userEmail'>\n        //         Email <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='email'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input\n        //             type='email'\n        //             id='userEmail'\n        //             placeholder='john.doe@example.com'\n        //             invalid={errors.email && true}\n        //             {...field}\n        //           />\n        //         )}\n        //       />\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        //     </div>\n\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='phone'>\n        //         phone <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='phone'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='company'>\n        //         Company <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='company'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='country'>\n        //         Country <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='country'\n        //         control={control}\n        //         render={({ field }) => (\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n        //           <Select\n        //             isClearable={false}\n        //             classNamePrefix='select'\n        //             options={countryOptions}\n        //             theme={selectThemeColors}\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n        //             {...field}\n        //           />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='user-role'>\n        //         User Role\n        //       </Label>\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n        //         <option value='subscriber'>Subscriber</option>\n        //         <option value='editor'>Editor</option>\n        //         <option value='maintainer'>Maintainer</option>\n        //         <option value='author'>Author</option>\n        //         <option value='admin'>Admin</option>\n        //       </Input>\n        //     </div>\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n        //       <Label className='form-label' for='select-plan'>\n        //         Select Plan\n        //       </Label>\n        //       <Input type='select' id='select-plan' name='select-plan'>\n        //         <option value='basic'>Basic</option>\n        //         <option value='enterprise'>Enterprise</option>\n        //         <option value='company'>Company</option>\n        //         <option value='team'>Team</option>\n        //       </Input>\n        //     </div>\n        //     <Button type='submit' className='me-1' color='primary'>\n        //       Submit\n        //     </Button>\n        //     <Button type='reset' color='secondary' outline onClick={toggleFn}>\n        //       Cancel\n        //     </Button>\n        //   </Form>\n        // </Sidebar>\n    )\n}\n\nexport default EditModal\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\n\n// ** Store & Actions\n\n// ** Icons Imports\nimport { approveUserById, blockUserById, verifyUserById } from '../../../../services/user.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n// ** Invoice List Sidebar\n\n// ** Table Columns\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteUser, getAllData, getData } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\nimport Select from 'react-select'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\n  Label, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\nimport AddModal from './AddModal'\nimport EditModal from './EditModal'\nimport RegisterModal from './RegisterModal'\n\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.users)\n  const role = useSelector(state => state.auth.userData.role)\n\n  const [selectedUser, setSelectedUser] = useState({})\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('name')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n  const [rolesOptions, setrolesOptions] = useState([])\n  const [editModal, setEditModal] = useState(false)\n  const [registerModal, setRegisterModal] = useState(false)\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n  const toggleFn = () => setEditModal(!editModal)\n  const togglregister = () => setRegisterModal(!registerModal)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        showName: true\n        // currentPlan: currentPlan.value\n      })\n    )\n    // ** Set Roles\n\n    const roleSelect = Object.values(ROLES_CONSTANT).map(el => {\n      return { label: el, value: el }\n    })\n    // console.log(store, \"storestorestorestore\")\n\n    let arr = [{ label: \"All\", value: \"All\" }, ...roleSelect]\n    if (!(role === ROLES_CONSTANT.SALES || role === ROLES_CONSTANT.FIELDUSER)) {\n      arr = [{ label: \"All\", value: \"All\" }, ...roleSelect]\n    } else {\n      arr = [...roleSelect.filter(el => el.label === ROLES_CONSTANT.DISTRIBUTOR || el.label === ROLES_CONSTANT.DEALER || el.label === ROLES_CONSTANT.MANUFACTURER)]\n\n    }\n    setrolesOptions(arr)\n\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\n\n  // ** User filter options\n  // const roleOptions = [\n  //   { value: '', label: 'Select Role' },\n  //   { value: 'admin', label: 'Admin' },\n  //   { value: 'author', label: 'Author' },\n  //   { value: 'editor', label: 'Editor' },\n  //   { value: 'maintainer', label: 'Maintainer' },\n  //   { value: 'subscriber', label: 'Subscriber' }\n  // ]\n\n  // const planOptions = [\n  //   { value: '', label: 'Select Plan' },\n  //   { value: 'basic', label: 'Basic' },\n  //   { value: 'company', label: 'Company' },\n  //   { value: 'enterprise', label: 'Enterprise' },\n  //   { value: 'team', label: 'Team' }\n  // ]\n\n  const statusOptions = [\n    { value: '', label: 'Select Status/View All', number: 0 },\n    { value: 'active', label: 'Active', number: true },\n    { value: 'inactive', label: 'Inactive', number: false }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n\n    return store.data\n\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n\n\n  const handleSelectEdit = (value) => {\n    setSelectedUser(value)\n    // toggleFn()\n  }\n\n\n  const handleStatus = async (id, status) => {\n    try {\n      const obj = {\n        status\n      }\n      const { data: res } = await approveUserById(id, obj)\n      if (res.message) {\n        toastSuccess(res.message)\n        dispatch(\n          getData({\n            sort,\n            sortColumn,\n            q: searchTerm,\n            page: currentPage,\n            perPage: rowsPerPage,\n            role: currentRole.value,\n            status: currentStatus.value,\n            showName: true\n          }))\n      }\n    } catch (error) {\n      toastError(error)\n    }\n  }\n\n\n  const handleVerification = async (id, status) => {\n    try {\n      const obj = {\n        isVerified: status\n      }\n      const { data: res } = await verifyUserById(id, obj)\n      if (res.message) {\n        toastSuccess(res.message)\n        dispatch(\n          getData({\n            sort,\n            sortColumn,\n            q: searchTerm,\n            page: currentPage,\n            perPage: rowsPerPage,\n            role: currentRole.value,\n            status: currentStatus.value,\n            showName: true\n          }))\n      }\n    } catch (error) {\n      toastError(error)\n    }\n  }\n\n  const handleisBlocked = async (id, status) => {\n    try {\n      const obj = {\n        isBlocked: status\n      }\n      const { data: res } = await blockUserById(id, obj)\n      if (res.message) {\n        toastSuccess(res.message)\n        dispatch(\n          getData({\n            sort,\n            sortColumn,\n            q: searchTerm,\n            page: currentPage,\n            perPage: rowsPerPage,\n            role: currentRole.value,\n            status: currentStatus.value,\n            showName: true\n          }))\n      }\n    } catch (error) {\n      toastError(error)\n    }\n  }\n\n\n  // ** Renders Role Columns\n  const renderRole = row => {\n    const roleObj = {\n      USER: {\n        class: 'text-primary',\n        icon: User\n      },\n      MANUFACTURER: {\n        class: 'text-success',\n        icon: Database\n      },\n      editor: {\n        class: 'text-info',\n        icon: Edit2\n      },\n      DISTRIBUTOR: {\n        class: 'text-warning',\n        icon: Settings\n      },\n      DEALER: {\n        class: 'text-danger',\n        icon: Slack\n      },\n      APPROVERS: {\n        class: 'text-danger',\n        icon: Slack\n      }\n    }\n\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n    return (\n      <span className='text-truncate text-capitalize align-middle'>\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n        {row.role}\n      </span>\n    )\n  }\n\n\n  const columns = [\n    {\n      name: 'User',\n      sortable: true,\n      minWidth: '300px',\n      sortField: 'fullName',\n      selector: row => row.name,\n      cell: row => (\n        <div className='d-flex justify-content-left align-items-center'>\n          {/* {renderClient(row)} */}\n          <div className='d-flex flex-column'>\n            <Link\n              to={`/apps/user/view/${row._id}`}\n              className='user_name text-truncate text-body'\n              onClick={() => dispatch(getUser(row._id))}\n            >\n              <span className='fw-bolder'>{row.companyObj?.name ? row.companyObj?.name : row.name}</span>\n            </Link>\n            <small className=' mb-0'>{row.email}</small>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: 'Role',\n      sortable: true,\n      minWidth: '172px',\n      sortField: 'role',\n      selector: row => row?.role,\n      cell: row => renderRole(row)\n    },\n    // {\n    //   name: 'Plan',\n    //   minWidth: '138px',\n    //   sortable: true,\n    //   sortField: 'currentPlan',\n    //   selector: row => row.currentPlan,\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\n    // },\n    // {\n    //   name: 'Billing',\n    //   minWidth: '230px',\n    //   sortable: true,\n    //   sortField: 'billing',\n    //   selector: row => row.billing,\n    //   cell: row => <span className='text-capitalize'>{row.billing}</span>\n    // },\n    {\n      name: 'Approved',\n      minWidth: '138px',\n      sortable: false,\n      sortField: 'approved',\n      selector: row => row.approved,\n      cell: row => (\n        <>\n          {\n            role !== ROLES_CONSTANT.ADMIN ? <div>You don't have access to approve users</div> : <div className='form-check form-switch'><Input type='switch' name='customSwitch' id='exampleCustomSwitch' checked={row.approved} onChange={() => handleStatus(row._id, !row.approved)} /> </div>\n          }\n        </>\n\n      )\n    },\n    {\n      name: 'Blocked Subscription',\n      minWidth: '138px',\n      sortable: true,\n      sortField: 'isBlocked',\n      selector: row => row.isBlocked,\n      cell: row => (\n        <>\n          {role !== ROLES_CONSTANT.ADMIN ? <div>You don't have access to block users</div> : <div className='form-check form-switch'><Input type='switch' name='customSwitch' id='exampleCustomSwitch' defaultChecked={row.isBlocked} onChange={() => handleisBlocked(row._id, !row.isBlocked)} /></div>}\n        </>\n\n      )\n    },\n    {\n      name: 'Is Verified',\n      minWidth: '138px',\n      sortable: false,\n      sortField: 'approved',\n      selector: row => row.isVerified,\n      cell: row => (\n        <>\n          {role !== ROLES_CONSTANT.ADMIN ? <div>You don't have access to verify users</div> : <div className='form-check form-switch'><Input type='switch' name='customSwitch' id='exampleCustomSwitch' checked={row.isVerified} onChange={() => handleVerification(row._id, !row.isVerified)} /></div>}\n        </>\n\n      )\n    },\n    {\n      name: 'Actions',\n      minWidth: '100px',\n      sortable: false,\n\n      cell: row => (\n        <>\n          <Link color='success' className='btn-sm btn-success asdfasdf' to={`/apps/user/view/${row._id}`}\n            onClick={() => dispatch(getUser(row.id))}\n          >     <FileText size={14} />\n          </Link>\n\n          <Button color='primary' onClick={(e) => { e.preventDefault(); setSelectedUser(row); setEditModal(true) }} className='ms-2 '\n\n          >\n            <Edit size={14} />\n          </Button>\n\n          {/* <Button color='primary asdfasf'  className='btn-sm ms-2' onClick={togglregister}>\n            <User size={14} />\n            </Button> */}\n          \n\n          {\n            (role !== ROLES_CONSTANT.FIELDUSER && role !== ROLES_CONSTANT.SALES) &&\n            <Button color='danger' className='ms-2 btn-sm'\n              onClick={e => {\n                e.preventDefault()\n                dispatch(deleteUser(row._id))\n              }}\n            >    <Trash2 size={14} /></Button>\n          }\n\n        </>\n\n      )\n    }\n  ]\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Filters</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Label for='role-select'>Role</Label>\n              <Select\n                isClearable={false}\n                value={currentRole}\n                options={rolesOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                onChange={data => {\n                  setCurrentRole(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      role: data.value,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      status: currentStatus.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n\n            <Col md='4'>\n              <Label for='status-select'>Status</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={data => {\n                  setCurrentStatus(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      status: data.value,\n                      perPage: rowsPerPage,\n                      role: currentRole.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n\n      <Card className='overflow-hidden'>\n\n        <div className='mx-2 pt-2 pb-3'>\n          <Row>\n            <Col xl='8' className='d-flex align-items-center p-0'>\n              <div className='d-flex align-items-center w-100'>\n                <label htmlFor='rows-per-page'>Show</label>\n                <Input\n                  className='mx-50'\n                  type='select'\n                  id='rows-per-page'\n                  value={rowsPerPage}\n                  onChange={handlePerPage}\n                  style={{ width: '5rem' }}\n                >\n                  <option value='10'>10</option>\n                  <option value='25'>25</option>\n                  <option value='50'>50</option>\n                  <option value='100'>100</option>\n                  <option value='500'>500</option>\n                </Input>\n                <label htmlFor='rows-per-page'>Entries</label>\n              </div>\n            </Col>\n            <Col\n              xl='4'\n              className='d-flex justify-content-end'\n            >\n              <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                <label className='mb-0' htmlFor='search-invoice'>\n                  Search:\n                </label>\n                <Input\n                  id='search-invoice'\n                  className='ms-50 w-100'\n                  type='text'\n                  value={searchTerm}\n                  onChange={e => handleFilter(e.target.value)}\n                />\n              </div>\n\n              <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\n                Add New User\n              </Button>\n            </Col>\n          </Row>\n        </div>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            pagination\n            columns={columns}\n            paginationServer\n            paginationComponent={CustomPagination}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            data={store.data}\n          />\n        </div>\n      </Card>\n\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\n      <EditModal open={editModal} toggleFn={(value) => setEditModal(value)} selectedUser={selectedUser} />\n      {/* <RegisterModal open={registerModal} togglregister={(value) => setRegisterModal(value)}  /> */}\n       {/* const [registerModal, setRegisterModal] = useState(false) */}\n      \n      \n      {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\nimport { useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\n\nconst UsersList = () => {\n  const store = useSelector(state => state.users)\n  const [TotalUsers, setTotalUsers] = useState(0)\n  const [TotalDistributors, setTotalDistributors] = useState(0)\n  const [TotalManufacturers, setTotalManufacturers] = useState(0)\n  const [TotalDealers, setTotalDealers] = useState(0)\n  // const [, set] = useState()\n  useEffect(() => {\n    console.log(store, \"store\")\n    if (store) {\n      setTotalUsers(store.totalUsers)\n      setTotalDistributors(store.totalDistributors)\n      setTotalManufacturers(store.totalManufacturers)\n      setTotalDealers(store.totalDealers)\n    }\n  }, [store])\n\n  return (\n    <div className='app-user-list'>\n      <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalUsers}</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Total Manufacturers'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalManufacturers}</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Total Dealers'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalDealers}</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Total Distributors'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>{TotalDistributors}</h3>}\n          />\n        </Col>\n      </Row>\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n"],"sourceRoot":""}