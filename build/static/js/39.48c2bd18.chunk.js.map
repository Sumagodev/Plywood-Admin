{"version":3,"sources":["views/apps/UsersWithSubscription/list/Table.js","views/apps/UsersWithSubscription/list/index.js","services/UserSubscription.service.js","views/apps/UsersWithSubscription/list/UserWithSubscriptionDetail.js","views/Subscriptions/list/AddSubscription.js","views/Subscriptions/list/columns.js","views/Subscriptions/list/Table.js","views/Reports/FlashSales/list/columns.js","views/Reports/FlashSales/list/Table.js","views/Reports/FlashSales/list/FlashSalesDetails.js","views/AdvertisementSubsctiptions/list/columns.js","views/AdvertisementSubsctiptions/list/Table.js","views/AdvertisementSubsctiptions/list/AddAdvertisementSubscription.js","views/UserTickets/list/columns.js","views/UserTickets/list/Table.js","views/UserTickets/list/index.js","views/UserTickets/list/UserTicketDetails.js","utility/DateUtils.js","views/Reports/Advertisements/list/columns.js","views/Reports/Advertisements/list/Table.js","views/Reports/Advertisements/list/index.js","views/Reports/Advertisements/list/PromotionDetails.js","views/Reports/SubscriptionsReport/store/index.js","views/Reports/SubscriptionsReport/list/columns.js","views/Reports/SubscriptionsReport/list/Table.js","views/Reports/SubscriptionsReport/list/index.js","views/Reports/SubscriptionsReport/list/AllSubscribedUsers.js","views/Reports/Leads/list/columns.js","views/Reports/Leads/list/Table.js","views/Reports/Leads/list/index.js","views/apps/UserRequirements/list/Table.js","views/apps/UserRequirements/list/index.js","views/Blogs/list/columns.js","views/Blogs/list/Table.js","views/Blogs/list/index.js","QuillEditor.js","views/Blogs/list/AddBlog.js","views/BlogVideo/list/columns.js","views/BlogVideo/list/Table.js","views/BlogVideo/list/index.js","views/BlogVideo/list/AddVideoBlog.js","views/Topup/list/AddTopup.js","views/Topup/list/columns.js","views/Topup/list/Table.js","views/Topup/list/index.js","views/products/newsLetter/list/columns.js","views/products/newsLetter/list/Table.js","views/products/newsLetter/list/index.js","views/Reports/SalesUsers/list/AddModal.js","views/Reports/SalesUsers/list/Table.js","views/Reports/SalesUsers/list/index.js","views/homepageBanners/list/AddModal.js","views/homepageBanners/list/Table.js","views/homepageBanners/list/index.js","services/WebsiteData.service.js","views/WebsiteData/list/index.js","views/seo/list/columns.js","views/seo/list/Table.js","views/seo/list/index.js","views/seo/list/AddSeo.js","router/routes/Apps.js","router/routes/Forms.js","router/routes/Pages.js","router/routes/Tables.js","router/routes/Charts.js","router/routes/Dashboards.js","router/routes/UiElements.js","router/routes/Extensions.js","router/routes/PageLayouts.js","router/routes/Authentication.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/IntlDropdown.js","@core/layouts/components/navbar/CartDropdown.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarSearch.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/NavbarBookmarks.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","navigation/horizontal/apps.js","navigation/horizontal/dashboards.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/BlogVideos.js","navigation/horizontal/Blogs.js","navigation/horizontal/forms-tables.js","navigation/horizontal/product.js","navigation/horizontal/subscriptions.js","navigation/horizontal/tickets.js","navigation/horizontal/Seo.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PrivateRoute.js","views/products/brand/list/columns.js","views/products/brand/list/AddModal.js","views/products/brand/list/Table.js","views/products/brand/list/index.js","views/products/review/list/Review.js","views/products/list/AddProduct.js","router/routes/Product.js","router/routes/location.js","router/routes/index.js","router/Router.js","App.js","@core/components/avatar/index.js","utility/Utils.js","utility/constant.js","@core/components/widgets/stats/StatsHorizontal.js","utility/hooks/useSkin.js","utility/FileUpload.js","utility/hooks/useRTL.js","@core/components/sidebar/index.js","@core/components/autocomplete/index.js","utility/hooks/useOnClickOutside.js","utility/hooks/useLayout.js","@core/layouts/BlankLayout.js"],"names":["UsersWithSubscription","dispatch","useDispatch","store","useSelector","state","selectedUser","setSelectedUser","useState","sort","setSort","searchTerm","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","rowsPerPage","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","value","label","currentStatus","setCurrentStatus","number","rolesOptions","setrolesOptions","editModal","setEditModal","startDate","setstartDate","endDate","setEndDate","useEffect","getAllUsersWithSubsciptionFn","q","page","perPage","role","status","showName","data","length","console","log","columns","name","sortable","minWidth","sortField","selector","row","cell","className","to","onClick","getUser","id","companyObj","email","roleObj","USER","class","icon","User","MANUFACTURER","Database","editor","Edit2","DISTRIBUTOR","Settings","DEALER","Slack","APPROVERS","Icon","size","renderRole","approved","disabled","type","checked","onChange","async","obj","res","approveUserById","message","toastSuccess","error","toastError","handleStatus","_id","color","xl","htmlFor","e","parseInt","currentTarget","style","width","handleFilter","val","target","noHeader","pagination","paginationServer","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","Table","serverUrl","BaseUrl","UserWithSubscriptionDetail","useParams","userSubscriptionsArr","setUserSubscriptionsArr","totalPages","setTotalPages","handleGetUsersSubscriptionById","axiosInstance","get","getAllSubscriptionbyUserId","query","totalCount","err","handleSendMailById","sendMailById","moment","createdAt","format","price","numberOfSales","saleDays","numberOfAdvertisement","advertisementDays","tag","AddSubscription","subscriptionObj","subscription","selectedSubscription","setSelectedSubscription","includesFlashSales","setIncludesFlashSales","includesAdvertisements","setIncludesAdvertisements","includesValidity","setIncludesValidity","isEditing","setIsEditing","setname","noOfMonth","setNoOfMonth","setPrice","description","setDescription","messageArr","setMessageArr","setNumberOfSales","setSaleDays","setNumberOfAdvertisement","setAdvertisementDays","setRole","roleSelect","Object","values","ROLES_CONSTANT","map","el","filter","getSubscriptionById","md","sm","for","placeholder","isClearable","options","classNamePrefix","tempArr","push","handleAddSubscription","pop","handleRemoveSubscription","index","_","cloneDeep","handleSetMessge","updateSubscription","addSubscription","onSubmit","preventDefault","deleteSubscription","SubscriptionList","subscriptionArr","dataArr","setDataArr","products","allData","getSubscription","userId","productId","discountType","discountValue","salePrice","FlashSales","FlashSalesArr","getFlashSales","FlashSalesDetails","flashSaleObj","setFlashSaleObj","getFlashSalebyId","numberOfAdvertisements","AdverisementSubscriptionList","AddAdvertisementSubscription","setNumberOfAdvertisements","deleteTicket","TicketList","Tickets","getTickets","UserTicketDetails","params","setMessage","ticketObj","setTicketObj","auth","userData","handleGetUserTickets","getTicketMessagesbyId","ticketMessageArr","commentsEndRef","useRef","commentsContainerRef","ref","border","padding","borderRadius","minHeight","maxHeight","overflowY","display","placeItems","marginLeft","marginBottom","backgroundColor","fontSize","fontWeight","toLowerCase","Date","getDate","getMonth","getFullYear","marginTop","userTicketsId","AddTicketMessage","handleAddComment","height","Promotions","getPromotions","PromotionList","PromotionDetails","createAsyncThunk","response","getSubscriptionWithSubscriberCountApi","subscriptionCount","getSubscriptionSubscribedUser","getSubscriptionSubscribedbyUserId","getByIdApi","formData","addSubscriptionApi","success","updateSubscriptionApi","deleteSubscriptionApi","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","action","payload","usersCount","AllSubscriptionList","AllSubscribedUsers","createdByObj","productObj","userObj","Leads","getLeads","LeadsList","UserRequirements","getAllUserRequirement","phone","productName","address","deleteUserRequirement","href","generateFilePath","image","src","alt","srcset","toDateString","deleteBlogs","Blogs","getBlogs","modules","toolbar","header","script","list","indent","background","font","align","formats","QuillEditor","handleChange","quillValue","setQuillValue","theme","scrollingContaine","Addblog","blogObj","selectedBlogs","durationInDays","setDurationInDays","setImage","numberOfPromotions","setNumberOfPromotions","getBlogsById","includes","FileUpload","onFileChange","updateBlogs","addBlogs","url","deleteBlogVideo","Video","BlogVideo","getBlogVideo","AddblogVideo","selectedBlogVideo","setUrl","getBlogVideoById","updateBlogVideo","addBlogVideo","AddTopup","TopupObj","topup","selectedTopup","setSelectedTopup","FIELDUSER","SUBADMIN","getTopupById","handleaddTopup","handleRemoveTopup","updateTopup","addTopup","deleteTopup","TopupList","TopupArr","getTopup","UsersList","newsLetter","getnewsLetters","subHeader","sortServer","responsive","onSort","column","sortDirection","sortIcon","filters","isFiltered","keys","some","k","slice","dataToRender","NewsLetterList","AddModal","open","toggleSidebar","categories","isOpen","onClosed","toggle","setStartDate","tempDate","setMonth","salesCount","salesArr","margin","SalesReportList","homepageBanners","isUpdated","setIsUpdated","setimage","selectedObj","category","updateHomepageBanner","addHomepageBanners","getHomepageBanners","getHomepageBannerssById","confirm","deleteHomepageBanners","handleDeleteHomePageBanners","HomepageBanners","WebsiteData","previousImage","setPreviousImage","handleGetWebsiteData","getWebsiteData","shopImage","handleAddWebsiteData","post","AddWebsiteData","deleteSeo","Seo","getSeo","AddSeo","selectedSeo","title","setTitle","keywords","setKeywords","getSeoById","updateSeo","addSeo","Chat","lazy","Todo","Email","Kanban","Calendar","InvoiceAdd","InvoiceList","InvoiceEdit","InvoicePrint","InvoicePreview","EcommerceShop","EcommerceDetail","EcommerceWishlist","EcommerceCheckout","UserList","UserView","Roles","Permissions","AppRoutes","element","path","meta","appLayout","layout","roleArr","Wizard","Validation","FormLayouts","Radio","Input","FormRepeater","Switch","Editor","Select","Textarea","InputMask","Checkboxes","Datepickers","InputGroups","NumberInput","FileUploader","FormRoutes","Faq","ApiKey","Profile","Pricing","License","Error","BlogList","BlogEdit","BlogDetails","ComingSoon","ModalExamples","Maintenance","AccountSettings","NotAuthorized","KnowledgeBase","KnowledgeBaseCategory","KBCategoryQuestion","PagesRoutes","publicRoute","Reactstrap","DTBasic","DTAdvance","TablesRoutes","ApexCharts","ChartJS","Recharts","ChartMapsRoutes","DashboardEcommerce","DashboardRoutes","Typography","Icons","CardsBasic","CardsAdvance","CardsStatistics","CardsAnalytics","CardsActions","Accordion","Alerts","Autocomplete","Avatar","Badge","BlockUI","Breadcrumbs","Buttons","Carousel","Collapse","Divider","Dropdown","ListGroup","Modal","NavComponent","Offcanvas","Pagination","BadgePills","TabPills","Popovers","Progress","Spinners","Tabs","Timeline","Toasts","Tooltips","UiElementRoutes","Tour","Swiper","Ratings","Sliders","I18nComponent","SweetAlert","ContextMenu","ReactPlayer","DragAndDrop","AccessControl","ReactHotToast","CopyToClipboard","ImportComponent","ExportComponent","ExportSelected","ExtensionsRoutes","resource","BoxedLayout","WithoutMenu","LayoutEmpty","LayoutBlank","CollapsedMenu","PageLayoutRoutes","menuCollapsed","contentWidth","menuHidden","Login","LoginBasic","LoginCover","Register","RegisterBasic","RegisterCover","RegisterMultiSteps","ForgotPassword","ForgotPasswordBasic","ForgotPasswordCover","ResetPasswordBasic","ResetPasswordCover","VerifyEmailBasic","VerifyEmailCover","TwoStepsBasic","TwoStepsCover","AuthenticationRoutes","restricted","Customizer","props","skin","isRtl","setSkin","setIsRtl","isHidden","setLayout","navbarType","footerType","navbarColor","setIsHidden","setLastLayout","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","classnames","wheelPropagation","skinsArr","radio","marginCondition","renderSkinsRadio","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","rest","visible","setVisible","window","addEventListener","pageYOffset","scroll","top","behavior","defaultProps","Footer","rel","IntlDropdown","CartDropdown","UserDropdown","setUserData","isUserLoggedIn","JSON","parse","localStorage","getItem","userAvatar","avatar","defaultAvatar","img","imgHeight","imgWidth","end","divider","Link","handleLogout","NavbarSearch","NavbarUser","NavbarBookmarks","setMenuVisibility","setValue","openSearch","setOpenSearch","navbar","getBookmarks","handleClearQueryInStore","handleSearchQuery","bookmarks","item","IconTag","link","show","suggestions","wrapperClass","filterKey","autoFocus","defaultSuggestions","suggestionLimit","externalClick","clearInput","userInput","setUserInput","handleClearInput","onKeyDown","keyCode","setTimeout","customRender","i","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","onMouseEnter","indexOf","active","isBookmarked","handleBookmarkUpdate","updateBookmarked","ThemeNavbar","VerticalMenuHeader","setGroupOpen","menuHover","user","getUserData","Toggler","getHomeRouteForLoggedInUser","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","activeItem","LinkTag","externalLink","NavLink","t","useTranslation","navLink","newTab","undefined","isActive","badge","badgeText","pill","hasActiveChild","currentUrl","child","removeChildren","openGroup","currentActiveGroup","forEach","splice","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","expanded","onMouseLeave","onScrollY","container","scrollTop","current","classList","contains","add","remove","scrollMenu","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","VerticalLayout","footer","useRTL","useSkin","useLayout","isMounted","setIsMounted","menuVisibility","windowWidth","setWindowWidth","innerWidth","layoutStore","handleWindowWidth","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","dark","customizer","handleMenuHidden","handleContentWidth","dashboards","apps","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","stylesObj","clientHeight","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","update","attributes","usePopper","placement","modifiers","offset","HorizontalNavMenuItems","HorizontalMenu","menuDataArr","setMenuDataArr","ele","elex","elm","elexm","HorizontalLayout","navbarScrolled","setNavbarScrolled","listStyle","routerProps","currentActiveItem","product","formsAndTables","subscriptions","tickets","blogs","BlogVideos","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","Tag","Fragment","memo","PrivateRoute","route","fallback","statusObj","pending","inactive","getBrandById","deleteBrand","brands","setstatus","setisUpdated","updateObj","setupdateObj","updateBrand","addBrand","selectedBrand","brand","getBrand","BrandList","Review","handleGetReviews","getReviewForProduct","rating","deleteReviewById","deleteProdcutId","AddProduct","brandArr","productRedux","selectedProduct","categoryArr","setcategoryArr","setbrand","setcategory","thickness","setthickness","application","setapplication","grade","setgrade","setcolor","setsize","wood","setwood","glue","setglue","setprice","sellingprice","setsellingprice","warranty","setwarranty","shortDescription","setshortDescription","longDescription","setLongDescription","imageArr","setimageArr","mainCategoryArr","setmainCategoryArr","categoryId","specification","mainImage","getProductById","subcategoryRender","cateArr","dash","cat","subCategoryArr","getNestedCategoriesApi","handleNestedCategory","tempCategoryArr","elx","handleCtegoryEvent","rows","indez","handleFileSet","handleImagesRemove","removeIndex","updateProduct","addProduct","CategoryList","ProductList","ProductRoutes","CountryList","StateList","CityList","LocationRoutes","getLayout","blank","BlankLayout","vertical","horizontal","DefaultRoute","Routes","PageLayoutsRoutes","ChartsRoutes","getRoutes","defaultLayout","AllRoutes","layoutItem","LayoutRoutes","RouteTag","Wrapper","isObjEmpty","MergeLayoutRoutes","Router","allRoutes","useRoutes","replace","getHomeRoute","App","forwardRef","badgeUp","content","initials","badgeColor","imgClassName","contentStyles","str","results","split","join","getInitials","kFormatter","num","toFixed","htmlToString","html","formatDate","formatting","month","day","year","Intl","DateTimeFormat","formatDateToMonthShort","toTimeForCurrentDay","date","today","isToday","hour","minute","userRole","selectThemeColors","colors","primary25","primary","neutral10","neutral20","neutral30","ADMIN","SALES","StatsHorizontal","stats","renderStats","statTitle","statsMargin","document","body","classNames","bordered","handleSkin","acceptImage","returnOriginal","acceptOnly","file","setFile","handleFileSelection","event","files","cb","reader","FileReader","readAsDataURL","onload","result","onerror","getBase64","accept","isRTL","getElementsByTagName","setAttribute","handleRTL","closeBtn","bodyClassName","contentClassName","wrapperClassName","headerClassName","renderCloseBtn","modalClassName","String","close","inputElRef","suggestionsListRef","focused","setFocused","setActiveSuggestion","showSuggestions","setShowSuggestions","navigate","useNavigate","onSuggestionClick","renderGroupedSuggestion","arr","suggestionURL","renderSuggestion","renderSuggestions","grouped","filterHeaderKey","suggestion","sortData","startCondition","startsWith","includeCondition","searchLimit","sortSingleData","renderUngroupedSuggestions","handler","suggestionsListComponent","ReactDOM","findDOMNode","focus","onSuggestionsShown","listener","removeEventListener","component","suggestionList","scrollHeight","stopPropagation","onFocus","onBlur","handleLayout","breakpoint","lastLayout","handleLastLayout"],"mappings":"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Ae,IACzBC,KAAM,qBAER,CACED,QAAS,cAAC,EAAe,IACzBC,KAAM,0BAER,CACED,QAAS,cAAC,GAAS,IACnBC,KAAM,eAER,CACED,QAAS,cAAC,GAAQ,IAClBC,KAAM,cAER,CACED,QAAS,cAAC,GAAQ,IAClBC,KAAM,mBAER,CACED,QAAS,cAAC,EAAe,IACzBC,KAAM,qBAER,CACED,QAAS,cAAC,EAA4B,IACtCC,KAAM,oCAER,CACED,QAAS,cAAC,GAA4B,IACtCC,KAAM,mCAER,CACED,QAAS,cAAC,GAA4B,IACtCC,KAAM,wCAER,CACED,QAAS,cAAC,EAAc,IACxBC,KAAM,qBAER,CACED,QAAS,cAAC,GAAa,IACvBC,KAAM,oBAER,CACED,QAAS,cAACnP,EAAiB,IAC3BoP,KAAM,iCAER,CACED,QAAS,cAAC/L,GAAgB,IAC1BgM,KAAM,gCAER,CACED,QAAS,cAAC,GAAO,IACjBC,KAAM,YAER,CACED,QAAS,cAAC,GAAc,IACxBC,KAAM,iBAER,CACED,QAAS,cAACvO,GAAiB,IAC3BwO,KAAM,0BAER,CACED,QAAS,cAAC,GAAmB,IAC7BC,KAAM,iCAER,CACED,QAAS,cAAC,GAAkB,IAC5BC,KAAM,gCAER,CACED,QAAS,cAAC,GAAS,IACnBC,KAAM,eAER,CACED,QAAS,cAAC,GAAe,IACzBC,KAAM,iBAER,CACED,QAAS,cAAC,GAAgB,IAC1BC,KAAM,sBAER,CACED,QAAS,cAAC,GAAK,IACfC,KAAM,eAER,CACED,QAAS,cAAC,GAAO,IACjBC,KAAM,cAER,CACED,QAAS,cAAC,GAAO,IACjBC,KAAM,mBAER,CACED,QAAS,cAAC,GAAS,IACnBC,KAAM,qBAER,CACED,QAAS,cAAC,GAAY,IACtBC,KAAM,oBAER,CACED,QAAS,cAAC,GAAY,IACtBC,KAAM,yBAER,CACED,QAAS,cAAC,GAAG,IACbC,KAAM,aAER,CACED,QAAS,cAAC,GAAM,IAChBC,KAAM,YAER,CACED,QAAS,cAAC,GAAM,IAChBC,KAAM,iBAER,CACED,QAAS,cAAC,GAAW,IACrBC,KAAM,kBACNI,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","file":"static/js/39.48c2bd18.chunk.js","sourcesContent":["// ** React Imports\nimport { Link, useNavigate } from 'react-router-dom'\n// ** Custom Components\n// ** Store & Actions\n// ** Icons Imports\nimport { approveUserById } from '../../../../services/user.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Invoice List Sidebar\n\n// ** Table Columns\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllUsersWithSubsciptionFn } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User, Eye } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\nimport Select from 'react-select'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\n  Label, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\n// import AddModal from './AddModal'\n// import EditModal from './EditModal'\n\nconst UsersWithSubscription = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n\n  const store = useSelector(state => state.UsersWithSubscription)\n  const [selectedUser, setSelectedUser] = useState({})\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('name')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n  const [rolesOptions, setrolesOptions] = useState([])\n  const [editModal, setEditModal] = useState(false)\n      const [startDate, setstartDate] = useState()\n      const [endDate, setEndDate] = useState()\n  // ** Function to toggle sidebar\n\n  // ** Get data on mount\n  useEffect(() => {\n    // dispatch(getAllData())\n    dispatch(\n      getAllUsersWithSubsciptionFn({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        showName: true\n        // currentPlan: currentPlan.value\n      })\n    )\n    // ** Set Roles\n\n\n  }, [dispatch, store?.data?.length, sort, sortColumn, currentPage])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getAllUsersWithSubsciptionFn({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n    dispatch(\n      getAllUsersWithSubsciptionFn({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getAllUsersWithSubsciptionFn({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n  const handleFilterByDate = () => {\n    dispatch(\n      getAllUsersWithSubsciptionFn({\n        sort,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        startDate,\n        endDate\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  const handleStatus = async (id, status) => {\n    try {\n      const obj = {\n        status\n      }\n      const { data: res } = await approveUserById(id, obj)\n      if (res.message) {\n        toastSuccess(res.message)\n      }\n    } catch (error) {\n      toastError(error)\n    }\n  }\n\n\n  // ** Renders Role Columns\n  const renderRole = row => {\n    const roleObj = {\n      USER: {\n        class: 'text-primary',\n        icon: User\n      },\n      MANUFACTURER: {\n        class: 'text-success',\n        icon: Database\n      },\n      editor: {\n        class: 'text-info',\n        icon: Edit2\n      },\n      DISTRIBUTOR: {\n        class: 'text-warning',\n        icon: Settings\n      },\n      DEALER: {\n        class: 'text-danger',\n        icon: Slack\n      },\n      APPROVERS: {\n        class: 'text-danger',\n        icon: Slack\n      }\n    }\n\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n    return (\n      <span className='text-truncate text-capitalize align-middle'>\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n        {row.role}\n      </span>\n    )\n  }\n\n\n  useEffect(() => {\n    console.log(store, \"store\")\n  }, [store])\n\n\n  const columns = [\n    {\n      name: \"User\",\n      sortable: true,\n      minWidth: \"300px\",\n      sortField: \"fullName\",\n      selector: (row) => row.name,\n      cell: (row) => (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {/* {renderClient(row)} */}\n          <div className=\"d-flex flex-column\">\n            <Link\n              to={``}\n              className=\"user_name text-truncate text-body\"\n              onClick={() => dispatch(getUser(row.id))}\n            >\n              <span className=\"fw-bolder\">\n                {row.companyObj?.name ? row.companyObj?.name : row.name}\n              </span>\n            </Link>\n            <small className=\" mb-0\">{row.email}</small>\n          </div>\n        </div>\n      )\n    },\n    {\n      name: \"Role\",\n      sortable: true,\n      minWidth: \"172px\",\n      sortField: \"role\",\n      selector: (row) => row?.role,\n      cell: (row) => renderRole(row)\n    },\n    // {\n    //   name: 'Plan',\n    //   minWidth: '138px',\n    //   sortable: true,\n    //   sortField: 'currentPlan',\n    //   selector: row => row.currentPlan,\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\n    // },\n    // {\n    //   name: 'Billing',\n    //   minWidth: '230px',\n    //   sortable: true,\n    //   sortField: 'billing',\n    //   selector: row => row.billing,\n    //   cell: row => <span className='text-capitalize'>{row.billing}</span>\n    // },\n    {\n      name: \"Approved\",\n      minWidth: \"138px\",\n      sortable: false,\n      sortField: \"approved\",\n      selector: (row) => row.approved,\n      cell: (row) => (\n        <div className=\"form-check form-switch\">\n          <Input\n            disabled\n            type=\"switch\"\n            name=\"customSwitch\"\n            id=\"exampleCustomSwitch\"\n            checked={row.approved}\n            onChange={() => handleStatus(row._id, !row.approved)}\n          />\n        </div>\n      )\n    },\n    {\n      name: \"Actions\",\n      minWidth: \"100px\",\n      sortable: false,\n\n      cell: (row) => (\n        <>\n          <Link\n            color=\"success\"\n            className=\"btn-sm btn-success\"\n            to={`/apps/user/View-Subscription-for-user/${row._id}`}\n          >\n            <Eye size={14} />\n          </Link>\n          {/* <Button color='primary' onClick={(e) => { e.preventDefault() setSelectedUser(row) setEditModal(true) }} className='btn-sm ms-2 '\n          // onClick={e => {\n          //   e.preventDefault()\n          //   store.dispatch(getCityById(row._id))\n          // }}\n          >\n            <Edit size={14} />\n          </Button>\n          <Button color='danger' className='ms-2 btn-sm'\n          // onClick={e => {\n          //   e.preventDefault()\n          //   dispatch(deleteUser(row._id))\n          // }}\n          >    <Trash2 size={14} /></Button> */}\n        </>\n      )\n    }\n  ]\n\n  return (\n    <Fragment>\n      <Card className=\"overflow-hidden\">\n        <div className=\"mx-2 pt-2 \">\n          <Row>\n            <Col xl=\"3\" className=\"d-flex justify-content-start\">\n              <h3>\n                <b>Users with subscription</b>\n              </h3>\n            </Col>\n            <Col xl=\"2\" className=\"d-flex align-items-center p-0\">\n              <div className=\"d-flex align-items-center w-100\">\n                <label htmlFor=\"rows-per-page\">Show</label>\n                <Input\n                  className=\"mx-50\"\n                  type=\"select\"\n                  id=\"rows-per-page\"\n                  value={rowsPerPage}\n                  onChange={handlePerPage}\n                  style={{ width: \"5rem\" }}\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"10\">10</option>\n                  <option value=\"25\">25</option>\n                  <option value=\"50\">50</option>\n                  <option value=\"100\">100</option>\n                  <option value=\"500\">500</option>\n                </Input>\n                <label htmlFor=\"rows-per-page\">Entries</label>\n              </div>\n            </Col>\n            <Col xl=\"7\" className=\"d-flex justify-content-end\">\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                  Search:\n                </label>\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"text\"\n                  value={searchTerm}\n                  onChange={(e) => handleFilter(e.target.value)}\n                />\n              </div>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                  Filter\n                </label>\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"date\"\n                  value={startDate}\n                  onChange={(e) => setstartDate(e.target.value)}\n                />\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"date\"\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                />\n              </div>\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\n                Filter\n              </Button>\n\n              {/* <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\n                Add New User\n              </Button> */}\n            </Col>\n          </Row>\n        </div>\n        <div>\n          <DataTable\n            noHeader\n            pagination\n            columns={columns}\n            paginationServer\n            paginationComponent={CustomPagination}\n            // sortIcon={<ChevronDown />}\n            data={store.data}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersWithSubscription\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersWithSubscription = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersWithSubscription\n","import axios from \"axios\"\nimport axiosInstance from \"./axios.service\"\nimport BaseUrl from './url.service'\n\nconst serverUrl = `${BaseUrl}/usersubscription`\n\nexport const buySubscription = async (obj) => {\n    return axiosInstance.post(`${serverUrl}/buySubscription`, obj)\n}\n\nexport const getAllSubscriptionbyUserId = async (id) => {\n    return axiosInstance.get(`${serverUrl}/getAllSubscriptionbyUserId/?${id}`)\n}\nexport const getSubscriptionSubscribedbyUserId = async (query, id) => {\n    return axiosInstance.get(`${serverUrl}/getSubscriptionSubscribedbyUserId/${id}?${query}`)\n}\n\nexport const sendMailById = async (id) => {\n    return axiosInstance.get(`${serverUrl}/sendMailById/${id}`)\n}","\n\n// ** Reactstrap Imports\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\nimport _ from 'lodash'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\nimport { getAllSubscriptionbyUserId, sendMailById } from '../../../../services/UserSubscription.service'\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\nimport moment from 'moment'\nexport default function UserWithSubscriptionDetail() {\n    const { id } = useParams()\n    const [userSubscriptionsArr, setUserSubscriptionsArr] = useState([])\n    const [selectedUser, setSelectedUser] = useState({})\n    // ** States\n    const [sort, setSort] = useState('desc')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [currentPage, setCurrentPage] = useState(1)\n    const [sortColumn, setSortColumn] = useState('name')\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n    const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n    // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n    const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n    const [rolesOptions, setrolesOptions] = useState([])\n    const [editModal, setEditModal] = useState(false)\n    const [totalPages, setTotalPages] = useState(0)\n    const handleGetUsersSubscriptionById = async (query) => {\n        try {\n            const { data: res } = await getAllSubscriptionbyUserId(query)\n            if (res.data) {\n                console.log(res, \"userSUb\")\n                setUserSubscriptionsArr(res.data)\n                setTotalPages(res.totalCount)\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n\n    const handleSendMailById = async (id) => {\n        try {\n            const { data: res } = await sendMailById(id)\n            if (res.data) {\n                toastSuccess(res.message)\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n    useEffect(() => {\n        // console.log(id ? \"true\" : \"false\")\n        if (id) {\n            handleGetUsersSubscriptionById(`userId=${id}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\n        }\n\n    }, [id])\n\n    const columns = [\n        {\n            name: 'Subscription Name',\n            sortable: false,\n            minWidth: '300px',\n            selector: row => row.name,\n            cell: row => (\n                <div className='d-flex justify-content-left align-items-center'>\n                    {/* {renderClient(row)} */}\n                    <div className='d-flex flex-column'>\n                        <Link\n                            to={``}\n                            className='user_name text-truncate text-body'\n                            onClick={() => dispatch(getUser(row?.id))}\n                        >\n                            <span className='fw-bolder'>{row?.name}</span>\n                        </Link>\n                        <small className=' mb-0'>{row?.email}</small>\n                    </div>\n                </div>\n            )\n        },\n        {\n            name: 'Purchased On',\n            minWidth: '138px',\n            sortable: false,\n            selector: row => moment(row.createdAt).format(\"DD-MM-YYYY\")\n        },\n        {\n            name: 'Starts On',\n            minWidth: '138px',\n            sortable: false,\n            selector: row => moment(row.startDate).format(\"DD-MM-YYYY\")\n        },\n        {\n            name: 'Ends On',\n            minWidth: '138px',\n            sortable: false,\n            selector: row => moment(row.endDate).format(\"DD-MM-YYYY\")\n        },\n        {\n            name: 'Price Paid',\n            minWidth: '138px',\n            sortable: false,\n            selector: row => `Rs ${row.price}`\n        },\n        {\n            name: 'Flash Sales',\n            minWidth: '138px',\n            sortable: false,\n            selector: row => `${row.numberOfSales} for ${row.saleDays} Days`\n        },\n        {\n            name: 'Advertisements',\n            minWidth: '138px',\n            sortable: false,\n            selector: row => `${row.numberOfAdvertisement} for ${row.advertisementDays} Days`\n        },\n        {\n            name: 'Send Pdf Mail',\n            minWidth: '138px',\n            sortable: false,\n            cell: row => (\n                <>\n                  <Button type='button' color='success' className='btn-sm btn-success' onClick={() => handleSendMailById(row?._id)}>\n                    Send</Button>\n             \n                </>\n        \n              )\n        }\n        // {\n        //   name: 'Billing',\n        //   minWidth: '230px',\n        //   sortable: true,\n        //   sortField: 'billing',\n        //   selector: row => row.billing,\n        //   cell: row => <span className='text-capitalize'>{row.billing}</span>\n        // },\n\n    ]\n\n    const handlePagination = page => {\n        setCurrentPage(page.selected + 1)\n        console.log(page.selected, \"totalCount\")\n        handleGetUsersSubscriptionById(`userId=${id}&rowsPerPage=${rowsPerPage}&currentPage=${page.selected + 1}`)\n        // dispatch(\n        //   getAllUsersWithSubsciptionFn({\n        //     sort,\n        //     sortColumn,\n        //     q: searchTerm,\n        //     perPage: rowsPerPage,\n        //     page: page.selected + 1,\n        //     role: currentRole.value,\n        //     status: currentStatus.value\n        //   })\n        // )\n        // setCurrentPage(page.selected + 1)\n    }\n\n    const handlePerPage = e => {\n        const value = parseInt(e.currentTarget.value)\n        setCurrentPage(1)\n        handleGetUsersSubscriptionById(`userId=${id}&rowsPerPage=${value}&currentPage=${1}`)\n        setRowsPerPage(value)\n    }\n\n\n    const CustomPagination = () => {\n        const count = Number(Math.ceil(totalPages / rowsPerPage))\n\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                pageCount={count || 1}\n                activeClassName='active'\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n                onPageChange={page => handlePagination(page)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n            />\n        )\n    }\n    return (\n        <Card>\n            <CardHeader>\n                <Link to=\"/apps/user/Users-With-Subscription\" className=' btn btn-sm btn-warning' color='primary'>\n                    <ArrowUpLeft />Back\n                </Link>\n\n                <Col xl='9' className='d-flex align-items-center p-0'>\n                    <div className='d-flex align-items-center w-100'>\n                        <label htmlFor='rows-per-page'>Show</label>\n                        <Input\n                            className='mx-50'\n                            type='select'\n                            id='rows-per-page'\n                            value={rowsPerPage}\n                            onChange={handlePerPage}\n                            style={{ width: '5rem' }}\n                        >\n                            <option value='1'>1</option>\n                            <option value='10'>10</option>\n                            <option value='25'>25</option>\n                            <option value='50'>50</option>\n                            <option value='100'>100</option>\n                            <option value='500'>500</option>\n                        </Input>\n                        <label htmlFor='rows-per-page'>Entries</label>\n                    </div>\n                </Col>\n                <CardTitle tag='h4'>User's Subscriptions</CardTitle>\n            </CardHeader>\n\n            <CardBody>\n                <Row>\n                    <div>\n                        <DataTable\n                            noHeader\n                            pagination\n                            columns={columns}\n                            paginationServer\n                            paginationComponent={CustomPagination}\n                            // sortIcon={<ChevronDown />}\n                            data={userSubscriptionsArr}\n                        />\n                    </div>\n                </Row>\n            </CardBody>\n        </Card >\n    )\n}","// ** Reactstrap Imports\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\nimport { addSubscription, getSubscriptionById, updateSubscription } from '../store'\nimport _ from 'lodash'\nimport { toastError } from '../../../utility/toastutill'\nimport { ROLES_CONSTANT } from '../../../utility/constant'\nimport Select from 'react-select'\n\nconst AddSubscription = () => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const subscriptionObj = useSelector(state => state.subscription.selectedSubscription)\n  const [selectedSubscription, setSelectedSubscription] = useState({})\n\n  const [includesFlashSales, setIncludesFlashSales] = useState(false)\n  const [includesAdvertisements, setIncludesAdvertisements] = useState(false)\n  const [includesValidity, setIncludesValidity] = useState(false)\n\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setname] = useState(\"\")\n  const [noOfMonth, setNoOfMonth] = useState(1)\n  const [price, setPrice] = useState(0)\n  const [description, setDescription] = useState(\"\")\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\n  const [numberOfSales, setNumberOfSales] = useState(0)\n  const [saleDays, setSaleDays] = useState(0)\n  const [numberOfAdvertisement, setNumberOfAdvertisement] = useState(0)\n  const [advertisementDays, setAdvertisementDays] = useState(0)\n  const [rolesOptions, setrolesOptions] = useState([])\n  const [role, setRole] = useState(\"\")\n\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n\n    if (`${price}` === '' || price <= 0) {\n      toastError('Please Fill Price with a valid input (more than 0)')\n      return 0\n    }\n    // if (`${description}` === '') {\n    //   toastError('Please Fill Description')\n    //   return 0\n    // }\n    if (includesValidity) {\n      if (`${noOfMonth}` === '' || noOfMonth <= 0) {\n        toastError('Please Fill No of months with a valid input (more than 0)')\n        return 0\n      }\n    }\n    if (includesAdvertisements) {\n\n      if (parseInt(numberOfAdvertisement) < 0) {\n        toastError('Please Fill No of Advertisement with a valid input (more than 0)')\n        return 0\n      }\n\n      if (parseInt(advertisementDays) < 0) {\n        toastError('Please Fill No of days of Advertisement with a valid input (more than 0)')\n        return 0\n      }\n\n    }\n\n    if (includesFlashSales) {\n\n      if (parseInt(numberOfSales) < 0) {\n        toastError('Please Fill No of Flashsales with a valid input (more than 0)')\n        return 0\n      }\n      if (parseInt(saleDays) < 0) {\n        toastError('Please Fill No of days of Flashsales with a valid input (more than 0)')\n        return 0\n      }\n\n    }\n\n    if (parseInt(price) < 0) {\n      toastError('Please Fill Price with a valid input (more than 0)')\n      return 0\n    }\n\n    if (!role || !role?.value) {\n      toastError('Please Select Role for Subscription')\n      return 0\n    }\n\n    const obj = {\n      name,\n      price,\n      description,\n      messageArr,\n      includesFlashSales,\n      includesAdvertisements,\n      includesValidity,\n      role: role?.value\n    }\n\n    if (includesAdvertisements) {\n      obj.numberOfAdvertisement = numberOfAdvertisement\n      obj.advertisementDays = advertisementDays\n    }\n\n\n    if (includesFlashSales) {\n      obj.numberOfSales = numberOfSales\n      obj.saleDays = saleDays\n    }\n    if (includesValidity) {\n      obj.noOfMonth = noOfMonth\n    }\n    if (isEditing === true) {\n      dispatch(\n        updateSubscription({\n          ...obj,\n          id\n        })\n      )\n    } else {\n      dispatch(\n        addSubscription(obj)\n      )\n    }\n  }\n  useEffect(() => {\n    if (subscriptionObj && subscriptionObj.name && isEditing) {\n      setname(subscriptionObj?.name ? subscriptionObj?.name : \"\")\n      if (subscriptionObj?.role) {\n        setRole({ label: subscriptionObj?.role, value: subscriptionObj?.role })\n      }\n      setDescription(subscriptionObj?.description ? subscriptionObj?.description : \"\")\n      setNoOfMonth(subscriptionObj?.noOfMonth ? subscriptionObj?.noOfMonth : \"\")\n      setPrice(subscriptionObj?.price ? subscriptionObj?.price : \"\")\n      setSaleDays(subscriptionObj?.saleDays ? subscriptionObj?.saleDays : \"\")\n      setNumberOfSales(subscriptionObj?.numberOfSales ? subscriptionObj?.numberOfSales : \"\")\n      setMessageArr(subscriptionObj?.messageArr ? subscriptionObj?.messageArr : [{ message: \"\" }])\n      setIncludesFlashSales(subscriptionObj?.includesFlashSales)\n      setIncludesAdvertisements(subscriptionObj?.includesAdvertisements)\n      setIncludesValidity(subscriptionObj?.includesValidity)\n      setNumberOfAdvertisement(subscriptionObj?.numberOfAdvertisement)\n      setAdvertisementDays(subscriptionObj?.advertisementDays)\n    } else {\n      setname(\"\")\n      setDescription(\"\")\n      setRole(\"\")\n      setNoOfMonth(1)\n      setPrice(1)\n      setSaleDays(0)\n      setIncludesFlashSales(false)\n      setIncludesAdvertisements(false)\n      setIncludesValidity(false)\n      setNumberOfAdvertisement(0)\n      setAdvertisementDays(0)\n      setNumberOfSales(1)\n      setMessageArr([{ message: \"\" }])\n    }\n\n  }, [subscriptionObj, isEditing])\n\n\n  const handleGetSubscriptionById = () => {\n    dispatch(getSubscriptionById(id))\n  }\n\n  useEffect(() => {\n    // console.log(id ? \"true\" : \"false\")\n    const roleSelect = Object.values(ROLES_CONSTANT).map(el => {\n      return { label: el, value: el }\n    }).filter((el => el.label !== \"ADMIN\"))\n    // console.log(store, \"storestorestorestore\")\n    setrolesOptions([...roleSelect])\n\n    if (id) {\n      handleGetSubscriptionById()\n      setIsEditing(true)\n    }\n\n  }, [id])\n\n\n  const handleAddSubscription = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    tempArr.push({ message: \"\" })\n    setMessageArr([...tempArr])\n  }\n\n\n  const handleRemoveSubscription = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    if (tempArr.length > 1) {\n      tempArr.pop()\n      setMessageArr([...tempArr])\n    }\n  }\n\n  const handleSetMessge = (value, index) => {\n    const tempArr = _.cloneDeep(messageArr)\n    // setMessageArr(messageArr.map((ele, indexX) => {\n    //   if (indexX === index) {\n    //     ele.message = value\n    //   }\n    //   return ele\n    // }))\n    tempArr[index].message = value\n    setMessageArr([...tempArr])\n\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/subscription/View\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Subscription</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Name\n            </Label>\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Subscription Name' />\n          </Col>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Description\n            </Label>\n            <Input type='text' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Description' />\n          </Col>\n        </Row>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Role\n            </Label>\n            <Select\n              isClearable={false}\n              value={role}\n              options={rolesOptions}\n              className='react-select'\n              classNamePrefix='select'\n              onChange={(val) => setRole(val)}\n            />\n          </Col>\n\n        </Row>\n        <Row>\n          <Col className='mb-1 my-3' xl='2' md='2' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Includes Flash sales\n            </Label>\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesFlashSales} onChange={(e) => setIncludesFlashSales(e.target.checked)} />\n          </Col>\n          <Col className='mb-1  my-3' xl='3' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Includes Advertisements\n            </Label>\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesAdvertisements} onChange={(e) => setIncludesAdvertisements(e.target.checked)} />\n          </Col>\n          <Col className='mb-1  my-3' xl='2' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Includes Validity\n            </Label>\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesValidity} onChange={(e) => setIncludesValidity(e.target.checked)} />\n          </Col>\n        </Row>\n        <Row>\n          {\n            includesFlashSales &&\n            <>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of sales allowed in this subscription\n                </Label>\n                <Input type='number' id='basicInput' value={numberOfSales} onChange={(e) => setNumberOfSales(e.target.value)} placeholder='Enter number Of sales allowed in this subscription' />\n              </Col>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of days for which Sales are allowed in this subscription\n                </Label>\n                <Input type='number' id='basicInput' value={saleDays} onChange={(e) => setSaleDays(e.target.value)} placeholder='Enter the number Of days for which Sales are allowed in this subscription' />\n              </Col>\n            </>\n          }\n        </Row>\n        <Row>\n          {\n            includesAdvertisements &&\n            <>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of advertisements allowed in this subscription\n                </Label>\n                <Input type='number' id='basicInput' value={numberOfAdvertisement} onChange={(e) => setNumberOfAdvertisement(e.target.value)} placeholder=' Number Of advertisements allowed in this subscription' />\n              </Col>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of days for which advertisements are allowed in this subscription\n                </Label>\n                <Input type='number' id='basicInput' value={advertisementDays} onChange={(e) => setAdvertisementDays(e.target.value)} placeholder='Number Of days for which advertisements are allowed in this subscription' />\n              </Col>\n            </>\n          }\n          {\n            includesValidity &&\n            <Col className='mb-1' xl='6' md='6' sm='12'>\n              <Label className='form-label' for='basicInput'>\n                Duration in months ({noOfMonth})\n              </Label>\n              <Input type='number' id='basicInput' value={`${noOfMonth}`} onChange={(e) => setNoOfMonth(e.target.value)} placeholder='Enter Duration in days' />\n            </Col>\n          }\n        </Row>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Price\n            </Label>\n            <Input type='number' id='basicInput' value={price} onChange={(e) => setPrice(e.target.value)} placeholder='Enter Subscription Price' />\n          </Col>\n\n\n          <Col className='mb-1 d-flex justify-content-between' xl='12' md='12' sm='12'>\n            <Label for='basicInput'>\n              Message\n            </Label>\n            <div>\n              <Button type='button' className='me-1' color='primary' onClick={() => handleAddSubscription()}>\n                +\n              </Button>\n              <Button type='button' className='me-1' color='danger' onClick={() => handleRemoveSubscription()}>\n                -\n              </Button>\n            </div>\n          </Col>\n          <Row className='mb-1' xl='12' md='12' sm='12'>\n\n            {\n              messageArr && messageArr.length > 0 && messageArr.map((el, index) => {\n                return (\n                  <Col key={index} className=\"mt-2\" xl='4' md='4' sm='4'>\n                    <Input type='text' id='basicInput' value={el?.message} onChange={(e) => handleSetMessge(e.target.value, index)} placeholder={`Message ${index + 1}`} />\n                  </Col>\n                )\n              })\n            }\n          </Row>\n\n          <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card >\n  )\n}\nexport default AddSubscription\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteSubscription } from '../store'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"10%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'Description',\n    sortable: false,\n    sortField: 'description',\n    width: \"25%\",\n    cell: row => row?.description\n  },\n  {\n    name: 'Duration in months',\n    sortable: false,\n    sortField: 'noOfMonth',\n    width: \"15%\",\n    cell: row => `${row?.noOfMonth} ${row.noOfMonth === 1 ? \"month\" : \"months\"}`\n  },\n  {\n    name: 'Price',\n    sortable: false,\n    sortField: 'Price',\n    width: \"15%\",\n    cell: row => `₹ ${row?.price}`\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Link color='primary' to={`/subscription/edit/${row._id}`} className='btn-sm  btn-primary'>\n          <Edit size={14} />\n        </Link>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteSubscription(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSubscription } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.subscription)\n  const subscriptionArr = useSelector(state => state.subscription.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getSubscription({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getSubscription({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetSubscriptions = () => {\n    dispatch(getSubscription({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetSubscriptions()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getSubscription({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/subscription/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Database, Edit2, Eye, Settings, Slack, User } from 'react-feather'\n\n// ** Reactstrap Imports\nimport moment from 'moment'\nimport { updateProductApi } from '../../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"5.6%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Owner Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"15%\",\n    cell: row => row?.userId?.name\n  },\n  {\n    name: 'Product Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.productId?.name\n  },\n  {\n    name: 'Discount Type',\n    sortable: false,\n    sortField: 'discounttype',\n    // width: \"25%\",\n    cell: row => row?.discountType\n  },\n  {\n    name: 'Discount Value',\n    sortable: false,\n    sortField: 'DiscountValue',\n    // width: \"15%\",\n    cell: row => `${row?.discountValue} ${row.discountType === \"Percentage\" ? \"%\" : \"flat\"} OFF`\n  },\n  {\n    name: 'Offer Price',\n    sortable: false,\n    sortField: 'Price',\n    // width: \"15%\",\n    cell: row => `₹ ${row?.salePrice}`\n  },\n  // {\n  //   name: 'Product Price',\n  //   sortable: false,\n  //   sortField: 'PPrice',\n  //   cell: row => `₹ ${row?.price}`\n  // },\n  {\n    name: 'Start Date',\n    sortable: false,\n    sortField: 'S Date',\n    cell: row => `${moment(row?.startDate).format(\"DD-MM-YYYY\")}`\n  },\n  {\n    name: 'End Date',\n    sortable: false,\n    sortField: 'e Date',\n    cell: row => `${moment(row?.endDate).format(\"DD-MM-YYYY\")}`\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Link color='primary' to={`/flash-sales/view-details/${row._id}`} className='btn-sm  btn-primary'>\n          <Eye size={14} />\n        </Link>\n        {/* <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            // store.dispatch(deleteSubscription(row._id))\n          }}\n        >    <Trash2 size={14} /></Button> */}\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFlashSales } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.FlashSales)\n  const FlashSalesArr = useSelector(state => state.FlashSales.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(FlashSalesArr)\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getFlashSales({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getFlashSales({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetFlashSales = () => {\n    dispatch(getFlashSales({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetFlashSales()\n  }, [])\n\n\n  useEffect(() => {\n    console.log(FlashSalesArr, \"FlashSalesArr\")\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getFlashSales({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            columns={columns}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={FlashSalesArr}\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","\n\n// ** Reactstrap Imports\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { Link, useParams } from 'react-router-dom'\nimport { Card, CardBody, CardHeader, CardTitle, Row } from 'reactstrap'\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\nimport { getFlashSalebyId } from '../../../../services/FlashSales.service'\nimport { toastError } from '../../../../utility/toastutill'\nexport default function FlashSalesDetails() {\n    const { id } = useParams()\n    const [flashSaleObj, setFlashSaleObj] = useState({})\n    // ** States\n    const handleGetUsersSubscriptionById = async (query) => {\n        try {\n            const { data: res } = await getFlashSalebyId(query)\n            if (res.data) {\n                console.log(res, \"userSUb\")\n                setFlashSaleObj(res.data)\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n    useEffect(() => {\n        // console.log(id ? \"true\" : \"false\")\n        if (id) {\n            handleGetUsersSubscriptionById(id)\n        }\n\n    }, [id])\n\n\n    return (\n        <Card>\n            <CardHeader>\n                <Link to=\"/flash-sales/view\" className=' btn btn-sm btn-warning' color='primary'>\n                    <ArrowUpLeft />Back\n                </Link>\n\n\n                <CardTitle tag='h4'>User's Subscriptions</CardTitle>\n            </CardHeader>\n\n            <CardBody>\n                <Row>\n                    <div>\n                        <table class=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td>Owner Name</td>\n                                    <td>{flashSaleObj?.userId?.name}</td>\n                                </tr>\n                                <tr>\n                                    <td>Product Name</td>\n                                    <td>{flashSaleObj?.productId?.name}</td>\n                                </tr>\n                                <tr>\n                                    <td>Discount Type</td>\n                                    <td>{flashSaleObj?.discountType}</td>\n                                </tr>\n                                <tr>\n                                    <td>Discount Value</td>\n                                    <td>{flashSaleObj?.discountValue}</td>\n                                </tr>\n                                <tr>\n                                    <td>Sale Price</td>\n                                    <td>{flashSaleObj?.salePrice}</td>\n                                </tr>\n                                <tr>\n                                    <td>Product Price</td>\n                                    <td>{flashSaleObj?.price}</td>\n                                </tr>\n                                <tr>\n                                    <td>Sale Starts on</td>\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\n                                </tr>\n                                <tr>\n                                    <td>Sale ends on</td>\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </Row>\n            </CardBody>\n        </Card >\n    )\n}","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteSubscription } from '../store'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"5.3%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"15%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'Description',\n    sortable: false,\n    sortField: 'description',\n    width: \"15%\",\n    cell: row => row?.description\n  },\n  {\n    name: 'Avertisements',\n    sortable: false,\n    sortField: 'noOfMonth',\n    width: \"15%\",\n    cell: row => `${row?.numberOfAdvertisements}`\n  },\n  {\n    name: 'Days Allowed',\n    sortable: false,\n    sortField: 'Days Allowed',\n    width: \"15%\",\n    cell: row => `${row?.advertisementDays} ${row?.advertisementDays === 1 ? \"Day\" : \"Days\"}`\n  },\n  {\n    name: 'Price',\n    sortable: false,\n    sortField: 'Price',\n    width: \"15%\",\n    cell: row => `₹ ${row?.price}`\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Link color='primary' to={`/subscription/advertisement/edit/${row._id}`} className='btn-sm  btn-primary'>\n          <Edit size={14} />\n        </Link>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteSubscription(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSubscription } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst AdverisementSubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.subscription)\n  const subscriptionArr = useSelector(state => state.subscription.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getSubscription({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getSubscription({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetSubscriptions = () => {\n    dispatch(getSubscription({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetSubscriptions()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getSubscription({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/subscription/advertisement/add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default AdverisementSubscriptionList\n","// ** Reactstrap Imports\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\nimport { addSubscription, getSubscriptionById, updateSubscription } from '../store'\nimport _ from 'lodash'\nconst AddAdvertisementSubscription = () => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const subscriptionObj = useSelector(state => state.subscription.selectedSubscription)\n  const [selectedSubscription, setSelectedSubscription] = useState({})\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setname] = useState(\"\")\n  const [noOfMonth, setNoOfMonth] = useState(1)\n  const [price, setPrice] = useState(0)\n  const [description, setDescription] = useState(\"\")\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\n  const [numberOfAdvertisements, setNumberOfAdvertisements] = useState(0)\n  const [advertisementDays, setAdvertisementDays] = useState(0)\n\n\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n\n    if (`${price}` === '' || price <= 0) {\n      toastError('Please Fill Price with a valid input (more than 0)')\n      return 0\n    }\n\n    if (`${description}` === '') {\n      toastError('Please Fill Description')\n      return 0\n    }\n\n\n    if (isEditing === true) {\n      dispatch(\n        updateSubscription({\n          name,\n          price,\n          description,\n          advertisementDays,\n          numberOfAdvertisements: numberOfAdvertisements ? numberOfAdvertisements : 0,\n          id\n        })\n      )\n    } else {\n      dispatch(\n        addSubscription({\n          name,\n          price,\n          description,\n          advertisementDays,\n          numberOfAdvertisements: numberOfAdvertisements ? numberOfAdvertisements : 0\n        })\n      )\n    }\n  }\n  useEffect(() => {\n    if (subscriptionObj && subscriptionObj.name && isEditing) {\n      setname(subscriptionObj?.name ? subscriptionObj?.name : \"\")\n      setDescription(subscriptionObj?.description ? subscriptionObj?.description : \"\")\n      setPrice(subscriptionObj?.price ? subscriptionObj?.price : \"\")\n      setAdvertisementDays(subscriptionObj?.advertisementDays ? subscriptionObj?.advertisementDays : \"\")\n      setNumberOfAdvertisements(subscriptionObj?.numberOfAdvertisements ? subscriptionObj?.numberOfAdvertisements : \"\")\n    } else {\n      setname(\"\")\n      setDescription(\"\")\n      setPrice(\"\")\n      setAdvertisementDays(0)\n      setNumberOfAdvertisements(\"\")\n    }\n\n  }, [subscriptionObj, isEditing])\n\n\n  const handleGetSubscriptionById = () => {\n    dispatch(getSubscriptionById(id))\n  }\n\n  useEffect(() => {\n    // console.log(id ? \"true\" : \"false\")\n    if (id) {\n      handleGetSubscriptionById()\n      setIsEditing(true)\n    }\n\n  }, [id])\n\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/subscription/advertisement/view\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Advertisement Subscription</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Name\n            </Label>\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Subscription Name' />\n          </Col>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Description\n            </Label>\n            <Input type='text' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Description' />\n          </Col>\n\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Number Of advertisements allowed in this subscription\n            </Label>\n            <Input type='number' id='basicInput' value={numberOfAdvertisements} onChange={(e) => setNumberOfAdvertisements(e.target.value)} placeholder='Enter number Of sales allowed in this subscription' />\n          </Col>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Number Of days for which Advertisements are allowed in this subscription\n            </Label>\n            <Input type='number' id='basicInput' value={advertisementDays} onChange={(e) => setAdvertisementDays(e.target.value)} placeholder='Enter the number Of days for which Sales are allowed in this subscription' />\n          </Col>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Price\n            </Label>\n            <Input type='number' id='basicInput' value={price} onChange={(e) => setPrice(e.target.value)} placeholder='Enter Subscription Price' />\n          </Col>\n\n\n          <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card >\n  )\n}\nexport default AddAdvertisementSubscription\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit, Eye } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteSubscription, deleteTicket } from '../store'\nimport moment from 'moment'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"5.6%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Heading',\n    sortable: false,\n    sortField: 'name',\n    cell: row => row?.name\n  },\n  {\n    name: 'User Name',\n    sortable: false,\n    sortField: 'sname',\n    cell: row => row?.userId?.name\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Link color='primary' to={`/User-Tickets/View/${row._id}`} className='btn-sm  btn-primary'>\n          <Eye size={14} />\n        </Link>\n      <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteTicket(row._id))\n          }}\n        >    <Trash2 size={14} /></Button> \n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTickets } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst TicketList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Tickets)\n  const FlashSalesArr = useSelector(state => state.Tickets.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(FlashSalesArr)\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getTickets({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getTickets({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetFlashSales = () => {\n    dispatch(getTickets({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetFlashSales()\n  }, [])\n\n\n  useEffect(() => {\n    console.log(FlashSalesArr, \"FlashSalesArr\")\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getTickets({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            columns={columns}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={[...FlashSalesArr]}\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default TicketList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst Tickets = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default Tickets\n","\n\n// ** Reactstrap Imports\nimport { useEffect, useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { AddTicketMessage, getTicketMessagesbyId } from '../../../services/UserTicketMessage.service'\nimport { DisplayDate } from '../../../utility/DateUtils'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nexport default function UserTicketDetails() {\n    const { id } = useParams()\n    const params = useParams()\n    const [messageArr, setMessageArr] = useState([])\n    const [message, setMessage] = useState(\"\")\n    const [ticketObj, setTicketObj] = useState({})\n    const userId = useSelector(state => state.auth.userData.userId)\n\n\n    const handleGetUserTickets = async () => {\n        try {\n            const { data: res } = await getTicketMessagesbyId(params.id)\n            if (res.data) {\n                setMessageArr(res.data.ticketMessageArr)\n                setTicketObj(res.data)\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n\n    useEffect(() => {\n        handleGetUserTickets()\n    }, [params])\n\n\n    const commentsEndRef = useRef()\n    const commentsContainerRef = useRef()\n\n    const handleAddComment = async () => {\n        try {\n            const obj = {\n                message,\n                userTicketsId: params.id,\n                userId\n            }\n            const { data: res } = await AddTicketMessage(obj)\n            if (res.message) {\n                toastSuccess(res.message)\n                setMessage(\"\")\n                handleGetUserTickets()\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n    return (\n        <div className='container'>\n\n            <div className=\"row mt-4\">\n                <h3 className=' mb-3'>Ticket for - {ticketObj?.name}</h3>\n\n                <div className='col-12' ref={commentsContainerRef} style={{ border: \"solid 1px rgba(0,0,0,0.2)\", padding: 15, borderRadius: 15, minHeight: \"40vh\", maxHeight: \"60vh\", overflowY: \"auto\", display: \"grid\", placeItems: \"center\" }}>\n                    {messageArr && messageArr.length > 0 && messageArr.map((el, index) => {\n                        return (\n                            <div style={{ border: \"solid 1px white\", borderRadius: 5, width: \"80%\", marginLeft: el?.userId !== userId ? \"-20%\" : \"20%\", marginBottom: 15, backgroundColor: el?.userId !== userId ? \"#E7B84E\" : \"grey\", padding: 10 }} key={index}>\n                                <div style={{ fontSize: 17, fontWeight: \"600\", color: \"white\" }}>\n                                    {el.message}\n                                </div>\n                                <div className=\"row d-flex justify-content-between mt-3\">\n                                    <div className='col-11' style={{ fontSize: 12, color: \"white\" }}>\n                                        by {el?.userId === userId ? \"You\" : \"Team cloud bazar\"}\n                                    </div>\n                                    <div className='col-1 d-flex justify-content-end' style={{ fontSize: 12, color: \"white\" }}>\n                                        {DisplayDate(el?.createdAt, \"dd/mm/yyyy\")}\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                    <div ref={commentsEndRef} style={{ marginTop: 170 }} />\n                </div>\n\n\n                <div className=\"row d-flex justify-content-between my-4\">\n                    <textarea className=\"form-control col-10\" style={{ width: \"80%\" }} onChange={(e) => setMessage(e.target.value)} value={message} name=\"name\" type=\"text\" />\n                    <button onClick={() => handleAddComment()} className=\"btn btn-custom btn-yellow mt-2\" style={{ height: 40, width: \"15%\" }}>\n                        send message\n                    </button>\n\n                </div>\n            </div>\n\n        </div>\n    )\n}","export const DisplayDate = (value, format) => {\n    if (format) {\n        if (`${format}`.toLowerCase() === \"dd/mm/yyyy\".toLowerCase()) {\n            return `${new Date(value).getDate()}/${new Date(value).getMonth() + 1}/${new Date(value).getFullYear()}`\n        } else if (`${format}`.toLowerCase() === \"dd-mm-yyyy\".toLowerCase()) {\n            return `${new Date(value).getDate()}-${new Date(value).getMonth() + 1}-${new Date(value).getFullYear()}`\n        } else if (`${format}`.toLowerCase() === \"mm-dd-yyyy\".toLowerCase()) {\n            return `${new Date(value).getMonth() + 1}-${new Date(value).getDate()}-${new Date(value).getFullYear()}`\n        } else if (`${format}`.toLowerCase() === \"mm/dd/yyyy\".toLowerCase()) {\n            return `${new Date(value).getMonth() + 1}/${new Date(value).getDate()}/${new Date(value).getFullYear()}`\n        }\n    } else {\n        return `${new Date(value).getDate()}/${new Date(value).getMonth() + 1}/${new Date(value).getFullYear()}`\n    }\n}","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Database, Edit2, Eye, Settings, Slack, User } from 'react-feather'\n\n// ** Reactstrap Imports\nimport moment from 'moment'\nimport { updateProductApi } from '../../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"5.6%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Owner Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"15%\",\n    cell: row => row?.userId?.name\n  },\n  {\n    name: 'Product Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.productId?.name\n  },\n  {\n    name: 'Message',\n    sortable: false,\n    sortField: 'discounttype',\n    // width: \"25%\",\n    cell: row => row?.message\n  },\n  {\n    name: 'Start Date',\n    sortable: false,\n    sortField: 'S Date',\n    cell: row => `${moment(row?.startDate).format(\"DD-MM-YYYY\")}`\n  },\n  {\n    name: 'End Date',\n    sortable: false,\n    sortField: 'e Date',\n    cell: row => `${moment(row?.endDate).format(\"DD-MM-YYYY\")}`\n  }\n  // {\n  //   name: 'Actions',\n  //   cell: row => (\n  //     <>\n\n  //       <Link color='primary' to={`/Promotions/view-details/${row._id}`} className='btn-sm  btn-primary'>\n  //         <Eye size={14} />\n  //       </Link>\n\n  //     </>\n  //   )\n  // }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPromotions } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Promotions)\n  const FlashSalesArr = useSelector(state => state.Promotions.data)\n  // const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(FlashSalesArr)\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getPromotions({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getPromotions({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handlegetPromotions = () => {\n    dispatch(getPromotions({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handlegetPromotions()\n  }, [])\n\n\n  useEffect(() => {\n    console.log(FlashSalesArr, \"FlashSalesArr\")\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getPromotions({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            columns={columns}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={FlashSalesArr}\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst PromotionList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default PromotionList\n","\n\n// ** Reactstrap Imports\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { Link, useParams } from 'react-router-dom'\nimport { Card, CardBody, CardHeader, CardTitle, Row } from 'reactstrap'\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\nimport { getFlashSalebyId } from '../../../../services/FlashSales.service'\nimport { toastError } from '../../../../utility/toastutill'\nexport default function PromotionDetails() {\n    const { id } = useParams()\n    const [flashSaleObj, setFlashSaleObj] = useState({})\n    // ** States\n    const handleGetUsersSubscriptionById = async (query) => {\n        try {\n            const { data: res } = await getFlashSalebyId(query)\n            if (res.data) {\n                console.log(res, \"userSUb\")\n                setFlashSaleObj(res.data)\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n    useEffect(() => {\n        // console.log(id ? \"true\" : \"false\")\n        if (id) {\n            handleGetUsersSubscriptionById(id)\n        }\n\n    }, [id])\n\n\n    return (\n        <Card>\n            <CardHeader>\n                <Link to=\"/flash-sales/view\" className=' btn btn-sm btn-warning' color='primary'>\n                    <ArrowUpLeft />Back\n                </Link>\n\n\n                <CardTitle tag='h4'>User's Subscriptions</CardTitle>\n            </CardHeader>\n\n            <CardBody>\n                <Row>\n                    <div>\n                        <table class=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td>Owner Name</td>\n                                    <td>{flashSaleObj?.userId?.name}</td>\n                                </tr>\n                                <tr>\n                                    <td>Product Name</td>\n                                    <td>{flashSaleObj?.productId?.name}</td>\n                                </tr>\n                                <tr>\n                                    <td>Discount Type</td>\n                                    <td>{flashSaleObj?.discountType}</td>\n                                </tr>\n                                <tr>\n                                    <td>Discount Value</td>\n                                    <td>{flashSaleObj?.discountValue}</td>\n                                </tr>\n                                <tr>\n                                    <td>Sale Price</td>\n                                    <td>{flashSaleObj?.salePrice}</td>\n                                </tr>\n                                <tr>\n                                    <td>Product Price</td>\n                                    <td>{flashSaleObj?.price}</td>\n                                </tr>\n                                <tr>\n                                    <td>Sale Starts on</td>\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\n                                </tr>\n                                <tr>\n                                    <td>Sale ends on</td>\n                                    <td>{moment(flashSaleObj?.startDate).format(\"DD-MM-YYYY\")}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </Row>\n            </CardBody>\n        </Card >\n    )\n}","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport { addSubscriptionApi, deleteSubscriptionApi, getByIdApi, getSubscriptionApi, getSubscriptionWithSubscriberCountApi, updateSubscriptionApi } from '../../../../services/subscription.service'\nimport { getSubscriptionSubscribedbyUserId } from '../../../../services/UserSubscription.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n\nexport const getSubscription = createAsyncThunk('Subscription/getSubscription', async params => {\n  let query = ``\n  if (params) {\n    if (params.q) {\n      query = `${query}&q=${params.q}`\n    }\n    if (params.perPage) {\n      query = `${query}&perPage=${params.perPage}`\n    }\n    if (params.page) {\n      query = `${query}&page=${params.page}`\n    }\n    if (params.status) {\n      query = `${query}&status=${params.status}`\n    }\n  }\n  const response = await getSubscriptionWithSubscriberCountApi(query)\n  return {\n    params,\n    data: response.data.data,\n    subscriptionCount: response.data.subscriptionCount\n  }\n})\nexport const getSubscriptionSubscribedUser = createAsyncThunk('Subscription/getSubscriptionSubscribedUser', async params => {\n  let query = ``\n  if (params) {\n    if (params.q) {\n      query = `${query}&q=${params.q}`\n    }\n    if (params.perPage) {\n      query = `${query}&perPage=${params.perPage}`\n    }\n    if (params.page) {\n      query = `${query}&page=${params.page}`\n    }\n    if (params.status) {\n      query = `${query}&status=${params.status}`\n    }\n  }\n  const response = await getSubscriptionSubscribedbyUserId(query, params.id)\n  console.log(response.data.data, \"response.data.data\")\n  return {\n    params,\n    data: response.data.data,\n    subscriptionCount: response.data.subscriptionCount\n  }\n})\n\nexport const getSubscriptionById = createAsyncThunk('Subscription/getSubscriptionById', async id => {\n  try {\n    const response = await getByIdApi(id)\n    toastSuccess(response.data.message)\n    return response.data.data\n  } catch (error) {\n    toastError(error)\n    return error\n  }\n})\n\nexport const addSubscription = createAsyncThunk('Subscription/addSubscription', async (formData, { dispatch }) => {\n\n  try {\n    const res = await addSubscriptionApi(formData)\n    if (res.data) {\n      toastSuccess(res.data.message)\n      await dispatch(getSubscription())\n    }\n\n    return res.data.success ? res.data.success : false\n  } catch (error) {\n    toastError(error)\n    return error\n  }\n\n})\n\nexport const updateSubscription = createAsyncThunk('Subscription/updateSubscription', async (formData, { dispatch }) => {\n\n  try {\n    const res = await updateSubscriptionApi(formData, formData.id)\n    if (res.data.success) {\n      toastSuccess(res.data.message)\n      await dispatch(getSubscription())\n    }\n\n    return res.data.success ? res.data.success : false\n  } catch (error) {\n    toastError(error)\n    return error\n  }\n\n})\n\nexport const deleteSubscription = createAsyncThunk('Subscription/deleteSubscription', async (id, { dispatch }) => {\n  try {\n    const res = await deleteSubscriptionApi(id)\n    if (res.data.success) {\n      toastSuccess(res.data.message)\n      await dispatch(getSubscription())\n    }\n    return id\n  } catch (error) {\n    toastError(error)\n    return error\n  }\n})\n\nexport const SubscriptionSlice = createSlice({\n  name: 'Subscription',\n  initialState: {\n    data: [],\n    params: {},\n    allData: [],\n    selectedSubscription: null,\n    success: false\n  },\n  reducers: {\n\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getSubscription.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.subscriptionCount\n      })\n      .addCase(getSubscriptionSubscribedUser.fulfilled, (state, action) => {\n        state.data = action.payload.data\n        state.params = action.payload.params\n        state.total = action.payload.subscriptionCount\n      })\n  }\n})\n\nexport default SubscriptionSlice.reducer\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit, Eye } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\nimport { deleteSubscription } from '../store'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    // width: \"10%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    // width: \"25%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'Description',\n    sortable: false,\n    sortField: 'description',\n    // width: \"25%\",\n    cell: row => row?.description\n  },\n  {\n    name: 'Duration in months',\n    sortable: false,\n    sortField: 'noOfMonth',\n    // width: \"15%\",\n    cell: row => `${row?.noOfMonth} ${row.noOfMonth === 1 ? \"month\" : \"months\"}`\n  },\n  {\n    name: 'Users Subscribed',\n    sortable: false,\n    sortField: 'usersCount',\n    // width: \"15%\",\n    cell: row => `${row?.usersCount}`\n  },\n  {\n    name: 'Price',\n    sortable: false,\n    sortField: 'Price',\n    // width: \"15%\",\n    cell: row => `₹ ${row?.price}`\n  }\n  // {\n  //   name: 'Actions',\n  //   cell: row => (\n  //     <>\n\n  //       <Link color='primary' to={`/Subscription/view-users/${row._id}`} className='btn-sm  btn-primary'>\n  //         <Eye size={14} />\n  //       </Link>\n\n  //     </>\n  //   )\n  // }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSubscription } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.subscription)\n  const subscriptionArr = useSelector(state => state.subscription.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getSubscription({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getSubscription({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetSubscriptions = () => {\n    dispatch(getSubscription({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetSubscriptions()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getSubscription({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                {/* <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/subscription/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div> */}\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst AllSubscriptionList = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default AllSubscriptionList\n","\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSubscriptionSubscribedUser } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link, useParams } from 'react-router-dom'\n\n\nconst AllSubscribedUsers = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const params = useParams()\n  const store = useSelector(state => state.subscription)\n  const subscriptionArr = useSelector(state => state.subscription.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getSubscriptionSubscribedUser({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        id: params.id\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getSubscriptionSubscribedUser({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1,\n      id: params.id\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handlegetSubscriptionSubscribedUsers = () => {\n    dispatch(getSubscriptionSubscribedUser({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage,\n      id: params.id\n    }))\n  }\n\n\n  useEffect(() => {\n    handlegetSubscriptionSubscribedUsers()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getSubscriptionSubscribedUser({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage,\n        id: params.id\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  const columns = [\n    {\n      name: 'S.no',\n      sortable: false,\n      sortField: 'index',\n      // width: \"10%\",\n      cell: (row, index) => (index + 1)\n    },\n    {\n      name: 'Name',\n      sortable: false,\n      sortField: 'name',\n      // width: \"25%\",\n      cell: row => row?.name\n    },\n    {\n      name: 'Description',\n      sortable: false,\n      sortField: 'description',\n      // width: \"25%\",\n      cell: row => row?.description\n    },\n    {\n      name: 'Duration in months',\n      sortable: false,\n      sortField: 'noOfMonth',\n      // width: \"15%\",\n      cell: row => `${row?.noOfMonth} ${row.noOfMonth === 1 ? \"month\" : \"months\"}`\n    },\n    {\n      name: 'Users Subscribed',\n      sortable: false,\n      sortField: 'usersCount',\n      // width: \"15%\",\n      cell: row => `${row?.usersCount}`\n    },\n    {\n      name: 'Price',\n      sortable: false,\n      sortField: 'Price',\n      // width: \"15%\",\n      cell: row => `₹ ${row?.price}`\n    },\n    {\n      name: 'Actions',\n      cell: row => (\n        <>\n\n          {/* <Link color='primary' to={`/Subscription/view-users/${row._id}`} className='btn-sm  btn-primary'>\n            <Eye size={14} />\n          </Link> */}\n\n        </>\n        // <div className='column-action'>\n        //   <UncontrolledDropdown>\n        //     <DropdownToggle tag='div' className='btn btn-sm'>\n        //       <MoreVertical size={14} className='cursor-pointer' />\n        //     </DropdownToggle>\n        //     <DropdownMenu>\n        //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n        //         e.preventDefault() \n        //         store.dispatch(getProduct(row._id))\n        //         }}\n        //         >\n        //         <Archive size={14} className='me-50' />\n        //         <span className='align-middle'>Edit</span>\n        //       </DropdownItem>\n        //       <DropdownItem\n        //         tag='a'\n        //         href='/'\n        //         className='w-100'\n        //         onClick={e => {\n        //           e.preventDefault()\n        //           store.dispatch(deleteProduct(row._id))\n        //         }}\n        //       >\n        //         <Trash2 size={14} className='me-50' />\n        //         <span className='align-middle'>Delete</span>\n        //       </DropdownItem>\n        //     </DropdownMenu>\n        //   </UncontrolledDropdown>\n        // </div>\n      )\n    }\n  ]\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/subscription/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default AllSubscribedUsers\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Database, Edit2, Eye, Settings, Slack, User } from 'react-feather'\n\n// ** Reactstrap Imports\nimport moment from 'moment'\nimport { updateProductApi } from '../../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"5.6%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Created By Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"15%\",\n    cell: row => (row?.createdByObj.companyObj?.name ? row?.createdByObj.companyObj?.name : row.name)\n  },\n  {\n    name: 'Product Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.productObj?.name\n  },\n  {\n    name: 'Lead sent to',\n    sortable: false,\n    sortField: 'e Date',\n    cell: row => (row?.userObj.companyObj?.name ? row?.userObj.companyObj?.name : row.name)\n  },\n  {\n    name: 'Created On',\n    sortable: false,\n    sortField: 'e Date',\n    cell: row => `${moment(row?.createdAt).format(\"DD-MM-YYYY\")}`\n\n  }\n\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getLeads } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n// ** Reactstrap Imports\nimport {\n  Button,\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Leads)\n  const FlashSalesArr = useSelector(state => state.Leads.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n        const [startDate, setstartDate] = useState()\n        const [endDate, setEndDate] = useState()\n\n  useEffect(() => {\n    setDataArr(FlashSalesArr)\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getLeads({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getLeads({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetFlashSales = () => {\n    dispatch(getLeads({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetFlashSales()\n  }, [])\n\n\n  useEffect(() => {\n    console.log(FlashSalesArr, \"FlashSalesArr\")\n  }, [FlashSalesArr])\n\n\n     const handleFilterByDate = () => {\n     dispatch(\n       getLeads({\n         sort,\n         sortColumn,\n        startDate,\n       endDate\n       })\n     )\n     }\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getLeads({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  return (\n    <Fragment>\n      <Card className=\"overflow-hidden\">\n        <div className=\"react-dataTable\">\n          <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2\">\n            <Row>\n              <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n                <div className=\"d-flex align-items-center w-100\">\n                  <label htmlFor=\"rows-per-page\">Show</label>\n                  <Input\n                    className=\"mx-50\"\n                    type=\"select\"\n                    id=\"rows-per-page\"\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: \"5rem\" }}\n                  >\n                    <option value=\"1\">1</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                    <option value=\"500\">500</option>\n                  </Input>\n                  <label htmlFor=\"rows-per-page\">Entries</label>\n                </div>\n                <div className=\"d-flex align-items-center\">\n                  <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                    Filter\n                  </label>\n                  <Input\n                    id=\"search-invoice\"\n                    className=\"ms-50 w-100\"\n                    type=\"date\"\n                    value={startDate}\n                    onChange={(e) => setstartDate(e.target.value)}\n                  />\n                  <Input\n                    id=\"search-invoice\"\n                    className=\"ms-50 w-100\"\n                    type=\"date\"\n                    value={endDate}\n                    onChange={(e) => setEndDate(e.target.value)}\n                  />\n                </div>\n                <Button color=\"primary\" onClick={() => handleFilterByDate()}>\n                  Filter\n                </Button>\n              </Col>\n              <Col xl=\"6\" className=\"d-flex justify-content-end pe-3\">\n                <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n                  <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                    Search:\n                  </label>\n                  <Input\n                    id=\"search-invoice\"\n                    className=\"ms-50 w-100\"\n                    type=\"text\"\n                    value={searchTerm}\n                    onChange={(e) => handleFilter(e.target.value)}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            columns={columns}\n            className=\"react-dataTable\"\n            paginationComponent={CustomPagination}\n            data={FlashSalesArr}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst LeadsList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default LeadsList\n","// ** React Imports\nimport { Link, useNavigate } from 'react-router-dom'\n// ** Custom Components\n// ** Store & Actions\n// ** Icons Imports\nimport { approveUserById } from '../../../../services/user.service'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\n\n// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Invoice List Sidebar\n\n// ** Table Columns\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteUserRequirement, getAllUserRequirement } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Database, Edit, Edit2, FileText, Settings, Slack, Trash2, User, Eye } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\nimport Select from 'react-select'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\nimport { store } from \"@store/store\"\n\n\n// ** Reactstrap Imports\nimport {\n  Button, Card, CardBody, CardHeader, CardTitle, Col, Input,\n  Label, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\n// import AddModal from './AddModal'\n// import EditModal from './EditModal'\n\nconst UsersWithSubscription = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n\n  const userData = useSelector(state => state.UserRequirements)\n  const [selectedUser, setSelectedUser] = useState({})\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('name')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n  const [rolesOptions, setrolesOptions] = useState([])\n  const [editModal, setEditModal] = useState(false)\n      const [startDate, setstartDate] = useState()\n      const [endDate, setEndDate] = useState()\n  // ** Function to toggle sidebar\n\n  // ** Get data on mount\n  useEffect(() => {\n    // dispatch(getAllData())\n    dispatch(\n      getAllUserRequirement({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        showName: true\n        // currentPlan: currentPlan.value\n      })\n    )\n    // ** Set Roles\n\n\n  }, [dispatch, userData?.data?.length, sort, sortColumn, currentPage])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getAllUserRequirement({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n    dispatch(\n      getAllUserRequirement({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getAllUserRequirement({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n\n  const handleFilterByDate = () => {\n    dispatch(\n      getAllUserRequirement({\n        sort,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value,\n        startDate,\n        endDate\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(userData.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  const handleStatus = async (id, status) => {\n    try {\n      const obj = {\n        status\n      }\n      const { data: res } = await approveUserById(id, obj)\n      if (res.message) {\n        toastSuccess(res.message)\n      }\n    } catch (error) {\n      toastError(error)\n    }\n  }\n\n\n  // ** Renders Role Columns\n  const renderRole = row => {\n    const roleObj = {\n      USER: {\n        class: 'text-primary',\n        icon: User\n      },\n      MANUFACTURER: {\n        class: 'text-success',\n        icon: Database\n      },\n      editor: {\n        class: 'text-info',\n        icon: Edit2\n      },\n      DISTRIBUTOR: {\n        class: 'text-warning',\n        icon: Settings\n      },\n      DEALER: {\n        class: 'text-danger',\n        icon: Slack\n      },\n      APPROVERS: {\n        class: 'text-danger',\n        icon: Slack\n      }\n    }\n\n    const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n    return (\n      <span className='text-truncate text-capitalize align-middle'>\n        <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n        {row.role}\n      </span>\n    )\n  }\n\n\n  useEffect(() => {\n    console.log(userData, \"userData\")\n  }, [userData])\n\n\n  const columns = [\n    {\n      name: 'User',\n      sortable: true,\n      minWidth: '300px',\n      sortField: 'fullName',\n      selector: row => row.name,\n      cell: row => (\n        <div className='d-flex justify-content-left align-items-center'>\n          {/* {renderClient(row)} */}\n          <div className='d-flex flex-column'>\n            <Link\n              to={``}\n              className='user_name text-truncate text-body'\n              onClick={() => dispatch(getUser(row.id))}\n            >\n              <span className='fw-bolder'>{row.name}</span>\n            </Link>\n            <small className=' mb-0'>{row.email}</small>\n          </div>\n        </div>\n      )\n    },\n    // {\n    //   name: 'Role',\n    //   sortable: true,\n    //   minWidth: '172px',\n    //   sortField: 'role',\n    //   selector: row => row?.role,\n    //   cell: row => renderRole(row)\n    // },\n    // {\n    //   name: 'Plan',\n    //   minWidth: '138px',\n    //   sortable: true,\n    //   sortField: 'currentPlan',\n    //   selector: row => row.currentPlan,\n    //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\n    // },\n    {\n      name: 'Phone',\n      minWidth: '230px',\n      sortable: true,\n      sortField: 'phone',\n      selector: row => row.phone,\n      cell: row => <span className='text-capitalize'>{row.phone}</span>\n    },\n    {\n      name: 'Product',\n      minWidth: '230px',\n      sortable: true,\n      sortField: 'productName',\n      selector: row => row.productName,\n      cell: row => <span className='text-capitalize'>{row.productName}</span>\n    },\n    {\n      name: 'Address',\n      minWidth: '230px',\n      sortable: true,\n      sortField: 'address',\n      selector: row => row.address,\n      cell: row => <span className='text-capitalize'>{row.address}</span>\n    },\n     {\n      name: 'Actions',\n      minWidth: '100px',\n      cell: row => (\n        <>\n\n          <Button color='danger' className='ms-2 btn-sm'\n            onClick={e => {\n              e.preventDefault()\n                         store.dispatch(deleteUserRequirement(row._id))\n            }}\n          >    <Trash2 size={14} /></Button>\n        </>\n      \n      )\n    }\n  ]\n\n  return (\n    <Fragment>\n      <Card className=\"overflow-hidden\">\n        <div className=\"mx-2 pt-2 \">\n          <Row>\n            <Col xl=\"3\" className=\"d-flex justify-content-start\">\n              <h3>\n                <b>User's Requirements</b>\n              </h3>\n            </Col>\n            <Col xl=\"2\" className=\"d-flex align-items-center p-0\">\n              <div className=\"d-flex align-items-center w-100\">\n                <label htmlFor=\"rows-per-page\">Show</label>\n                <Input\n                  className=\"mx-50\"\n                  type=\"select\"\n                  id=\"rows-per-page\"\n                  value={rowsPerPage}\n                  onChange={handlePerPage}\n                  style={{ width: \"5rem\" }}\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"10\">10</option>\n                  <option value=\"25\">25</option>\n                  <option value=\"50\">50</option>\n                  <option value=\"100\">100</option>\n                  <option value=\"500\">500</option>\n                </Input>\n                <label htmlFor=\"rows-per-page\">Entries</label>\n              </div>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                  Filter\n                </label>\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"date\"\n                  value={startDate}\n                  onChange={(e) => setstartDate(e.target.value)}\n                />\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"date\"\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                />\n              </div>\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\n                Filter\n              </Button>\n            </Col>\n            <Col xl=\"7\" className=\"d-flex justify-content-end\">\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                  Search:\n                </label>\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"text\"\n                  value={searchTerm}\n                  onChange={(e) => handleFilter(e.target.value)}\n                />\n              </div>\n\n              {/* <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\n                Add New User\n              </Button> */}\n            </Col>\n          </Row>\n        </div>\n        <div>\n          <DataTable\n            noHeader\n            pagination\n            columns={columns}\n            paginationServer\n            paginationComponent={CustomPagination}\n            // sortIcon={<ChevronDown />}\n            data={userData.data}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersWithSubscription\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UserRequirements = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default UserRequirements\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteBlogs } from '../store'\nimport { generateFilePath } from '../../../services/url.service'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"10%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'Image',\n    sortable: false,\n    sortField: 'image',\n    width: \"25%\",\n    cell: row => <a href={generateFilePath(row.image)} target='_blank'> <img src={generateFilePath(row.image)} style={{ width: 20, height: 20 }} alt=\"\" srcset=\"\" /></a>\n  },\n  // {\n  //   name: 'Description',\n  //   sortable: false,\n  //   sortField: 'description',\n  //   width: \"25%\",\n  //   cell: row => row?.description\n  // },\n  // {\n  //   name: 'Duration in days',\n  //   sortable: false,\n  //   sortField: 'durationInDays',\n  //   width: \"15%\",\n  //   cell: row => `${row?.durationInDays} days`\n  // },\n  {\n    name: 'Created On',\n    sortable: false,\n    sortField: 'created On',\n    width: \"15%\",\n    cell: row => new Date(row.createdAt).toDateString()\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Link color='primary' to={`/Blogs/edit/${row._id}`} className='btn-sm  btn-primary'>\n          <Edit size={14} />\n        </Link>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteBlogs(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBlogs } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Blogs)\n  const subscriptionArr = useSelector(state => state.Blogs.data)\n  // const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getBlogs({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getBlogs({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handlegetBlogss = () => {\n    dispatch(getBlogs({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handlegetBlogss()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getBlogs({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/Blogs/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst Blogs = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default Blogs\n","import React, { useEffect, useState } from 'react'\nimport ReactQuill, { Quill } from 'react-quill'\n\nconst modules = {\n    toolbar: [\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ list: 'ordered' }, { list: 'bullet' }, { indent: '-1' }, { indent: '+1' }],\n        ['link', 'image', 'video'],\n        [{ color: [] }, { background: [] }],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean']\n    ]\n}\n\nconst formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block',\n    'list', 'bullet', 'indent',\n    'link', 'image', 'video',\n    'script',\n    'color', 'background',\n    'font', 'align'\n]\n\n\nexport default function QuillEditor({ handleChange, value }) {\n    const [quillValue, setQuillValue] = useState(value ? value : \"\")\n    useEffect(() => {\n        if (value) {\n            setQuillValue(value)\n        } else {\n            setQuillValue(\"\")\n        }\n    }, [value])\n\n    return (\n        <>\n            <ReactQuill\n                theme=\"snow\"\n                value={quillValue}\n                style={{ height: 400 }}\n                scrollingContaine={{ height: 400 }}\n                onChange={(e) => { setQuillValue(e); handleChange(e) }}\n                placeholder={\"Write something awesome...\"}\n                modules={modules}\n                formats={formats}\n            />\n        </>\n    )\n}\n","// ** Reactstrap Imports\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\nimport { addBlogs, getBlogsById, updateBlogs } from '../store'\nimport _ from 'lodash'\nimport QuillEditor from '../../../QuillEditor'\nimport { toastError } from '../../../utility/toastutill'\nimport FileUpload from '../../../utility/FileUpload'\nimport { generateFilePath } from '../../../services/url.service'\nconst Addblog = () => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const blogObj = useSelector(state => state.Blogs.selectedBlogs)\n  const [selectedSubscription, setSelectedSubscription] = useState({})\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setname] = useState(\"\")\n  const [durationInDays, setDurationInDays] = useState(0)\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\n  const [numberOfPromotions, setNumberOfPromotions] = useState(0)\n\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n\n    if (`${description}` === '') {\n      toastError('Please Fill Description')\n      return 0\n    }\n\n    if (isEditing === true) {\n      dispatch(\n        updateBlogs({\n          name,\n          description,\n          image,\n          id\n        })\n      )\n    } else {\n      dispatch(\n        addBlogs({\n          name,\n          description\n        })\n      )\n    }\n  }\n  useEffect(() => {\n    if (blogObj && blogObj.name && isEditing) {\n      setname(blogObj?.name ? blogObj?.name : \"\")\n      setDescription(blogObj?.description ? blogObj?.description : \"\")\n      setDurationInDays(blogObj?.durationInDays ? blogObj?.durationInDays : \"\")\n      setImage(blogObj?.image ? blogObj?.image : \"\")\n      setPrice(blogObj?.price ? blogObj?.price : \"\")\n      setNumberOfPromotions(blogObj?.numberOfPromotions ? blogObj?.numberOfPromotions : \"\")\n      setMessageArr(blogObj?.messageArr ? blogObj?.messageArr : [{ message: \"\" }])\n    } else {\n      setname(\"\")\n      setDescription(\"\")\n      setDurationInDays(\"\")\n      setPrice(\"\")\n      setNumberOfPromotions(\"\")\n      setMessageArr([])\n    }\n\n  }, [blogObj, isEditing])\n\n\n  const handlegetBlogsById = () => {\n    dispatch(getBlogsById(id))\n  }\n\n  useEffect(() => {\n    // console.log(id ? \"true\" : \"false\")\n    if (id) {\n      handlegetBlogsById()\n      setIsEditing(true)\n    }\n\n  }, [id])\n\n\n  const handleaddBlogs = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    tempArr.push({ message: \"\" })\n    setMessageArr([...tempArr])\n  }\n\n\n  const handleRemoveSubscription = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    if (tempArr.length > 1) {\n      tempArr.pop()\n      setMessageArr([...tempArr])\n    }\n  }\n\n  const handleSetMessge = (value, index) => {\n    const tempArr = _.cloneDeep(messageArr)\n    // setMessageArr(messageArr.map((ele, indexX) => {\n    //   if (indexX === index) {\n    //     ele.message = value\n    //   }\n    //   return ele\n    // }))\n    tempArr[index].message = value\n    setMessageArr([...tempArr])\n\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/blogs/view\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Blog</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Name\n            </Label>\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Subscription Name' />\n          </Col>\n          <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Image (width:522px and height:280px)\n            </Label>\n            <div>\n              {\n                image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" />\n              }\n            </div>\n            <FileUpload onFileChange={setImage} />\n          </Col>\n\n          <Col className='mb-1 d-flex justify-content-between' xl='12' md='12' sm='12'>\n            <Label for='basicInput'>\n              Message\n            </Label>\n\n          </Col>\n          <Col className='mb-1 d-flex' xl='12' md='12' sm='12'>\n            <QuillEditor handleChange={setDescription} value={description} />\n          </Col>\n\n          <Col className='mb-1 mt-4' xl='12' md='12' sm='12'>\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card >\n  )\n}\nexport default Addblog\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteBlogVideo } from '../store'\nimport { generateFilePath } from '../../../services/url.service'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"10%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'URL',\n    sortable: false,\n    sortField: 'imagurl',\n    width: \"25%\",\n    cell: row => row.url\n  },\n  // {\n  //   name: 'Description',\n  //   sortable: false,\n  //   sortField: 'description',\n  //   width: \"25%\",\n  //   cell: row => row?.description\n  // },\n  // {\n  //   name: 'Duration in days',\n  //   sortable: false,\n  //   sortField: 'durationInDays',\n  //   width: \"15%\",\n  //   cell: row => `${row?.durationInDays} days`\n  // },\n  {\n    name: 'Created On',\n    sortable: false,\n    sortField: 'created On',\n    width: \"15%\",\n    cell: row => new Date(row.createdAt).toDateString()\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n        <Link color='primary' to={`/Blogs-video/edit/${row._id}`} className='btn-sm  btn-primary'>\n          <Edit size={14} />\n        </Link>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteBlogVideo(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBlogVideo } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Video)\n  const subscriptionArr = useSelector(state => state.BlogVideo.data)\n  // const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getBlogVideo({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getBlogVideo({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handlegetBlogss = () => {\n    dispatch(getBlogVideo({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handlegetBlogss()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getBlogVideo({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store?.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n  useEffect(() => {\n    console.log(subscriptionArr)\n  }, [subscriptionArr])\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/Blogs-video/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst BlogVideo = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default BlogVideo\n","// ** Reactstrap Imports\nimport _ from 'lodash'\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label } from 'reactstrap'\nimport { addBlogVideoApi } from '../../../services/BlogVideo.service'\nimport { generateFilePath } from '../../../services/url.service'\nimport FileUpload from '../../../utility/FileUpload'\nimport { toastError } from '../../../utility/toastutill'\nimport { addBlogVideo, getBlogVideoById, updateBlogVideo } from '../store'\nconst AddblogVideo = () => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const blogObj = useSelector(state => state.BlogVideo.selectedBlogVideo)\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setname] = useState(\"\")\n  const [url, setUrl] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\n\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n\n    if (isEditing === true) {\n      dispatch(\n        updateBlogVideo({\n          name,\n          url,\n          id\n        })\n      )\n    } else {\n      dispatch(\n        addBlogVideo({\n          name,\n          url\n        })\n      )\n    }\n  }\n  useEffect(() => {\n    if (blogObj && blogObj.name && isEditing) {\n      setname(blogObj?.name ? blogObj?.name : \"\")\n      setUrl(blogObj?.url ? blogObj?.url : \"\")\n    } else {\n      setname(\"\")\n      setUrl([])\n    }\n\n  }, [blogObj, isEditing])\n\n\n  const handlegetBlogsById = () => {\n    dispatch(getBlogVideoById(id))\n  }\n\n  useEffect(() => {\n    // console.log(id ? \"true\" : \"false\")\n    if (id) {\n      handlegetBlogsById()\n      setIsEditing(true)\n    }\n\n  }, [id])\n\n\n  const handleaddBlogs = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    tempArr.push({ message: \"\" })\n    setMessageArr([...tempArr])\n  }\n\n\n  const handleRemoveSubscription = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    if (tempArr.length > 1) {\n      tempArr.pop()\n      setMessageArr([...tempArr])\n    }\n  }\n\n  const handleSetMessge = (value, index) => {\n    const tempArr = _.cloneDeep(messageArr)\n    // setMessageArr(messageArr.map((ele, indexX) => {\n    //   if (indexX === index) {\n    //     ele.message = value\n    //   }\n    //   return ele\n    // }))\n    tempArr[index].message = value\n    setMessageArr([...tempArr])\n\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/blogs-video/view\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Blog Video</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        {/* <Row> */}\n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Name\n          </Label>\n          <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Name' />\n        </Col>\n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Video Url\n          </Label>\n          <Input type='text' id='basicInput' value={url} onChange={(e) => setUrl(e.target.value)} placeholder='Enter Url' />\n        </Col>\n\n        <Col className='mb-1 mt-4' xl='12' md='12' sm='12'>\n          <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\n            Submit\n          </Button>\n        </Col>\n        {/* </Row> */}\n      </CardBody>\n    </Card >\n  )\n}\nexport default AddblogVideo\n","// ** Reactstrap Imports\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\nimport { addTopup, getTopupById, updateTopup } from '../store'\nimport _ from 'lodash'\nimport { toastError } from '../../../utility/toastutill'\nimport { ROLES_CONSTANT } from '../../../utility/constant'\nimport Select from 'react-select'\n\nconst AddTopup = () => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const TopupObj = useSelector(state => state.topup.selectedTopup)\n  const [selectedTopup, setSelectedTopup] = useState({})\n\n  const [includesFlashSales, setIncludesFlashSales] = useState(false)\n  const [includesAdvertisements, setIncludesAdvertisements] = useState(false)\n\n\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setname] = useState(\"\")\n  const [price, setPrice] = useState(0)\n  const [description, setDescription] = useState(\"\")\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\n  const [numberOfSales, setNumberOfSales] = useState(0)\n  const [saleDays, setSaleDays] = useState(0)\n  const [numberOfAdvertisement, setNumberOfAdvertisement] = useState(0)\n  const [advertisementDays, setAdvertisementDays] = useState(0)\n  const [rolesOptions, setrolesOptions] = useState([])\n  const [role, setRole] = useState(\"\")\n\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n\n    if (`${price}` === '' || price <= 0) {\n      toastError('Please Fill Price with a valid input (more than 0)')\n      return 0\n    }\n    // if (`${description}` === '') {\n    //   toastError('Please Fill Description')\n    //   return 0\n    // }\n\n    if (includesAdvertisements) {\n\n      if (parseInt(numberOfAdvertisement) < 0) {\n        toastError('Please Fill No of Advertisement with a valid input (more than 0)')\n        return 0\n      }\n\n      if (parseInt(advertisementDays) < 0) {\n        toastError('Please Fill No of days of Advertisement with a valid input (more than 0)')\n        return 0\n      }\n\n    }\n\n    if (includesFlashSales) {\n\n      if (parseInt(numberOfSales) < 0) {\n        toastError('Please Fill No of Flashsales with a valid input (more than 0)')\n        return 0\n      }\n      if (parseInt(saleDays) < 0) {\n        toastError('Please Fill No of days of Flashsales with a valid input (more than 0)')\n        return 0\n      }\n\n    }\n\n    if (parseInt(price) < 0) {\n      toastError('Please Fill Price with a valid input (more than 0)')\n      return 0\n    }\n\n    if (!role || !role?.value) {\n      toastError('Please Select Role for Topup')\n      return 0\n    }\n\n    const obj = {\n      name,\n      price,\n      description,\n      messageArr,\n      includesFlashSales,\n      includesAdvertisements,\n      role: role?.value\n    }\n\n    if (includesAdvertisements) {\n      obj.numberOfAdvertisement = numberOfAdvertisement\n      obj.advertisementDays = advertisementDays\n    }\n\n\n    if (includesFlashSales) {\n      obj.numberOfSales = numberOfSales\n      obj.saleDays = saleDays\n    }\n\n    if (isEditing === true) {\n      dispatch(\n        updateTopup({\n          ...obj,\n          id\n        })\n      )\n    } else {\n      dispatch(\n        addTopup(obj)\n      )\n    }\n  }\n  useEffect(() => {\n    if (TopupObj && TopupObj.name && isEditing) {\n      setname(TopupObj?.name ? TopupObj?.name : \"\")\n      if (TopupObj?.role) {\n        setRole({ label: TopupObj?.role, value: TopupObj?.role })\n      }\n      setDescription(TopupObj?.description ? TopupObj?.description : \"\")\n      setPrice(TopupObj?.price ? TopupObj?.price : \"\")\n      setSaleDays(TopupObj?.saleDays ? TopupObj?.saleDays : \"\")\n      setNumberOfSales(TopupObj?.numberOfSales ? TopupObj?.numberOfSales : \"\")\n      setMessageArr(TopupObj?.messageArr ? TopupObj?.messageArr : [{ message: \"\" }])\n      setIncludesFlashSales(TopupObj?.includesFlashSales)\n      setIncludesAdvertisements(TopupObj?.includesAdvertisements)\n      setNumberOfAdvertisement(TopupObj?.numberOfAdvertisement)\n      setAdvertisementDays(TopupObj?.advertisementDays)\n    } else {\n      setname(\"\")\n      setDescription(\"\")\n      setRole(\"\")\n      setPrice(1)\n      setSaleDays(0)\n      setIncludesFlashSales(false)\n      setIncludesAdvertisements(false)\n      setNumberOfAdvertisement(0)\n      setAdvertisementDays(0)\n      setNumberOfSales(1)\n      setMessageArr([{ message: \"\" }])\n    }\n\n  }, [TopupObj, isEditing])\n\n\n  const handlegetTopupById = () => {\n    dispatch(getTopupById(id))\n  }\n\n  useEffect(() => {\n    const roleSelect = [...Object.values(ROLES_CONSTANT).map(el => {\n      return { label: el, value: el }\n    })].filter((el => (el.label !== \"ADMIN\" || el.label !== ROLES_CONSTANT.FIELDUSER || el.label !== ROLES_CONSTANT.SUBADMIN)))\n    setrolesOptions([...roleSelect])\n\n    if (id) {\n      handlegetTopupById()\n      setIsEditing(true)\n    }\n\n  }, [id])\n\n\n  const handleaddTopup = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    tempArr.push({ message: \"\" })\n    setMessageArr([...tempArr])\n  }\n\n\n  const handleRemoveTopup = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    if (tempArr.length > 1) {\n      tempArr.pop()\n      setMessageArr([...tempArr])\n    }\n  }\n\n  const handleSetMessge = (value, index) => {\n    const tempArr = _.cloneDeep(messageArr)\n    // setMessageArr(messageArr.map((ele, indexX) => {\n    //   if (indexX === index) {\n    //     ele.message = value\n    //   }\n    //   return ele\n    // }))\n    tempArr[index].message = value\n    setMessageArr([...tempArr])\n\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/Topup/View\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Topup</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Name\n            </Label>\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Topup Name' />\n          </Col>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Description\n            </Label>\n            <Input type='text' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Description' />\n          </Col>\n        </Row>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Role\n            </Label>\n            <Select\n              isClearable={false}\n              value={role}\n              options={rolesOptions}\n              className='react-select'\n              classNamePrefix='select'\n              onChange={(val) => setRole(val)}\n            />\n          </Col>\n\n        </Row>\n        <Row>\n          <Col className='mb-1 my-3' xl='2' md='2' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Includes Flash sales\n            </Label>\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesFlashSales} onChange={(e) => setIncludesFlashSales(e.target.checked)} />\n          </Col>\n          <Col className='mb-1  my-3' xl='3' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Includes Advertisements\n            </Label>\n            <Input type='checkbox' className='ms-3' id='basicInput' checked={includesAdvertisements} onChange={(e) => setIncludesAdvertisements(e.target.checked)} />\n          </Col>\n        </Row>\n        <Row>\n          {\n            includesFlashSales &&\n            <>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of sales allowed in this Topup\n                </Label>\n                <Input type='number' id='basicInput' value={numberOfSales} onChange={(e) => setNumberOfSales(e.target.value)} placeholder='Enter number Of sales allowed in this Topup' />\n              </Col>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of days for which Sales are allowed in this Topup\n                </Label>\n                <Input type='number' id='basicInput' value={saleDays} onChange={(e) => setSaleDays(e.target.value)} placeholder='Enter the number Of days for which Sales are allowed in this Topup' />\n              </Col>\n            </>\n          }\n        </Row>\n        <Row>\n          {\n            includesAdvertisements &&\n            <>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of advertisements allowed in this Topup\n                </Label>\n                <Input type='number' id='basicInput' value={numberOfAdvertisement} onChange={(e) => setNumberOfAdvertisement(e.target.value)} placeholder=' Number Of advertisements allowed in this Topup' />\n              </Col>\n              <Col className='mb-1' xl='6' md='6' sm='12'>\n                <Label className='form-label' for='basicInput'>\n                  Number Of days for which advertisements are allowed in this Topup\n                </Label>\n                <Input type='number' id='basicInput' value={advertisementDays} onChange={(e) => setAdvertisementDays(e.target.value)} placeholder='Number Of days for which advertisements are allowed in this Topup' />\n              </Col>\n            </>\n          }\n        </Row>\n        <Row>\n          <Col className='mb-1' xl='6' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Price\n            </Label>\n            <Input type='number' id='basicInput' value={price} onChange={(e) => setPrice(e.target.value)} placeholder='Enter Topup Price' />\n          </Col>\n\n\n          <Col className='mb-1 d-flex justify-content-between' xl='12' md='12' sm='12'>\n            <Label for='basicInput'>\n              Message\n            </Label>\n            <div>\n              <Button type='button' className='me-1' color='primary' onClick={() => handleaddTopup()}>\n                +\n              </Button>\n              <Button type='button' className='me-1' color='danger' onClick={() => handleRemoveTopup()}>\n                -\n              </Button>\n            </div>\n          </Col>\n          <Row className='mb-1' xl='12' md='12' sm='12'>\n\n            {\n              messageArr && messageArr.length > 0 && messageArr.map((el, index) => {\n                return (\n                  <Col key={index} className=\"mt-2\" xl='4' md='4' sm='4'>\n                    <Input type='text' id='basicInput' value={el?.message} onChange={(e) => handleSetMessge(e.target.value, index)} placeholder={`Message ${index + 1}`} />\n                  </Col>\n                )\n              })\n            }\n          </Row>\n\n          <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card >\n  )\n}\nexport default AddTopup\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Database, Edit, Edit2, Settings, Slack, Trash2, User } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Button } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteTopup } from '../store'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"10%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'Description',\n    sortable: false,\n    sortField: 'description',\n    width: \"25%\",\n    cell: row => row?.description\n  },\n  {\n    name: 'Role',\n    sortable: false,\n    sortField: 'role',\n    width: \"15%\",\n    cell: row => row?.role\n  },\n  {\n    name: 'Price',\n    sortable: false,\n    sortField: 'Price',\n    width: \"15%\",\n    cell: row => `₹ ${row?.price}`\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Link color='primary' to={`/topup/edit/${row._id}`} className='btn-sm  btn-primary'>\n          <Edit size={14} />\n        </Link>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteTopup(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTopup } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst TopupList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.topup)\n  const TopupArr = useSelector(state => state.topup.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(TopupArr)\n  }, [TopupArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getTopup({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getTopup({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handlegetTopups = () => {\n    dispatch(getTopup({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handlegetTopups()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getTopup({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/topup/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={TopupArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default TopupList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst TopupList = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default TopupList\n","// ** React Imports\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\n\n// ** Icons Imports\nimport { Database, Edit2, Settings, Slack, User } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\nimport { generateFilePath } from '../../../../services/url.service'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'Email',\n    sortable: true,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row.email\n  }\n  // {\n  //   name: 'Image',\n  //   sortable: true,\n  //   sortField: 'level',\n  //   width: \"25%\",\n  //   cell: row => <a href={generateFilePath(row.image)} target=\"_blank\"><img src={generateFilePath(row.image)} style={{ height: 50, width: 50 }} alt=\"\" srcset=\"\" /></a>\n  // },\n  // {\n  //   name: 'Status',\n  //   sortable: true,\n  //   sortField: 'status',\n  //   selector: row => row.status,\n  //   cell: row => (\n  //     <Badge className='text-capitalize' color={statusObj[row.status === true ? 'active' : 'inactive']} pill>\n  //       {row.status === true ? 'Active' : 'Inactive'}\n  //     </Badge>\n  //   )\n  // }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\n// import { getnewsLetters } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n// ** Utils\n// ** Reactstrap Imports\nimport {\n  Button,\n  Card,\n  Col,\n  Input,\n  Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { getnewsLetters } from '../store'\n\n// ** Table Header\n\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const newsLetter = useSelector(state => state.newsLetter)\n  // const brand = useSelector(state => state.brands.brand)\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('name')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n      const [startDate, setstartDate] = useState()\n      const [endDate, setEndDate] = useState()\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getnewsLetters({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage,\n      role: currentRole.value,\n      status: currentStatus.value\n    }))\n  }, [])\n  useEffect(() => {\n\n\n  }, [dispatch, sort, sortColumn, currentPage])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getnewsLetters({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n    dispatch(\n      getnewsLetters({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getnewsLetters({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(newsLetter.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      role: currentRole.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    console.log(newsLetter, \"newsLetterdsdds\")\n    if (newsLetter.newsLetter.length > 0) {\n      return newsLetter.newsLetter\n    } else if (!newsLetter || (newsLetter.newsLetter.length === 0 && isFiltered)) {\n      return []\n    } else {\n      return newsLetter?.newsLetter?.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getnewsLetters({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n  const handleFilterByDate = () => {\n       dispatch(\n         getnewsLetters({\n           sort,\n           sortColumn,\n           page: currentPage,\n           perPage: rowsPerPage,\n           startDate,\n           endDate\n         })\n       )\n\n  }\n\n  return (\n    <Fragment>\n      <Card className=\"overflow-hidden\">\n        <div className=\"invoice-list-table-header w-100 px-4 ms-50 mt-2\">\n          <Row>\n            <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\n              <div className=\"d-flex align-items-center w-100\">\n                <label htmlFor=\"rows-per-page\">Show</label>\n                <Input\n                  className=\"mx-50\"\n                  type=\"select\"\n                  id=\"rows-per-page\"\n                  value={rowsPerPage}\n                  onChange={handlePerPage}\n                  style={{ width: \"5rem\" }}\n                >\n                  <option value=\"1\">1</option>\n                  <option value=\"10\">10</option>\n                  <option value=\"25\">25</option>\n                  <option value=\"50\">50</option>\n                </Input>\n                <label htmlFor=\"rows-per-page\">Entries</label>\n              </div>\n              <div className=\"d-flex align-items-center\">\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                  Filter\n                </label>\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"date\"\n                  value={startDate}\n                  onChange={(e) => setstartDate(e.target.value)}\n                />\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"date\"\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                />\n              </div>\n              <Button color=\"primary\" onClick={() => handleFilterByDate()}>\n                Filter\n              </Button>\n            </Col>\n            <Col\n              xl=\"6\"\n              className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\n            >\n              <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n                <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                  Search:\n                </label>\n                <Input\n                  id=\"search-invoice\"\n                  className=\"ms-50 w-100\"\n                  type=\"text\"\n                  value={searchTerm}\n                  onChange={(e) => handleFilter(e.target.value)}\n                />\n              </div>\n\n              <div className=\"d-flex align-items-center table-header-actions\">\n                <Button\n                  className=\"add-new-user\"\n                  color=\"primary\"\n                  onClick={toggleSidebar}\n                >\n                  Add New\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"react-dataTable\">\n          <DataTable\n            noHeader\n            subHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={columns}\n            onSort={handleSort}\n            sortIcon={<ChevronDown />}\n            className=\"react-dataTable\"\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default UsersList","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\n\n// ** Custom Components\n\n// ** Icons Imports\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst NewsLetterList = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default NewsLetterList\n","// ** React Import\n\n// ** Custom Components\n\n// ** Utils\n\n// ** Third Party Components\n\n// ** Reactstrap Imports\nimport {\n    Modal,\n    ModalBody,\n    ModalHeader\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { useSelector } from 'react-redux'\nimport DataTable from 'react-data-table-component'\nimport moment from 'moment'\n\nconst AddModal = ({ open, toggleSidebar, selectedUser }) => {\n    // ** States\n    const store = useSelector(state => state.categories)\n    const handleSidebarClosed = () => {\n        // toggleSidebar()\n    }\n\n    const columns = [\n        {\n            name: 'S.no',\n            sortable: false,\n            sortField: 'index',\n            width: \"15.6%\",\n            cell: (row, index) => (index + 1)\n        },\n        {\n            name: 'Name',\n            sortable: false,\n            sortField: 'name',\n            width: \"55%\",\n            cell: row => row?.name\n        },\n        {\n            name: 'Joined On',\n            sortable: false,\n            sortField: 'e Date',\n            cell: row => `${moment(row?.createdAt).format(\"DD-MM-YYYY\")}`\n        }\n\n    ]\n    return (\n        <>\n            <Modal\n                isOpen={open}\n                onClosed={handleSidebarClosed}\n                toggle={toggleSidebar}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\n                <ModalBody className='px-3 pb-3'>\n                    <div className='text-center'>\n                        <h2>List of users</h2>\n                    </div>\n\n                    <DataTable\n                        noHeader\n                        pagination\n                        paginationServer\n                        columns={columns}\n                        className='react-dataTable'\n                        // paginationComponent={CustomPagination}\n                        data={selectedUser}\n                    />\n                </ModalBody>\n            </Modal>\n        </>\n        // <Sidebar\n        //   size='lg'\n        //   open={open}\n        //   title='New User'\n        //   headerClassName='mb-1'\n        //   contentClassName='pt-0'\n        //   toggleSidebar={toggleSidebar}\n        //   onClosed={handleSidebarClosed}\n        // >\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='fullName'>\n        //         Full Name <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='fullName'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='lastName'>\n        //         lastName <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='lastName'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='userEmail'>\n        //         Email <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='email'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input\n        //             type='email'\n        //             id='userEmail'\n        //             placeholder='john.doe@example.com'\n        //             invalid={errors.email && true}\n        //             {...field}\n        //           />\n        //         )}\n        //       />\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        //     </div>\n\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='phone'>\n        //         phone <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='phone'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='company'>\n        //         Company <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='company'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='country'>\n        //         Country <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='country'\n        //         control={control}\n        //         render={({ field }) => (\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n        //           <Select\n        //             isClearable={false}\n        //             classNamePrefix='select'\n        //             options={countryOptions}\n        //             theme={selectThemeColors}\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n        //             {...field}\n        //           />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='user-role'>\n        //         User Role\n        //       </Label>\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n        //         <option value='subscriber'>Subscriber</option>\n        //         <option value='editor'>Editor</option>\n        //         <option value='maintainer'>Maintainer</option>\n        //         <option value='author'>Author</option>\n        //         <option value='admin'>Admin</option>\n        //       </Input>\n        //     </div>\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n        //       <Label className='form-label' for='select-plan'>\n        //         Select Plan\n        //       </Label>\n        //       <Input type='select' id='select-plan' name='select-plan'>\n        //         <option value='basic'>Basic</option>\n        //         <option value='enterprise'>Enterprise</option>\n        //         <option value='company'>Company</option>\n        //         <option value='team'>Team</option>\n        //       </Input>\n        //     </div>\n        //     <Button type='submit' className='me-1' color='primary'>\n        //       Submit\n        //     </Button>\n        //     <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n        //       Cancel\n        //     </Button>\n        //   </Form>\n        // </Sidebar>\n    )\n}\n\nexport default AddModal\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getLeads } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n// ** Reactstrap Imports\n\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport moment from 'moment'\nimport AddModal from './AddModal'\n\nimport { User } from 'react-feather'\nimport {\n  Button, Card,\n  Col, Input,\n  Row\n} from 'reactstrap'\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Leads)\n  const FlashSalesArr = useSelector(state => state.Leads.data)\n  const allData = useSelector(state => state.products.allData)\n\n  const [startDate, setStartDate] = useState(new Date())\n  const [endDate, setEndDate] = useState(new Date())\n\n  const [dataArr, setDataArr] = useState([])\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  const [selectedUser, setSelectedUser] = useState({})\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n\n  useEffect(() => {\n    setDataArr(FlashSalesArr)\n  }, [FlashSalesArr])\n\n\n  useEffect(() => {\n\n    const tempDate = new Date()\n    tempDate.setMonth(tempDate.getMonth() - 1)\n    setStartDate(tempDate)\n\n  }, [])\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getLeads({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        startDate,\n        endDate,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getLeads({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      startDate,\n      endDate,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetFlashSales = () => {\n    dispatch(getLeads({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      startDate,\n      endDate,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetFlashSales()\n  }, [startDate, endDate])\n\n\n  useEffect(() => {\n    console.log(FlashSalesArr, \"FlashSalesArr\")\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getLeads({\n        sort,\n        sortColumn,\n        q: val,\n        startDate,\n        endDate,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n\n  const columns = [\n    {\n      name: 'S.no',\n      sortable: false,\n      sortField: 'index',\n      width: \"5.6%\",\n      cell: (row, index) => (index + 1)\n    },\n    {\n      name: 'Name',\n      sortable: false,\n      sortField: 'name',\n      width: \"15%\",\n      cell: row => row?.name\n    },\n    {\n      name: 'Sale count',\n      sortable: false,\n      sortField: 'name',\n      width: \"25%\",\n      cell: row => row?.salesCount\n    },\n    {\n      name: 'Role',\n      sortable: false,\n      sortField: 'e Date',\n      cell: row => row?.role\n    },\n    {\n      name: 'Joined On',\n      sortable: false,\n      sortField: 'e Date',\n      cell: row => `${moment(row?.createdAt).format(\"DD-MM-YYYY\")}`\n\n    },\n    {\n      name: 'View Users',\n      sortable: false,\n      sortField: 'aaaaa',\n      selector: row => <Button color='primary' onClick={(e) => { e.preventDefault(); setSelectedUser(row.salesArr); toggleSidebar() }} className='btn-sm ms-2 '\n\n      >\n        <User size={14} />\n      </Button>\n\n    }\n\n  ]\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='8' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center' style={{ margin: \"0px 35px 0px 0px\" }}>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n\n\n                <div className='d-flex align-items-center w-100'>\n                  <label>Start Date</label>\n                  <Input\n                    className='mx-50'\n                    type='date'\n                    value={moment(startDate).format(\"YYYY-MM-DD\")}\n                    onChange={(e) => setStartDate(e.target.value)}\n                    style={{ width: '15rem' }}\n                  />\n                </div>\n                <div className='d-flex align-items-center w-100'>\n                  <label>End Date</label>\n                  <Input\n                    className='mx-50'\n                    type='date'\n                    value={moment(endDate).format(\"YYYY-MM-DD\")}\n                    onChange={(e) => setEndDate(e.target.value)}\n                    style={{ width: '15rem' }}\n                  />\n                </div>\n              </Col>\n              <Col\n                xl='4'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            columns={columns}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={FlashSalesArr}\n          />\n        </div>\n      </Card>\n      <AddModal open={sidebarOpen} selectedUser={selectedUser} toggleSidebar={toggleSidebar} />\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst SalesReportList = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default SalesReportList\n","// ** React Import\nimport { useEffect, useState } from 'react'\n\n// ** Reactstrap Imports\nimport {\n    Button,\n    Form,\n    Label,\n    Modal,\n    ModalBody,\n    ModalHeader\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport FileUpload from '../../../utility/FileUpload'\nimport { addHomepageBanners, updateHomepageBanner } from '../store'\nimport { generateFilePath } from '../../../services/url.service'\n\nconst AddModal = ({ open, toggleSidebar }) => {\n    // ** States\n    const store = useSelector(state => state.homepageBanners)\n    const [isUpdated, setIsUpdated] = useState(false)\n    const [image, setimage] = useState()\n    // ** Store Vars\n    const dispatch = useDispatch()\n\n\n    // ** Function to handle form submit\n    const onSubmit = () => {\n        toggleSidebar()\n        if (isUpdated === true) {\n            dispatch(\n                updateHomepageBanner({\n                    image,\n                    id: store?.selectedObj?._id\n                })\n            )\n        } else {\n            dispatch(\n                addHomepageBanners({\n                    image\n                })\n            )\n        }\n\n    }\n\n    const handleSidebarClosed = () => {\n    }\n\n\n    useEffect(() => {\n        if (store.selectedObj !== null && store.selectedObj?.image) {\n            const category = store.selectedObj\n            setimage(category?.image)\n            setIsUpdated(true)\n        } else {\n            setimage(\"\")\n            setIsUpdated(false)\n        }\n    }, [store.selectedObj])\n\n\n    return (\n        <>\n            <Modal\n                isOpen={open}\n                onClosed={handleSidebarClosed}\n                toggle={toggleSidebar}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\n                <ModalBody className='px-3 pb-3'>\n                    <div className='text-center'>\n                        <h2>{isUpdated ? \"Update\" : \"Add\"}  Homepage Banner</h2>\n                    </div>\n                    <Form className=\"row\">\n\n                        <div className='mb-1 col-md-6'>\n                            <Label className='form-label'>\n                                Image (width:1920px and height:460px)\n                            </Label>\n                            <div>\n                                {\n                                    image && image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} />\n                                }\n                            </div>\n                            <FileUpload onFileChange={(val) => setimage(val)} />\n                        </div>\n                        <div className='mb-1 col-md-12'>\n                            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\n                                Submit\n                            </Button>\n                        </div>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </>\n    )\n}\n\nexport default AddModal\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteHomepageBanners, getHomepageBanners, getHomepageBannerssById } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n// ** Reactstrap Imports\nimport {\n  Button,\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport AddModal from './AddModal'\nimport { generateFilePath } from '../../../services/url.service'\nimport { Eye, Trash } from 'react-feather'\n\n\nconst TicketList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.homepageBanners)\n  const FlashSalesArr = useSelector(state => state.homepageBanners.data)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  useEffect(() => {\n    setDataArr(FlashSalesArr)\n  }, [FlashSalesArr])\n\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getHomepageBanners({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getHomepageBanners({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handleGetFlashSales = () => {\n    dispatch(getHomepageBanners({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handleGetFlashSales()\n  }, [])\n\n\n  useEffect(() => {\n    console.log(FlashSalesArr, \"FlashSalesArr\")\n  }, [FlashSalesArr])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getHomepageBanners({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n\n  const handleDeleteHomePageBanners = (e, row) => {\n\n    e.preventDefault()\n    if (confirm(\"Are you sure you want to delete this banner ?\")) {\n      dispatch(deleteHomepageBanners(row._id))\n    }\n  }\n\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n    console.log(count, \"count\", store.total, rowsPerPage, \"rowsPerPage\")\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const columns = [\n    {\n      name: 'S.no',\n      sortable: false,\n      sortField: 'index',\n      width: \"5.6%\",\n      cell: (row, index) => (index + 1)\n    },\n    {\n      name: 'Image',\n      sortable: false,\n      sortField: 'image',\n      selector: row => <img src={generateFilePath(row?.image)} style={{ height: 50, width: 50 }} />\n    },\n    {\n      name: 'Actions',\n      cell: row => (\n        <>\n\n          <Button color='primary' onClick={(e) => { e.preventDefault(); dispatch(getHomepageBannerssById(row._id)); toggleSidebar() }} className='btn-sm  btn-primary'>\n            <Eye size={14} />\n          </Button>\n          <Button color='danger' onClick={(e) => { handleDeleteHomePageBanners(e, row) }} className='btn-sm  ms-3 btn-primary'>\n            <Trash size={14} />\n          </Button>\n\n        </>\n\n      )\n    }\n  ]\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\n                    Add New\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            pagination\n            paginationServer\n            columns={columns}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={[...FlashSalesArr]}\n          />\n        </div>\n      </Card>\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </Fragment>\n  )\n}\n\nexport default TicketList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\n\n// ** Custom Components\n\n// ** Icons Imports\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst HomepageBanners = () => {\n  return (\n    <div className='app-user-list'>\n      <Table />\n    </div>\n  )\n}\n\nexport default HomepageBanners\n","import axios from \"axios\"\nimport axiosInstance from \"./axios.service\"\n\nimport BaseUrl from './url.service'\n\nconst serverUrl = `${BaseUrl}/websiteData`\n\nexport const AddWebsiteData = async (obj) => {\n    return axiosInstance.post(`${serverUrl}/`, obj)\n}\n\nexport const getWebsiteData = async () => {\n    return axiosInstance.get(`${serverUrl}/`)\n}\n","\n// ** React Import\n\n// ** Custom Components\n\n// ** Utils\n\n// ** Third Party Components\n\n// ** Reactstrap Imports\nimport {\n  Button,\n  Card,\n  Form, Input,\n  Label\n} from 'reactstrap'\n\n// ** Store & Actions\nimport FileUpload from '../../../utility/FileUpload'\nimport { useEffect, useState } from 'react'\nimport { toastError } from '../../../utility/toastutill'\nimport { AddWebsiteData, getWebsiteData } from '../../../services/WebsiteData.service'\nimport { generateFilePath } from '../../../services/url.service'\n\nconst WebsiteData = () => {\n  // ** States\n\n  // ** Store Vars\n  const [image, setImage] = useState(\"\")\n  const [previousImage, setPreviousImage] = useState(\"\")\n\n\n  const handleGetWebsiteData = async () => {\n    try {\n      const { data: res } = await getWebsiteData()\n      console.log(res)\n      if (res.data && res.data.shopImage) {\n        setPreviousImage(res.data.shopImage)\n      }\n\n    } catch (error) {\n      toastError(error)\n    }\n  }\n\n\n  const handleAddWebsiteData = async () => {\n    try {\n      const obj = {}\n      if (!(image && image !== \"\")) {\n        toastError(\"Please upload an image !!!\")\n        return\n      }\n\n      obj.image = image\n      const { data: res } = await AddWebsiteData(obj)\n      console.log(res)\n      if (res.message) {\n        handleGetWebsiteData()\n      }\n\n    } catch (error) {\n      toastError(error)\n    }\n  }\n  useEffect(() => {\n    handleGetWebsiteData()\n\n  }, [])\n\n  return (\n    <>\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n\n            <div className='text-center'>\n              <h2>Add Website data</h2>\n            </div>\n\n            <div className=\"row\">\n\n              <div className='mb-1 col-md-6'>\n                <Label className='form-label'>\n                  Image (width:1920 height: 735px and aspect ratio:128:49)\n                </Label>\n                <div>\n                  Image on server\n                </div>\n                <div>\n\n                  <img src={generateFilePath(previousImage)} style={{ height: 100, width: 100 }} />\n                </div>\n                <div>\n                  Your uploaded Image\n                </div>\n                <div>\n\n                  <img src={image} style={{ height: 100, width: 100 }} />\n                </div>\n\n                <FileUpload onFileChange={(val) => setImage(val)} />\n              </div>\n\n\n              <div className='mb-1 col-md-12'>\n                <Button type='button' className='me-1' color='primary' onClick={() => { handleAddWebsiteData() }} >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </Card>\n    </>\n  )\n}\n\nexport default WebsiteData\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\n// import { getProduct, deleteProduct } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button, Input } from 'reactstrap'\nimport { updateProductApi } from '../../../services/product.service'\nimport { toastError, toastSuccess } from '../../../utility/toastutill'\nimport { deleteSeo } from '../store'\nimport { generateFilePath } from '../../../services/url.service'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\nconst handleStatus = async (id, status) => {\n  try {\n\n    status = status === \"PENDING\" ? \"APPROVED\" : \"PENDING\"\n    const obj = {\n      approved: status\n    }\n    const { data: res } = await updateProductApi(obj, id)\n    if (res.message) {\n      toastSuccess(res.message)\n    }\n  } catch (error) {\n    toastError(error)\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'S.no',\n    sortable: false,\n    sortField: 'index',\n    width: \"10%\",\n    cell: (row, index) => (index + 1)\n  },\n  {\n    name: 'Name',\n    sortable: false,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row?.name\n  },\n  {\n    name: 'URL',\n    sortable: false,\n    sortField: 'imagurl',\n    width: \"25%\",\n    cell: row => row.url\n  },\n  // {\n  //   name: 'Description',\n  //   sortable: false,\n  //   sortField: 'description',\n  //   width: \"25%\",\n  //   cell: row => row?.description\n  // },\n  // {\n  //   name: 'Duration in days',\n  //   sortable: false,\n  //   sortField: 'durationInDays',\n  //   width: \"15%\",\n  //   cell: row => `${row?.durationInDays} days`\n  // },\n  {\n    name: 'Created On',\n    sortable: false,\n    sortField: 'created On',\n    width: \"15%\",\n    cell: row => new Date(row.createdAt).toDateString()\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n        <Link color='primary' to={`/seo/edit/${row._id}`} className='btn-sm  btn-primary'>\n          <Edit size={14} />\n        </Link>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteSeo(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getProduct(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteProduct(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSeo } from '../store'\n\n// ** Third Party Components\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\nimport ReactPaginate from 'react-paginate'\n\n// ** Utils\n\n// ** Reactstrap Imports\nimport {\n  Card, Col, Input, Row\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { Link } from 'react-router-dom'\n\n\nconst SubscriptionList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.Seo)\n  const subscriptionArr = useSelector(state => state.Seo.data)\n  // const allData = useSelector(state => state.products.allData)\n\n  const [dataArr, setDataArr] = useState([])\n\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  useEffect(() => {\n    setDataArr(subscriptionArr)\n  }, [subscriptionArr])\n\n\n  // ** Function in get data on rows per page\n\n\n  const handlePagination = page => {\n    dispatch(\n      getSeo({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n\n    dispatch(getSeo({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: value,\n      page: 1\n    }))\n    setRowsPerPage(value)\n  }\n\n  const handlegetBlogss = () => {\n    dispatch(getSeo({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage\n    }))\n  }\n\n\n  useEffect(() => {\n    handlegetBlogss()\n  }, [])\n\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getSeo({\n        sort,\n        sortColumn,\n        q: val,\n        perPage: rowsPerPage,\n        page: currentPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store?.total / rowsPerPage))\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n  useEffect(() => {\n    console.log(subscriptionArr)\n  }, [subscriptionArr])\n\n  return (\n    <Fragment>\n\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 px-4 mb-2'>\n            <Row>\n              <Col xl='6' className='d-flex align-items-center p-0'>\n                <div className='d-flex align-items-center w-100'>\n                  <label htmlFor='rows-per-page'>Show</label>\n                  <Input\n                    className='mx-50'\n                    type='select'\n                    id='rows-per-page'\n                    value={rowsPerPage}\n                    onChange={handlePerPage}\n                    style={{ width: '5rem' }}\n                  >\n                    <option value='1'>1</option>\n                    <option value='10'>10</option>\n                    <option value='25'>25</option>\n                    <option value='50'>50</option>\n                    <option value='100'>100</option>\n                    <option value='500'>500</option>\n                  </Input>\n                  <label htmlFor='rows-per-page'>Entries</label>\n                </div>\n              </Col>\n              <Col\n                xl='6'\n                className='d-flex justify-content-end pe-3'\n              >\n                <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                  <label className='mb-0' htmlFor='search-invoice'>\n                    Search:\n                  </label>\n                  <Input\n                    id='search-invoice'\n                    className='ms-50 w-100'\n                    type='text'\n                    value={searchTerm}\n                    onChange={e => handleFilter(e.target.value)}\n                  />\n                </div>\n\n                <div className='d-flex align-items-center table-header-actions'>\n                  <Link to=\"/seo/Add\" className='add-new-user btn btn-primary' color='primary'>\n                    Add New\n                  </Link>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <DataTable\n            noHeader\n            // subHeader\n            // sortServer\n            // responsive\n            pagination\n            paginationServer\n            columns={columns}\n            // onSort={handleSort}\n            // sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={subscriptionArr}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     store={dataArr}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handlePerPage={handlePerPage}\n          //     handleFilter={handleFilter}\n          //   // toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n    </Fragment>\n  )\n}\n\nexport default SubscriptionList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst Seo = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default Seo\n","// ** Reactstrap Imports\nimport _ from 'lodash'\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label } from 'reactstrap'\nimport { addSeoApi } from '../../../services/Seo.service'\nimport { generateFilePath } from '../../../services/url.service'\nimport FileUpload from '../../../utility/FileUpload'\nimport { toastError } from '../../../utility/toastutill'\nimport { addSeo, getSeoById, updateSeo } from '../store'\nconst AddSeo = () => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const blogObj = useSelector(state => state.Seo.selectedSeo)\n  const [isEditing, setIsEditing] = useState(false)\n  const [name, setname] = useState(\"\")\n  const [title, setTitle] = useState(\"\")\n  const [image, setImage] = useState(\"\")\n  const [url, setUrl] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [keywords, setKeywords] = useState(\"\")\n  const [messageArr, setMessageArr] = useState([{ message: \"\" }])\n\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n\n    if (`${url}` === '') {\n      toastError('Please Fill Url')\n      return 0\n    }\n\n    if (isEditing === true) {\n      dispatch(\n        updateSeo({\n          name,\n          title,\n          image,\n          description,\n          keywords,\n          url,\n          id\n        })\n      )\n    } else {\n      dispatch(\n        addSeo({\n          name,\n          url,\n          title,\n          image,\n          description,\n          keywords\n        })\n      )\n    }\n  }\n  useEffect(() => {\n    if (blogObj && blogObj.name && isEditing) {\n      setname(blogObj?.name ? blogObj?.name : \"\")\n      setUrl(blogObj?.url ? blogObj?.url : \"\")\n      setTitle(blogObj?.title ? blogObj?.title : \"\")\n      setKeywords(blogObj?.keywords ? blogObj?.keywords : \"\")\n      setDescription(blogObj?.description ? blogObj?.description : \"\")\n      setImage(blogObj?.image ? blogObj?.image : \"\")\n    } else {\n      setname(\"\")\n      setUrl([])\n    }\n\n  }, [blogObj, isEditing])\n\n\n  const handlegetBlogsById = () => {\n    dispatch(getSeoById(id))\n  }\n\n  useEffect(() => {\n    // console.log(id ? \"true\" : \"false\")\n    if (id) {\n      handlegetBlogsById()\n      setIsEditing(true)\n    }\n\n  }, [id])\n\n\n  const handleaddBlogs = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    tempArr.push({ message: \"\" })\n    setMessageArr([...tempArr])\n  }\n\n\n  const handleRemoveSubscription = () => {\n    let tempArr = messageArr\n    tempArr = [...tempArr]\n    if (tempArr.length > 1) {\n      tempArr.pop()\n      setMessageArr([...tempArr])\n    }\n  }\n\n  const handleSetMessge = (value, index) => {\n    const tempArr = _.cloneDeep(messageArr)\n    // setMessageArr(messageArr.map((ele, indexX) => {\n    //   if (indexX === index) {\n    //     ele.message = value\n    //   }\n    //   return ele\n    // }))\n    tempArr[index].message = value\n    setMessageArr([...tempArr])\n\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/seo/view\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>{isEditing ? \"Edit\" : \"Add\"} Blog Seo</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        {/* <Row> */}\n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Name\n          </Label>\n          <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Name' />\n        </Col>\n        \n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Seo Url\n          </Label>\n          <Input type='text' id='basicInput' value={url} onChange={(e) => setUrl(e.target.value)} placeholder='Enter Page Url' />\n        </Col>\n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Title\n          </Label>\n          <Input type='text' id='basicInput' value={title} onChange={(e) => setTitle(e.target.value)} placeholder='Enter Page Title' />\n        </Col>\n\n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Description\n          </Label>\n          <Input type='textarea' id='basicInput' value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Enter Page Description' />\n        </Col>\n\n\n        <Col className='mb-1' xl='6' md='6' sm='12'>\n          <Label className='form-label' for='basicInput'>\n            Keywords\n          </Label>\n          <Input type='text' id='basicInput' value={keywords} onChange={(e) => setKeywords(e.target.value)} placeholder='Enter Page Keywords' />\n        </Col>\n        \n        <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Image (width:522px and height:280px)\n            </Label>\n            <div>\n              {\n                image.includes(\"base64\") ? <img src={image} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" /> : <img src={generateFilePath(image)} style={{ height: 100, width: 100 }} alt=\"\" srcset=\"\" />\n              }\n            </div>\n            <FileUpload onFileChange={setImage} />\n          </Col>\n        <Col className='mb-1 mt-4' xl='12' md='12' sm='12'>\n          <Button type='button' className='me-1' color='primary' onClick={() => onSubmit()}>\n            Submit\n          </Button>\n        </Col>\n        {/* </Row> */}\n      </CardBody>\n    </Card >\n  )\n}\nexport default AddSeo\n","// ** React Imports\nimport { lazy } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport UsersWithSubscription from '../../views/apps/UsersWithSubscription/list'\nimport UserWithSubscriptionDetail from '../../views/apps/UsersWithSubscription/list/UserWithSubscriptionDetail'\nimport AddSubscription from '../../views/Subscriptions/list/AddSubscription'\nimport SubscriptionList from '../../views/Subscriptions/list/Table'\nimport FlashSalesList from '../../views/Reports/FlashSales/list/Table'\nimport FlashSalesDetails from '../../views/Reports/FlashSales/list/FlashSalesDetails'\nimport AdverisementSubscriptionList from '../../views/AdvertisementSubsctiptions/list/Table'\nimport AddAdvertisementSubscription from '../../views/AdvertisementSubsctiptions/list/AddAdvertisementSubscription'\nimport Tickets from '../../views/UserTickets/list'\nimport UserTicketDetails from '../../views/UserTickets/list/UserTicketDetails'\nimport PromotionList from '../../views/Reports/Advertisements/list'\nimport PromotionDetails from '../../views/Reports/Advertisements/list/PromotionDetails'\nimport AllSubscriptionList from '../../views/Reports/SubscriptionsReport/list'\nimport AllSubscribedUsers from '../../views/Reports/SubscriptionsReport/list/AllSubscribedUsers'\nimport LeadsList from '../../views/Reports/Leads/list'\nimport UserRequirements from '../../views/apps/UserRequirements/list'\nimport Blogs from '../../views/Blogs/list'\nimport Addblog from '../../views/Blogs/list/AddBlog'\nimport BlogVideo from '../../views/BlogVideo/list'\nimport AddblogVideo from '../../views/BlogVideo/list/AddVideoBlog'\nimport AddTopup from '../../views/Topup/list/AddTopup'\nimport TopupList from '../../views/Topup/list'\nimport NewsLetterList from '../../views/products/newsLetter/list'\nimport SalesReportList from '../../views/Reports/SalesUsers/list'\nimport HomepageBanners from '../../views/homepageBanners/list'\nimport WebsiteData from '../../views/WebsiteData/list'\nimport Seo from '../../views/seo/list'\nimport AddSeo from '../../views/seo/list/AddSeo'\n\nconst Chat = lazy(() => import('../../views/apps/chat'))\nconst Todo = lazy(() => import('../../views/apps/todo'))\nconst Email = lazy(() => import('../../views/apps/email'))\nconst Kanban = lazy(() => import('../../views/apps/kanban'))\nconst Calendar = lazy(() => import('../../views/apps/calendar'))\n\nconst InvoiceAdd = lazy(() => import('../../views/apps/invoice/add'))\nconst InvoiceList = lazy(() => import('../../views/apps/invoice/list'))\nconst InvoiceEdit = lazy(() => import('../../views/apps/invoice/edit'))\nconst InvoicePrint = lazy(() => import('../../views/apps/invoice/print'))\nconst InvoicePreview = lazy(() => import('../../views/apps/invoice/preview'))\n\nconst EcommerceShop = lazy(() => import('../../views/apps/ecommerce/shop'))\nconst EcommerceDetail = lazy(() => import('../../views/apps/ecommerce/detail'))\nconst EcommerceWishlist = lazy(() => import('../../views/apps/ecommerce/wishlist'))\nconst EcommerceCheckout = lazy(() => import('../../views/apps/ecommerce/checkout'))\n\nconst UserList = lazy(() => import('../../views/apps/user/list'))\nconst UserView = lazy(() => import('../../views/apps/user/view'))\n\nconst Roles = lazy(() => import('../../views/apps/roles-permissions/roles'))\nconst Permissions = lazy(() => import('../../views/apps/roles-permissions/permissions'))\n\nconst AppRoutes = [\n  {\n    element: <Email />,\n    path: '/apps/email',\n    meta: {\n      appLayout: true,\n      className: 'email-application'\n    }\n  },\n  {\n    element: <Email />,\n    path: '/apps/email/:folder',\n    meta: {\n      appLayout: true,\n      className: 'email-application'\n    }\n  },\n  {\n    element: <Email />,\n    path: '/apps/email/label/:label',\n    meta: {\n      appLayout: true,\n      className: 'email-application'\n    }\n  },\n  {\n    element: <Email />,\n    path: '/apps/email/:filter'\n  },\n  {\n    path: '/apps/chat',\n    element: <Chat />,\n    meta: {\n      appLayout: true,\n      className: 'chat-application'\n    }\n  },\n  {\n    element: <Todo />,\n    path: '/apps/todo',\n    meta: {\n      appLayout: true,\n      className: 'todo-application'\n    }\n  },\n  {\n    element: <Todo />,\n    path: '/apps/todo/:filter',\n    meta: {\n      appLayout: true,\n      className: 'todo-application'\n    }\n  },\n  {\n    element: <Todo />,\n    path: '/apps/todo/tag/:tag',\n    meta: {\n      appLayout: true,\n      className: 'todo-application'\n    }\n  },\n  {\n    element: <Calendar />,\n    path: '/apps/calendar'\n  },\n  {\n    element: <Kanban />,\n    path: '/apps/kanban',\n    meta: {\n      appLayout: true,\n      className: 'kanban-application'\n    }\n  },\n  {\n    element: <InvoiceList />,\n    path: '/apps/invoice/list'\n  },\n  {\n    element: <InvoicePreview />,\n    path: '/apps/invoice/preview/:id'\n  },\n  {\n    path: '/apps/invoice/preview',\n    element: <Navigate to='/apps/invoice/preview/4987' />\n  },\n  {\n    element: <InvoiceEdit />,\n    path: '/apps/invoice/edit/:id'\n  },\n  {\n    path: '/apps/invoice/edit',\n    element: <Navigate to='/apps/invoice/edit/4987' />\n  },\n  {\n    element: <InvoiceAdd />,\n    path: '/apps/invoice/add'\n  },\n  {\n    path: '/apps/invoice/print',\n    element: <InvoicePrint />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    element: <EcommerceShop />,\n    path: '/apps/ecommerce/shop',\n    meta: {\n      className: 'ecommerce-application'\n    }\n  },\n  {\n    element: <EcommerceWishlist />,\n    path: '/apps/ecommerce/wishlist',\n    meta: {\n      className: 'ecommerce-application'\n    }\n  },\n  {\n    path: '/apps/ecommerce/product-detail',\n    element: <Navigate to='/apps/ecommerce/product-detail/apple-i-phone-11-64-gb-black-26' />,\n    meta: {\n      className: 'ecommerce-application'\n    }\n  },\n  {\n    path: '/apps/ecommerce/product-detail/:product',\n    element: <EcommerceDetail />,\n    meta: {\n      className: 'ecommerce-application'\n    }\n  },\n  {\n    path: '/apps/ecommerce/checkout',\n    element: <EcommerceCheckout />,\n    meta: {\n      className: 'ecommerce-application'\n    }\n  },\n  {\n    element: <UserList />,\n    path: '/apps/user/list',\n    roleArr: [\"ADMIN\", \"APPROVERS\"]\n  },\n  {\n    element: <UsersWithSubscription />,\n    path: '/apps/user/Users-With-Subscription',\n    roleArr: [\"ADMIN\"]\n  },\n  {\n    element: <UserWithSubscriptionDetail />,\n    path: '/apps/user/View-Subscription-for-user/:id',\n    roleArr: [\"ADMIN\"]\n  },\n  {\n    path: '/apps/user/view',\n    element: <Navigate to='/apps/user/view/1' />\n  },\n  {\n    element: <UserView />,\n    path: '/apps/user/view/:id'\n  },\n  {\n    element: <Roles />,\n    path: '/apps/roles'\n  },\n  {\n    element: <Permissions />,\n    path: '/apps/permissions'\n  },\n  {\n    element: <SubscriptionList />,\n    path: '/subscription/view'\n  },\n  {\n    element: <AddSubscription />,\n    path: '/subscription/Add'\n  },\n  {\n    element: <AddSubscription />,\n    path: '/subscription/Edit/:id'\n  },\n  {\n    element: <TopupList />,\n    path: '/topup/view'\n  },\n  {\n    element: <AddTopup />,\n    path: '/topup/Add'\n  },\n  {\n    element: <AddTopup />,\n    path: '/topup/Edit/:id'\n  },\n  {\n    element: <AddSubscription />,\n    path: '/subscription/Add'\n  },\n  {\n    element: <AdverisementSubscriptionList />,\n    path: '/subscription/advertisement/view'\n  },\n  {\n    element: <AddAdvertisementSubscription />,\n    path: '/subscription/advertisement/add'\n  },\n  {\n    element: <AddAdvertisementSubscription />,\n    path: '/subscription/advertisement/Edit/:id'\n  },\n  {\n    element: <FlashSalesList />,\n    path: '/flash-sales/view'\n  },\n  {\n    element: <PromotionList />,\n    path: '/Promotions/view'\n  },\n  {\n    element: <FlashSalesDetails />,\n    path: '/flash-sales/view-details/:id'\n  },\n  {\n    element: <PromotionDetails />,\n    path: '/Promotions/view-details/:id'\n  },\n  {\n    element: <Tickets />,\n    path: '/Tickets'\n  },\n  {\n    element: <NewsLetterList />,\n    path: '/news-letters'\n  },\n  {\n    element: <UserTicketDetails />,\n    path: '/User-Tickets/View/:id'\n  },\n  {\n    element: <AllSubscriptionList />,\n    path: '/Subscription/view-user-count'\n  },\n  {\n    element: <AllSubscribedUsers />,\n    path: '/Subscription/view-users/:id'\n  },\n  {\n    element: <LeadsList />,\n    path: '/Leads/view'\n  },\n  {\n    element: <SalesReportList />,\n    path: '/sales/report'\n  },\n  {\n    element: <UserRequirements />,\n    path: '/user-requirements'\n  },\n  {\n    element: <Blogs />,\n    path: '/blogs/view'\n  },\n  {\n    element: <Addblog />,\n    path: '/Blogs/Add'\n  },\n  {\n    element: <Addblog />,\n    path: '/Blogs/edit/:id'\n  },\n  {\n    element: <BlogVideo />,\n    path: '/blogs-video/view'\n  },\n  {\n    element: <AddblogVideo />,\n    path: '/Blogs-video/Add'\n  },\n  {\n    element: <AddblogVideo />,\n    path: '/Blogs-video/edit/:id'\n  },\n  {\n    element: <Seo />,\n    path: '/seo/view'\n  },\n  {\n    element: <AddSeo />,\n    path: '/seo/Add'\n  },\n  {\n    element: <AddSeo />,\n    path: '/seo/edit/:id'\n  },\n  {\n    element: <WebsiteData />,\n    path: '/apps/ShopImage',\n    roleArr: [\"ADMIN\"]\n  },\n  {\n    element: <HomepageBanners />,\n    path: '/apps/homepageBanners',\n    roleArr: [\"ADMIN\"]\n  }\n]\n\nexport default AppRoutes\n","import { lazy } from 'react'\n\nconst Wizard = lazy(() => import('../../views/forms/wizard'))\nconst Validation = lazy(() => import('../../views/forms/validation'))\nconst FormLayouts = lazy(() => import('../../views/forms/form-layouts'))\nconst Radio = lazy(() => import('../../views/forms/form-elements/radio'))\nconst Input = lazy(() => import('../../views/forms/form-elements/input'))\nconst FormRepeater = lazy(() => import('../../views/forms/form-repeater'))\nconst Switch = lazy(() => import('../../views/forms/form-elements/switch'))\nconst Editor = lazy(() => import('../../views/forms/form-elements/editor'))\nconst Select = lazy(() => import('../../views/forms/form-elements/select'))\nconst Textarea = lazy(() => import('../../views/forms/form-elements/textarea'))\nconst InputMask = lazy(() => import('../../views/forms/form-elements/input-mask'))\nconst Checkboxes = lazy(() => import('../../views/forms/form-elements/checkboxes'))\nconst Datepickers = lazy(() => import('../../views/forms/form-elements/datepicker'))\nconst InputGroups = lazy(() => import('../../views/forms/form-elements/input-groups'))\nconst NumberInput = lazy(() => import('../../views/forms/form-elements/number-input'))\nconst FileUploader = lazy(() => import('../../views/forms/form-elements/file-uploader'))\n\nconst FormRoutes = [\n  {\n    element: <Input />,\n    path: '/forms/elements/input'\n  },\n  {\n    element: <InputGroups />,\n    path: '/forms/elements/input-group'\n  },\n  {\n    element: <InputMask />,\n    path: '/forms/elements/input-mask'\n  },\n  {\n    element: <Textarea />,\n    path: '/forms/elements/textarea'\n  },\n  {\n    element: <Checkboxes />,\n    path: '/forms/elements/checkbox'\n  },\n  {\n    element: <Radio />,\n    path: '/forms/elements/radio'\n  },\n  {\n    element: <Switch />,\n    path: '/forms/elements/switch'\n  },\n  {\n    element: <Select />,\n    path: '/forms/elements/select'\n  },\n  {\n    element: <NumberInput />,\n    path: '/forms/elements/number-input'\n  },\n  {\n    element: <FileUploader />,\n    path: '/forms/elements/file-uploader'\n  },\n  {\n    element: <Editor />,\n    path: '/forms/elements/editor'\n  },\n  {\n    element: <Datepickers />,\n    path: '/forms/elements/pickers'\n  },\n  {\n    element: <FormLayouts />,\n    path: '/forms/layout/form-layout'\n  },\n  {\n    element: <Wizard />,\n    path: '/forms/wizard'\n  },\n  {\n    element: <Validation />,\n    path: '/forms/form-validation'\n  },\n  {\n    element: <FormRepeater />,\n    path: '/forms/form-repeater'\n  }\n]\n\nexport default FormRoutes\n","import { lazy } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nconst Faq = lazy(() => import('../../views/pages/faq'))\nconst ApiKey = lazy(() => import('../../views/pages/api-key'))\nconst Profile = lazy(() => import('../../views/pages/profile'))\nconst Pricing = lazy(() => import('../../views/pages/pricing'))\nconst License = lazy(() => import('../../views/pages/license'))\nconst Error = lazy(() => import('../../views/pages/misc/Error'))\nconst BlogList = lazy(() => import('../../views/pages/blog/list'))\nconst BlogEdit = lazy(() => import('../../views/pages/blog/edit'))\nconst BlogDetails = lazy(() => import('../../views/pages/blog/details'))\nconst ComingSoon = lazy(() => import('../../views/pages/misc/ComingSoon'))\nconst ModalExamples = lazy(() => import('../../views/pages/modal-examples'))\nconst Maintenance = lazy(() => import('../../views/pages/misc/Maintenance'))\nconst AccountSettings = lazy(() => import('../../views/pages/account-settings'))\nconst NotAuthorized = lazy(() => import('../../views/pages/misc/NotAuthorized'))\nconst KnowledgeBase = lazy(() => import('../../views/pages/knowledge-base/KnowledgeBase'))\nconst KnowledgeBaseCategory = lazy(() => import('../../views/pages/knowledge-base/KnowledgeBaseCategory'))\nconst KBCategoryQuestion = lazy(() => import('../../views/pages/knowledge-base/KnowledgeBaseCategoryQuestion'))\n\nconst PagesRoutes = [\n  {\n    path: '/pages/profile',\n    element: <Profile />\n  },\n  {\n    path: '/pages/faq',\n    element: <Faq />\n  },\n  {\n    path: '/pages/knowledge-base',\n    element: <KnowledgeBase />\n  },\n  {\n    path: '/pages/knowledge-base/:category',\n    element: <KnowledgeBaseCategory />\n  },\n  {\n    path: '/pages/knowledge-base/:category/:question',\n    element: <KBCategoryQuestion />\n  },\n  {\n    path: '/pages/account-settings',\n    element: <AccountSettings />\n  },\n  {\n    path: '/pages/license',\n    element: <License />\n  },\n  {\n    path: '/pages/api-key',\n    element: <ApiKey />\n  },\n  {\n    path: '/pages/modal-examples',\n    element: <ModalExamples />\n  },\n  {\n    path: '/pages/blog/list',\n    element: <BlogList />\n  },\n  {\n    path: '/pages/blog/detail/:id',\n    element: <BlogDetails />\n  },\n  {\n    path: '/pages/blog/detail',\n    element: <Navigate to='/pages/blog/detail/1' />\n  },\n  {\n    path: '/pages/blog/edit/:id',\n    element: <BlogEdit />\n  },\n  {\n    path: '/pages/blog/edit',\n    element: <Navigate to='/pages/blog/edit/1' />\n  },\n  {\n    path: '/pages/pricing',\n    element: <Pricing />\n  },\n  {\n    path: '/misc/coming-soon',\n    element: <ComingSoon />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/misc/not-authorized',\n    element: <NotAuthorized />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/misc/maintenance',\n    element: <Maintenance />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/misc/error',\n    element: <Error />,\n    meta: {\n      publicRoute: true,\n      layout: 'blank'\n    }\n  }\n]\n\nexport default PagesRoutes\n","import { lazy } from 'react'\n\nconst Reactstrap = lazy(() => import('../../views/tables/reactstrap'))\nconst DTBasic = lazy(() => import('../../views/tables/data-tables/basic'))\nconst DTAdvance = lazy(() => import('../../views/tables/data-tables/advance'))\n\nconst TablesRoutes = [\n  {\n    path: '/tables/reactstrap',\n    element: <Reactstrap />\n  },\n  {\n    path: '/datatables/basic',\n    element: <DTBasic />\n  },\n  {\n    path: '/datatables/advance',\n    element: <DTAdvance />\n  }\n]\n\nexport default TablesRoutes\n","import { lazy } from 'react'\n\nconst ApexCharts = lazy(() => import('../../views/charts/apex'))\nconst ChartJS = lazy(() => import('../../views/charts/chart-js'))\nconst Recharts = lazy(() => import('../../views/charts/recharts'))\n\nconst ChartMapsRoutes = [\n  {\n    path: '/charts/apex',\n    element: <ApexCharts />\n  },\n  {\n    path: '/charts/chartjs',\n    element: <ChartJS />\n  },\n  {\n    path: '/charts/recharts',\n    element: <Recharts />\n  }\n]\n\nexport default ChartMapsRoutes\n","import { lazy } from 'react'\n\nconst DashboardAnalytics = lazy(() => import('../../views/dashboard/analytics'))\nconst DashboardEcommerce = lazy(() => import('../../views/dashboard/ecommerce'))\n\nconst DashboardRoutes = [\n  // {\n  //   path: '/dashboard/analytics',\n  //   element: <DashboardAnalytics />\n  // },\n  {\n    path: '/dashboard',\n    element: <DashboardEcommerce />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  }\n]\n\nexport default DashboardRoutes\n","import { lazy } from 'react'\n\nconst Typography = lazy(() => import('../../views/ui-elements/typography'))\nconst Icons = lazy(() => import('../../views/ui-elements/icons'))\nconst CardsBasic = lazy(() => import('../../views/ui-elements/cards/basic'))\nconst CardsAdvance = lazy(() => import('../../views/ui-elements/cards/advance'))\nconst CardsStatistics = lazy(() => import('../../views/ui-elements/cards/statistics'))\nconst CardsAnalytics = lazy(() => import('../../views/ui-elements/cards/analytics'))\nconst CardsActions = lazy(() => import('../../views/ui-elements/cards/actions'))\nconst Accordion = lazy(() => import('../../views/components/accordion'))\nconst Alerts = lazy(() => import('../../views/components/alerts'))\nconst Autocomplete = lazy(() => import('../../views/components/autocomplete'))\nconst Avatar = lazy(() => import('../../views/components/avatar'))\nconst Badge = lazy(() => import('../../views/components/badge'))\nconst BlockUI = lazy(() => import('../../views/components/block-ui'))\nconst Breadcrumbs = lazy(() => import('../../views/components/breadcrumbs'))\nconst Buttons = lazy(() => import('../../views/components/buttons'))\nconst Carousel = lazy(() => import('../../views/components/carousel'))\nconst Collapse = lazy(() => import('../../views/components/collapse'))\nconst Divider = lazy(() => import('../../views/components/divider'))\nconst Dropdown = lazy(() => import('../../views/components/dropdowns'))\nconst ListGroup = lazy(() => import('../../views/components/listGroup'))\nconst Modal = lazy(() => import('../../views/components/modal'))\nconst NavComponent = lazy(() => import('../../views/components/navComponent'))\nconst Offcanvas = lazy(() => import('../../views/components/offcanvas'))\nconst Pagination = lazy(() => import('../../views/components/pagination'))\nconst BadgePills = lazy(() => import('../../views/components/badgePills'))\nconst TabPills = lazy(() => import('../../views/components/tabPills'))\nconst Popovers = lazy(() => import('../../views/components/popovers'))\nconst Progress = lazy(() => import('../../views/components/progress'))\nconst Spinners = lazy(() => import('../../views/components/spinners'))\nconst Tabs = lazy(() => import('../../views/components/tabs'))\nconst Timeline = lazy(() => import('../../views/components/timeline'))\nconst Toasts = lazy(() => import('../../views/components/toasts'))\nconst Tooltips = lazy(() => import('../../views/components/tooltips'))\n\nconst UiElementRoutes = [\n  {\n    element: <Typography />,\n    path: '/ui-element/typography'\n  },\n  {\n    element: <Icons />,\n    path: '/icons/reactfeather'\n  },\n  {\n    path: '/cards/basic',\n    element: <CardsBasic />\n  },\n  {\n    path: '/cards/advance',\n    element: <CardsAdvance />\n  },\n  {\n    path: '/cards/statistics',\n    element: <CardsStatistics />\n  },\n  {\n    path: '/cards/analytics',\n    element: <CardsAnalytics />\n  },\n  {\n    path: '/cards/action',\n    element: <CardsActions />\n  },\n  {\n    element: <Accordion />,\n    path: '/components/accordion'\n  },\n  {\n    element: <Alerts />,\n    path: '/components/alerts'\n  },\n  {\n    element: <Autocomplete />,\n    path: '/components/auto-complete'\n  },\n  {\n    element: <Avatar />,\n    path: '/components/avatar'\n  },\n  {\n    element: <Badge />,\n    path: '/components/badges'\n  },\n  {\n    element: <BlockUI />,\n    path: '/components/blockui'\n  },\n  {\n    element: <Breadcrumbs />,\n    path: '/components/breadcrumbs'\n  },\n  {\n    element: <Buttons />,\n    path: '/components/buttons'\n  },\n  {\n    element: <Carousel />,\n    path: '/components/carousel'\n  },\n  {\n    element: <Collapse />,\n    path: '/components/collapse'\n  },\n  {\n    element: <Divider />,\n    path: '/components/divider'\n  },\n  {\n    element: <Dropdown />,\n    path: '/components/dropdowns'\n  },\n  {\n    element: <ListGroup />,\n    path: '/components/list-group'\n  },\n  {\n    element: <Modal />,\n    path: '/components/modals'\n  },\n  {\n    element: <NavComponent />,\n    path: '/components/nav-component'\n  },\n  {\n    element: <Offcanvas />,\n    path: '/components/offcanvas'\n  },\n  {\n    element: <Pagination />,\n    path: '/components/pagination'\n  },\n  {\n    element: <BadgePills />,\n    path: '/components/pill-badges'\n  },\n  {\n    element: <TabPills />,\n    path: '/components/pills-component'\n  },\n  {\n    element: <Popovers />,\n    path: '/components/popovers'\n  },\n  {\n    element: <Progress />,\n    path: '/components/progress'\n  },\n  {\n    element: <Spinners />,\n    path: '/components/spinners'\n  },\n  {\n    element: <Tabs />,\n    path: '/components/tabs-component'\n  },\n  {\n    element: <Timeline />,\n    path: '/components/timeline'\n  },\n  {\n    element: <Toasts />,\n    path: '/components/toasts'\n  },\n  {\n    element: <Tooltips />,\n    path: '/components/tooltips'\n  }\n]\n\nexport default UiElementRoutes\n","import { lazy } from 'react'\n\nconst Tour = lazy(() => import('../../views/extensions/tour'))\nconst Swiper = lazy(() => import('../../views/extensions/swiper'))\nconst Ratings = lazy(() => import('../../views/extensions/ratings'))\nconst Sliders = lazy(() => import('../../views/extensions/sliders'))\nconst I18nComponent = lazy(() => import('../../views/extensions/i18n'))\nconst Pagination = lazy(() => import('../../views/extensions/pagination'))\nconst SweetAlert = lazy(() => import('../../views/extensions/sweet-alert'))\nconst ContextMenu = lazy(() => import('../../views/extensions/context-menu'))\nconst ReactPlayer = lazy(() => import('../../views/extensions/react-player'))\nconst DragAndDrop = lazy(() => import('../../views/extensions/drag-and-drop'))\nconst AccessControl = lazy(() => import('../../views/extensions/access-control'))\nconst ReactHotToast = lazy(() => import('../../views/extensions/react-hot-toasts'))\nconst CopyToClipboard = lazy(() => import('../../views/extensions/copy-to-clipboard'))\nconst ImportComponent = lazy(() => import('../../views/extensions/import-export/Import'))\nconst ExportComponent = lazy(() => import('../../views/extensions/import-export/Export'))\nconst ExportSelected = lazy(() => import('../../views/extensions/import-export/ExportSelected'))\n\nconst ExtensionsRoutes = [\n  {\n    element: <SweetAlert />,\n    path: '/extensions/sweet-alert'\n  },\n  {\n    element: <ReactHotToast />,\n    path: '/extensions/react-hot-toasts'\n  },\n  {\n    element: <Sliders />,\n    path: '/extensions/slider'\n  },\n  {\n    element: <DragAndDrop />,\n    path: '/extensions/drag-and-drop'\n  },\n  {\n    element: <Tour />,\n    path: '/extensions/tour'\n  },\n  {\n    element: <CopyToClipboard />,\n    path: '/extensions/clipboard'\n  },\n  {\n    element: <ReactPlayer />,\n    path: '/extensions/react-player'\n  },\n  {\n    element: <ContextMenu />,\n    path: '/extensions/context-menu'\n  },\n  {\n    element: <Swiper />,\n    path: '/extensions/swiper'\n  },\n  {\n    path: '/access-control',\n    element: <AccessControl />,\n    meta: {\n      action: 'read',\n      resource: 'ACL'\n    }\n  },\n  {\n    element: <Ratings />,\n    path: '/extensions/ratings'\n  },\n  {\n    element: <Pagination />,\n    path: '/extensions/pagination'\n  },\n  {\n    element: <ImportComponent />,\n    path: '/extensions/import'\n  },\n  {\n    element: <ExportComponent />,\n    path: '/extensions/export'\n  },\n  {\n    element: <ExportSelected />,\n    path: '/extensions/export-selected'\n  },\n  {\n    element: <I18nComponent />,\n    path: '/extensions/i18n'\n  }\n]\n\nexport default ExtensionsRoutes\n","import { lazy } from 'react'\n\nconst BoxedLayout = lazy(() => import('../../views/ui-elements/page-layouts/BoxedLayout'))\nconst WithoutMenu = lazy(() => import('../../views/ui-elements/page-layouts/WithoutMenu'))\nconst LayoutEmpty = lazy(() => import('../../views/ui-elements/page-layouts/LayoutEmpty'))\nconst LayoutBlank = lazy(() => import('../../views/ui-elements/page-layouts/LayoutBlank'))\nconst CollapsedMenu = lazy(() => import('../../views/ui-elements/page-layouts/CollapsedMenu'))\n\nconst PageLayoutRoutes = [\n  {\n    element: <CollapsedMenu />,\n    path: '/page-layout/collapse-menu',\n    meta: {\n      menuCollapsed: true\n    }\n  },\n  {\n    element: <BoxedLayout />,\n    path: '/page-layout/layout-boxed',\n    meta: {\n      contentWidth: 'boxed'\n    }\n  },\n  {\n    element: <WithoutMenu />,\n    path: '/page-layout/without-menu',\n    meta: {\n      menuHidden: true\n    }\n  },\n  {\n    element: <LayoutEmpty />,\n    path: '/page-layout/layout-empty'\n  },\n  {\n    element: <LayoutBlank />,\n    path: '/page-layout/layout-blank',\n    meta: {\n      layout: 'blank'\n    }\n  }\n]\n\nexport default PageLayoutRoutes\n","// ** React Imports\nimport { lazy } from 'react'\n\nconst Login = lazy(() => import('../../views/pages/authentication/Login'))\nconst LoginBasic = lazy(() => import('../../views/pages/authentication/LoginBasic'))\nconst LoginCover = lazy(() => import('../../views/pages/authentication/LoginCover'))\n\nconst Register = lazy(() => import('../../views/pages/authentication/Register'))\nconst RegisterBasic = lazy(() => import('../../views/pages/authentication/RegisterBasic'))\nconst RegisterCover = lazy(() => import('../../views/pages/authentication/RegisterCover'))\nconst RegisterMultiSteps = lazy(() => import('../../views/pages/authentication/register-multi-steps'))\n\nconst ForgotPassword = lazy(() => import('../../views/pages/authentication/ForgotPassword'))\nconst ForgotPasswordBasic = lazy(() => import('../../views/pages/authentication/ForgotPasswordBasic'))\nconst ForgotPasswordCover = lazy(() => import('../../views/pages/authentication/ForgotPasswordCover'))\n\nconst ResetPasswordBasic = lazy(() => import('../../views/pages/authentication/ResetPasswordBasic'))\nconst ResetPasswordCover = lazy(() => import('../../views/pages/authentication/ResetPasswordCover'))\n\nconst VerifyEmailBasic = lazy(() => import('../../views/pages/authentication/VerifyEmailBasic'))\nconst VerifyEmailCover = lazy(() => import('../../views/pages/authentication/VerifyEmailCover'))\n\nconst TwoStepsBasic = lazy(() => import('../../views/pages/authentication/TwoStepsBasic'))\nconst TwoStepsCover = lazy(() => import('../../views/pages/authentication/TwoStepsCover'))\n\nconst AuthenticationRoutes = [\n  {\n    path: '/login',\n    element: <Login />,\n    meta: {\n      layout: 'blank',\n      publicRoute: true,\n      restricted: true\n    }\n  },\n  {\n    path: '/pages/login-basic',\n    element: <LoginBasic />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/login-cover',\n    element: <LoginCover />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/register',\n    element: <Register />,\n    meta: {\n      layout: 'blank',\n      publicRoute: true,\n      restricted: true\n    }\n  },\n  {\n    path: '/pages/register-basic',\n    element: <RegisterBasic />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/register-cover',\n    element: <RegisterCover />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/register-multi-steps',\n    element: <RegisterMultiSteps />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n\n  {\n    path: '/forgot-password',\n    element: <ForgotPassword />,\n    layout: 'BlankLayout',\n    meta: {\n      layout: 'blank',\n      publicRoute: true,\n      restricted: true\n    }\n  },\n  {\n    path: '/pages/forgot-password-basic',\n    element: <ForgotPasswordBasic />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/forgot-password-cover',\n    element: <ForgotPasswordCover />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/reset-password-basic',\n    element: <ResetPasswordBasic />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/reset-password-cover',\n    element: <ResetPasswordCover />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/verify-email-basic',\n    element: <VerifyEmailBasic />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/verify-email-cover',\n    element: <VerifyEmailCover />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/two-steps-basic',\n    element: <TwoStepsBasic />,\n    meta: {\n      layout: 'blank'\n    }\n  },\n  {\n    path: '/pages/two-steps-cover',\n    element: <TwoStepsCover />,\n    meta: {\n      layout: 'blank'\n    }\n  }\n]\n\nexport default AuthenticationRoutes\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport { Input, Label } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input\n            type='radio'\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </div>\n\n          <div className='mb-2'>\n            <p className='fw-bold'>Content Width</p>\n            <div className='d-flex'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='full-width'\n                  checked={contentWidth === 'full'}\n                  onChange={() => setContentWidth('full')}\n                />\n                <Label className='form-check-label' for='full-width'>\n                  Full Width\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  id='boxed'\n                  type='radio'\n                  checked={contentWidth === 'boxed'}\n                  onChange={() => setContentWidth('boxed')}\n                />\n                <Label className='form-check-label' for='boxed'>\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex'>\n              <p className='fw-bold me-auto mb-0'>RTL</p>\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='fw-bold'>Menu Layout</p>\n          <div className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='vertical-layout'\n                  checked={layout === 'vertical'}\n                  onChange={() => {\n                    setLayout('vertical')\n                    setLastLayout('vertical')\n                  }}\n                />\n                <Label className='form-check-label' for='vertical-layout'>\n                  Vertical\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  type='radio'\n                  id='horizontal-layout'\n                  checked={layout === 'horizontal'}\n                  onChange={() => {\n                    setLayout('horizontal')\n                    setLastLayout('horizontal')\n                  }}\n                />\n                <Label className='form-check-label' for='horizontal-layout'>\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== 'horizontal' ? (\n            <div className='form-switch mb-2 ps-0'>\n              <div className='d-flex align-items-center'>\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\n                <Input\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex align-items-center'>\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\n              <Input\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'horizontal' ? (\n            <div className='mb-2'>\n              <p className='fw-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </div>\n          ) : null}\n\n          <div className='mb-2'>\n            <p className='fw-bold'>{layout === 'horizontal' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\n\nconst ScrollTop = props => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('scroll', () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: 'smooth'\n}\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a href='https://ebslon.com/' target='_blank' rel='noopener noreferrer'>\n          Ebslon Infotech\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-end d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** Third Party Components\nimport { useTranslation } from 'react-i18next'\nimport ReactCountryFlag from 'react-country-flag'\n\n// ** Reactstrap Imports\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst IntlDropdown = () => {\n  // ** Hooks\n  const { i18n } = useTranslation()\n\n  // ** Vars\n  const langObj = {\n    en: 'English',\n    de: 'German',\n    fr: 'French',\n    pt: 'Portuguese'\n  }\n\n  // ** Function to switch Language\n  const handleLangUpdate = (e, lang) => {\n    e.preventDefault()\n    i18n.changeLanguage(lang)\n  }\n\n  return (\n    <UncontrolledDropdown href='/' tag='li' className='dropdown-language nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link' onClick={e => e.preventDefault()}>\n        <ReactCountryFlag\n          svg\n          className='country-flag flag-icon'\n          countryCode={i18n.language === 'en' ? 'us' : i18n.language}\n        />\n        <span className='selected-language'>{langObj[i18n.language]}</span>\n      </DropdownToggle>\n      <DropdownMenu className='mt-0' end>\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'en')}>\n          <ReactCountryFlag className='country-flag' countryCode='us' svg />\n          <span className='ms-1'>English</span>\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'fr')}>\n          <ReactCountryFlag className='country-flag' countryCode='fr' svg />\n          <span className='ms-1'>French</span>\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'de')}>\n          <ReactCountryFlag className='country-flag' countryCode='de' svg />\n          <span className='ms-1'>German</span>\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' onClick={e => handleLangUpdate(e, 'pt')}>\n          <ReactCountryFlag className='country-flag' countryCode='pt' svg />\n          <span className='ms-1'>Portuguese</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default IntlDropdown\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useEffect, Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport InputNumber from 'rc-input-number'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { ShoppingCart, X, Plus, Minus } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Dropdown, DropdownMenu, DropdownToggle, DropdownItem, Badge, Button } from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCartItems, deleteCartItem, getProduct } from '@src/views/apps/ecommerce/store'\n\n// ** Styles\nimport '@styles/react/libs/input-number/input-number.scss'\n\nconst CartDropdown = () => {\n  // ** State\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ecommerce)\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    dispatch(getCartItems())\n  }, [])\n\n  // ** Function to toggle Dropdown\n  const toggle = () => setDropdownOpen(prevState => !prevState)\n\n  // ** Function to call on Dropdown Item Click\n  const handleDropdownItemClick = id => {\n    dispatch(getProduct(id))\n    toggle()\n  }\n\n  // ** Loops through Cart Array to return Cart Items\n  const renderCartItems = () => {\n    if (store.cart.length) {\n      let total = 0\n\n      return (\n        <Fragment>\n          <PerfectScrollbar\n            className='scrollable-container media-list'\n            options={{\n              wheelPropagation: false\n            }}\n          >\n            {store.cart.map(item => {\n              total += item.price\n\n              return (\n                <div key={item.id} className='list-item align-items-center'>\n                  <img className='d-block rounded me-1' src={item.image} alt={item.name} width='62' />\n                  <div className='list-item-body flex-grow-1'>\n                    <X size={14} className='cart-item-remove' onClick={() => dispatch(deleteCartItem(item.id))} />\n                    <div className='media-heading'>\n                      <h6 className='cart-item-title'>\n                        <Link\n                          className='text-body'\n                          to={`/apps/ecommerce/product/${item.slug}`}\n                          onClick={() => handleDropdownItemClick(item.id)}\n                        >\n                          {item.name}\n                        </Link>\n                      </h6>\n                      <small className='cart-item-by'>by {item.brand}</small>\n                    </div>\n                    <div className='cart-item-qty'>\n                      <InputNumber\n                        min={1}\n                        max={10}\n                        upHandler={<Plus />}\n                        className='cart-input'\n                        defaultValue={item.qty}\n                        downHandler={<Minus />}\n                      />\n                    </div>\n                    <h5 className='cart-item-price'>${item.price}</h5>\n                  </div>\n                </div>\n              )\n            })}\n          </PerfectScrollbar>\n          <li className='dropdown-menu-footer'>\n            <div className='d-flex justify-content-between mb-1'>\n              <h6 className='fw-bolder mb-0'>Total:</h6>\n              <h6 className='text-primary fw-bolder mb-0'>${Number(total.toFixed(2))}</h6>\n            </div>\n            <Button tag={Link} to='/apps/ecommerce/checkout' color='primary' block onClick={toggle}>\n              Checkout\n            </Button>\n          </li>\n        </Fragment>\n      )\n    } else {\n      return <p className='m-0 p-1 text-center'>Your cart is empty</p>\n    }\n  }\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} tag='li' className='dropdown-cart nav-item me-25'>\n      <DropdownToggle tag='a' className='nav-link position-relative'>\n        <ShoppingCart className='ficon' />\n        {store.cart.length > 0 ? (\n          <Badge pill color='primary' className='badge-up'>\n            {store.cart.length}\n          </Badge>\n        ) : null}\n      </DropdownToggle>\n      <DropdownMenu end tag='ul' className='dropdown-menu-media dropdown-cart mt-0'>\n        <li className='dropdown-menu-header'>\n          <DropdownItem tag='div' className='d-flex' header>\n            <h4 className='notification-title mb-0 me-auto'>My Cart</h4>\n            <Badge color='light-primary' pill>\n              {store.cart.length || 0} Items\n            </Badge>\n          </DropdownItem>\n        </li>\n        {renderCartItems()}\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default CartDropdown\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/authentication'\n\n// ** Third Party Components\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() && isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          {/* <span className='user-name fw-bold'>{(userData && userData.user && userData?.user['name']) || 'No Name'}</span> */}\n          <span className='user-status'>{(userData && userData.role) || 'Admin'}</span>\n        </div>\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu end>\n        {/* <DropdownItem tag={Link} to='/apps/email'>\n          <Mail size={14} className='me-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem> */}\n        {/* <DropdownItem tag={Link} to='/apps/todo'>\n          <CheckSquare size={14} className='me-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem> */}\n        {/* <DropdownItem tag={Link} to='/apps/chat'>\n          <MessageSquare size={14} className='me-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem> */}\n        <DropdownItem divider />\n        {/* <DropdownItem tag={Link} to='/pages/account-settings'>\n          <Settings size={14} className='me-75' />\n          <span className='align-middle'>Settings</span>\n        </DropdownItem> */}\n        {/* <DropdownItem tag={Link} to='/pages/pricing'>\n          <CreditCard size={14} className='me-75' />\n          <span className='align-middle'>Pricing</span>\n        </DropdownItem> */}\n        {/* <DropdownItem tag={Link} to='/pages/faq'>\n          <HelpCircle size={14} className='me-75' />\n          <span className='align-middle'>FAQ</span>\n        </DropdownItem> */}\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n          <Power size={14} className='me-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport * as Icon from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleSearchQuery } from '@store/navbar'\n\n// ** Custom Components\nimport Autocomplete from '@components/autocomplete'\n\nconst NavbarSearch = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** States\n  const [suggestions, setSuggestions] = useState([])\n  const [navbarSearch, setNavbarSearch] = useState(false)\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    axios.get('/api/main-search/data').then(({ data }) => {\n      setSuggestions(data.searchArr)\n    })\n  }, [])\n\n  // ** Removes query in store\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\n\n  // ** Function to handle external Input click\n  const handleExternalClick = () => {\n    if (navbarSearch === true) {\n      setNavbarSearch(false)\n      handleClearQueryInStore()\n    }\n  }\n\n  // ** Function to clear input value\n  const handleClearInput = setUserInput => {\n    if (!navbarSearch) {\n      setUserInput('')\n      handleClearQueryInStore()\n    }\n  }\n\n  // ** Function to close search on ESC & ENTER Click\n  const onKeyDown = e => {\n    if (e.keyCode === 27 || e.keyCode === 13) {\n      setTimeout(() => {\n        setNavbarSearch(false)\n        handleClearQueryInStore()\n      }, 1)\n    }\n  }\n\n  // ** Function to handle search suggestion Click\n  const handleSuggestionItemClick = () => {\n    setNavbarSearch(false)\n    handleClearQueryInStore()\n  }\n\n  // ** Function to handle search list Click\n  const handleListItemClick = (func, link, e) => {\n    func(link, e)\n    setTimeout(() => {\n      setNavbarSearch(false)\n    }, 1)\n    handleClearQueryInStore()\n  }\n\n  return (\n    <NavItem className='nav-search' onClick={() => setNavbarSearch(true)}>\n      <NavLink className='nav-link-search'>\n        <Icon.Search className='ficon' />\n      </NavLink>\n      <div\n        className={classnames('search-input', {\n          open: navbarSearch === true\n        })}\n      >\n        <div className='search-input-icon'>\n          <Icon.Search />\n        </div>\n        {navbarSearch ? (\n          <Autocomplete\n            className='form-control'\n            suggestions={suggestions}\n            filterKey='title'\n            filterHeaderKey='groupTitle'\n            grouped={true}\n            placeholder='Explore Vuexy...'\n            autoFocus={true}\n            onSuggestionItemClick={handleSuggestionItemClick}\n            externalClick={handleExternalClick}\n            clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\n            onKeyDown={onKeyDown}\n            onChange={e => dispatch(handleSearchQuery(e.target.value))}\n            customRender={(item, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => {\n              const IconTag = Icon[item.icon ? item.icon : 'X']\n              return (\n                <li\n                  className={classnames('suggestion-item', {\n                    active: filteredData.indexOf(item) === activeSuggestion\n                  })}\n                  key={i}\n                  onClick={e => handleListItemClick(onSuggestionItemClick, item.link, e)}\n                  onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\n                >\n                  <div\n                    className={classnames({\n                      'd-flex justify-content-between align-items-center': item.file || item.img\n                    })}\n                  >\n                    <div className='item-container d-flex'>\n                      {item.icon ? (\n                        <IconTag size={17} />\n                      ) : item.file ? (\n                        <img src={item.file} height='36' width='28' alt={item.title} />\n                      ) : item.img ? (\n                        <img className='rounded-circle mt-25' src={item.img} height='28' width='28' alt={item.title} />\n                      ) : null}\n                      <div className='item-info ms-1'>\n                        <p className='align-middle mb-0'>{item.title}</p>\n                        {item.by || item.email ? (\n                          <small className='text-muted'>{item.by ? item.by : item.email ? item.email : null}</small>\n                        ) : null}\n                      </div>\n                    </div>\n                    {item.size || item.date ? (\n                      <div className='meta-container'>\n                        <small className='text-muted'>{item.size ? item.size : item.date ? item.date : null}</small>\n                      </div>\n                    ) : null}\n                  </div>\n                </li>\n              )\n            }}\n          />\n        ) : null}\n        <div className='search-input-close'>\n          <Icon.X\n            className='ficon'\n            onClick={e => {\n              e.stopPropagation()\n              setNavbarSearch(false)\n              handleClearQueryInStore()\n            }}\n          />\n        </div>\n      </div>\n    </NavItem>\n  )\n}\n\nexport default NavbarSearch\n","// ** Dropdowns Imports\nimport IntlDropdown from './IntlDropdown'\nimport CartDropdown from './CartDropdown'\nimport UserDropdown from './UserDropdown'\nimport NavbarSearch from './NavbarSearch'\nimport NotificationDropdown from './NotificationDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <ul className='nav navbar-nav align-items-center ms-auto'>\n      {/* <IntlDropdown /> */}\n      {/* <NavItem className='d-none d-lg-block'>\n        <NavLink className='nav-link-style'>\n          <ThemeToggler />\n        </NavLink>\n      </NavItem>\n      <NavbarSearch />\n      <CartDropdown /> */}\n      {/* <NotificationDropdown /> */}\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport * as Icon from 'react-feather'\nimport classnames from 'classnames'\n\n// ** Custom Component\nimport Autocomplete from '@components/autocomplete'\n\n// ** Reactstrap Imports\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledTooltip,\n  UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getBookmarks, updateBookmarked, handleSearchQuery } from '@store/navbar'\n\nconst NavbarBookmarks = props => {\n  // ** Props\n  const { setMenuVisibility } = props\n\n  // ** State\n  const [value, setValue] = useState('')\n  const [openSearch, setOpenSearch] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.navbar)\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    dispatch(getBookmarks())\n  }, [])\n\n  // ** Loops through Bookmarks Array to return Bookmarks\n  const renderBookmarks = () => {\n    if (store.bookmarks.length) {\n      return store.bookmarks\n        .map(item => {\n          const IconTag = Icon[item.icon]\n          return (\n            <NavItem key={item.target} className='d-none d-lg-block'>\n              <NavLink tag={Link} to={item.link} id={item.target}>\n                <IconTag className='ficon' />\n                <UncontrolledTooltip target={item.target}>{item.title}</UncontrolledTooltip>\n              </NavLink>\n            </NavItem>\n          )\n        })\n        .slice(0, 10)\n    } else {\n      return null\n    }\n  }\n\n  // ** If user has more than 10 bookmarks then add the extra Bookmarks to a dropdown\n  const renderExtraBookmarksDropdown = () => {\n    if (store.bookmarks.length && store.bookmarks.length >= 11) {\n      return (\n        <NavItem className='d-none d-lg-block'>\n          <NavLink tag='span'>\n            <UncontrolledDropdown>\n              <DropdownToggle tag='span'>\n                <Icon.ChevronDown className='ficon' />\n              </DropdownToggle>\n              <DropdownMenu end>\n                {store.bookmarks\n                  .map(item => {\n                    const IconTag = Icon[item.icon]\n                    return (\n                      <DropdownItem tag={Link} to={item.link} key={item.id}>\n                        <IconTag className='me-50' size={14} />\n                        <span className='align-middle'>{item.title}</span>\n                      </DropdownItem>\n                    )\n                  })\n                  .slice(10)}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </NavLink>\n        </NavItem>\n      )\n    } else {\n      return null\n    }\n  }\n\n  // ** Removes query in store\n  const handleClearQueryInStore = () => dispatch(handleSearchQuery(''))\n\n  // ** Loops through Bookmarks Array to return Bookmarks\n  const onKeyDown = e => {\n    if (e.keyCode === 27 || e.keyCode === 13) {\n      setTimeout(() => {\n        setOpenSearch(false)\n        handleClearQueryInStore()\n      }, 1)\n    }\n  }\n\n  // ** Function to toggle Bookmarks\n  const handleBookmarkUpdate = id => dispatch(updateBookmarked(id))\n\n  // ** Function to handle Bookmarks visibility\n  const handleBookmarkVisibility = () => {\n    setOpenSearch(!openSearch)\n    setValue('')\n    handleClearQueryInStore()\n  }\n\n  // ** Function to handle Input change\n  const handleInputChange = e => {\n    setValue(e.target.value)\n    dispatch(handleSearchQuery(e.target.value))\n  }\n\n  // ** Function to handle external Input click\n  const handleExternalClick = () => {\n    if (openSearch === true) {\n      setOpenSearch(false)\n      handleClearQueryInStore()\n    }\n  }\n\n  // ** Function to clear input value\n  const handleClearInput = setUserInput => {\n    if (!openSearch) {\n      setUserInput('')\n      handleClearQueryInStore()\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none'>\n        <NavItem className='mobile-menu me-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Icon.Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <ul className='nav navbar-nav bookmark-icons'>\n        {renderBookmarks()}\n        {renderExtraBookmarksDropdown()}\n        <NavItem className='nav-item d-none d-lg-block'>\n          <NavLink className='bookmark-star' onClick={handleBookmarkVisibility}>\n            <Icon.Star className='ficon text-warning' />\n          </NavLink>\n          <div className={classnames('bookmark-input search-input', { show: openSearch })}>\n            <div className='bookmark-input-icon'>\n              <Icon.Search size={14} />\n            </div>\n            {openSearch && store.suggestions.length ? (\n              <Autocomplete\n                wrapperClass={classnames('search-list search-list-bookmark', {\n                  show: openSearch\n                })}\n                className='form-control'\n                suggestions={!value.length ? store.bookmarks : store.suggestions}\n                filterKey='title'\n                autoFocus={true}\n                defaultSuggestions\n                suggestionLimit={!value.length ? store.bookmarks.length : 6}\n                placeholder='Search...'\n                externalClick={handleExternalClick}\n                clearInput={(userInput, setUserInput) => handleClearInput(setUserInput)}\n                onKeyDown={onKeyDown}\n                value={value}\n                onChange={handleInputChange}\n                customRender={(\n                  item,\n                  i,\n                  filteredData,\n                  activeSuggestion,\n                  onSuggestionItemClick,\n                  onSuggestionItemHover\n                ) => {\n                  const IconTag = Icon[item.icon ? item.icon : 'X']\n                  return (\n                    <li\n                      key={i}\n                      onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(item))}\n                      className={classnames('suggestion-item d-flex align-items-center justify-content-between', {\n                        active: filteredData.indexOf(item) === activeSuggestion\n                      })}\n                    >\n                      <Link\n                        to={item.link}\n                        className='d-flex align-items-center justify-content-between p-0'\n                        onClick={() => {\n                          setOpenSearch(false)\n                          handleClearQueryInStore()\n                        }}\n                        style={{\n                          width: 'calc(90%)'\n                        }}\n                      >\n                        <div className='d-flex justify-content-start align-items-center overflow-hidden'>\n                          <IconTag size={17.5} className='me-75' />\n                          <span className='text-truncate'>{item.title}</span>\n                        </div>\n                      </Link>\n                      <Icon.Star\n                        size={17.5}\n                        className={classnames('bookmark-icon float-end', {\n                          'text-warning': item.isBookmarked\n                        })}\n                        onClick={() => handleBookmarkUpdate(item.id)}\n                      />\n                    </li>\n                  )\n                }}\n              />\n            ) : null}\n          </div>\n        </NavItem>\n      </ul>\n    </Fragment>\n  )\n}\n\nexport default NavbarBookmarks\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\nimport NavbarBookmarks from './NavbarBookmarks'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavbarBookmarks setMenuVisibility={setMenuVisibility} />\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Icons Imports\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from '@utils'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Vars\n  const user = getUserData()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item me-auto'>\n          <NavLink to={user ? getHomeRouteForLoggedInUser(user.role) : '/'} className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h3 className='brand-text mb-0'>{themeConfig.app.appName} asd</h3>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\nconsole.log(item, \"itemitem\")\n  // ** Hooks\n  const { t } = useTranslation()\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return 'd-flex align-items-center active'\n                }\n              }\n            })}\n        onClick={e => {\n          if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\n            e.preventDefault()\n          }\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","/* eslint-disable implicit-arrow-linebreak */\n// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item?.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach(child => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nconst checkForVisibleChild = (arr, ability) => {\n  return arr.some(i => {\n    if (i.children) {\n      return checkForVisibleChild(i.children, ability)\n    } else {\n      return ability.can(i.action, i.resource)\n    }\n  })\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && checkForVisibleChild(item.children, ability)\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n  const { t } = useTranslation()\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active':\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport {\n  canViewMenuItem,\n  canViewMenuGroup,\n  resolveVerticalNavMenuItemComponent as resolveNavItemComponent\n} from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return  <TagName key={item.id || item.header} item={item} {...props} />\n    if (item.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return canViewMenuItem(item) && <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, menu, skin, menuData } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    setMenuHover(true)\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu({ ...props })\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={menuData}\n                  menuData={menuData}\n                  menuHover={menuHover}\n                  groupOpen={groupOpen}\n                  activeItem={activeItem}\n                  groupActive={groupActive}\n                  setGroupOpen={setGroupOpen}\n                  menuCollapsed={menuCollapsed}\n                  setActiveItem={setActiveItem}\n                  setGroupActive={setGroupActive}\n                  currentActiveGroup={currentActiveGroup}\n                  setCurrentActiveGroup={setCurrentActiveGroup}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","// ** Store Imports\nimport { handleNavbarType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setNavbarType = type => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setFooterType = type => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = value => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\n// import Button from 'react-bootstrap/Button';\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  Button\n} from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { menu, navbar, footer, children, menuData } = props\n  // ** Hooks\n  const [isRtl, setIsRtl] = useRTL()\n  const { skin, setSkin } = useSkin()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const isHidden = layoutStore.menuHidden\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n  console.log(navbar, navbarClasses, bgColorCondition, menu, menuData, isHidden)\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {\n        windowWidth < 768 && (\n          <>\n            <SidebarComponent\n              skin={skin}\n              menu={menu}\n              menuData={menuData}\n              menuCollapsed={menuCollapsed}\n              menuVisibility={menuVisibility}\n              setMenuCollapsed={setMenuCollapsed}\n              setMenuVisibility={setMenuVisibility}\n            />     <Navbar\n              expand='lg'\n              container={false}\n              light={skin !== 'dark'}\n              dark={skin === 'dark' || bgColorCondition}\n              color={bgColorCondition ? navbarColor : undefined}\n              className={classnames(\n                `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n              )}\n            >\n              <div className='navbar-container d-flex content'>\n                {navbar ? (\n                  navbar({ skin, setSkin, setMenuVisibility })\n                ) : (\n                  <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n                )}\n\n              </div>\n            </Navbar>\n          </>\n        )\n      }\n\n\n      {/* {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuData={menuData}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n        />\n      ) : null} */}\n\n      <div className='wrepaer_body' >\n        {children}\n\n        {/* Vertical Nav Menu Overlay */}\n        <div\n          className={classnames('sidenav-overlay', {\n            show: menuVisibility\n          })}\n          onClick={() => setMenuVisibility(false)}\n        ></div>\n        {/* Vertical Nav Menu Overlay */}\n\n        {themeConfig.layout.customizer === true ? (\n          <Customizer\n            skin={skin}\n            isRtl={isRtl}\n            layout={layout}\n            setSkin={setSkin}\n            setIsRtl={setIsRtl}\n            isHidden={isHidden}\n            setLayout={setLayout}\n            footerType={footerType}\n            navbarType={navbarType}\n            setIsHidden={setIsHidden}\n            themeConfig={themeConfig}\n            navbarColor={navbarColor}\n            contentWidth={contentWidth}\n            setFooterType={setFooterType}\n            setNavbarType={setNavbarType}\n            setLastLayout={setLastLayout}\n            menuCollapsed={menuCollapsed}\n            setNavbarColor={setNavbarColor}\n            setContentWidth={setContentWidth}\n            setMenuCollapsed={setMenuCollapsed}\n          />\n        ) : null}\n\n      </div>\n\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n\n\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// ** Icons Import\nimport {\n  Box,\n  Circle,\n  Map,\n  User\n} from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n  {\n    id: 'apps',\n    title: 'Apps',\n    icon: <Box />,\n    roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER],\n    children: [\n      {\n        id: 'users',\n        title: 'Users',\n        icon: <User size={12} />,\n        children: [\n          {\n            id: 'All Users',\n            title: 'All Users',\n            icon: <Circle />,\n            navLink: '/apps/user/list',\n            roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER]\n          },\n          {\n            id: 'Users With subscription',\n            title: 'Users With subscription',\n            icon: <Circle />,\n            navLink: '/apps/user/Users-With-Subscription',\n            roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER]\n          }\n\n        ],\n        roleArr: [\"ADMIN\", \"SUBADMIN\", ROLES_CONSTANT.FIELDUSER]\n\n      },\n      {\n        id: 'location',\n        title: 'Location',\n        icon: <Map />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n          {\n            id: 'locationCountry',\n            title: 'Country',\n            icon: <Circle />,\n            navLink: '/apps/location/country',\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN]\n          },\n          {\n            id: 'locationState',\n            title: 'State',\n            icon: <Circle />,\n            navLink: '/apps/location/state',\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN]\n          },\n          {\n            id: 'locationCity',\n            title: 'City',\n            icon: <Circle />,\n            navLink: '/apps/location/city',\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN]\n          }\n        ]\n      },\n      {\n        id: 'Shop Image',\n        title: 'Shop Image',\n        icon: <Map />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n          {\n            id: 'Shop Image',\n            title: 'Shop Image',\n            icon: <Circle />,\n            navLink: '/apps/ShopImage',\n            roleArr: [\"ADMIN\", \"SUBADMIN\"]\n          }\n        ]\n      },\n      {\n        id: 'Hompage banners',\n        title: 'Hompage banners',\n        icon: <Map />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n          {\n            id: 'HomepageBanners',\n            title: 'Homepage Banners',\n            icon: <Circle />,\n            navLink: '/apps/homepageBanners',\n            roleArr: [\"ADMIN\", \"SUBADMIN\"]\n          }\n\n        ]\n      }\n\n\n    ]\n  }\n\n]\n","// ** Icons Import\nimport { Home, Activity, ShoppingCart } from 'react-feather'\n\nexport default [\n  {\n    // id: 'dashboards',\n    // title: 'Dashboards',\n    // icon: <Home />,\n    // roleArr: [\"ADMIN\", \"DISTRIBUTOR\"],\n    // navLink: '/dashboard'\n    // children: [\n    //   {\n    //     id: 'analyticsDash',\n    //     title: 'Analytics',\n    //     icon: <Activity />,\n    //     navLink: '/dashboard/analytics'\n    //   },\n    //   {\n    //     id: 'eCommerceDash',\n    //     title: 'eCommerce',\n    //     icon: <ShoppingCart />,\n    //     navLink: '/dashboard/ecommerce'\n    //   }\n    // ]\n  }\n]\n","// ** Navigation imports\nimport apps from '../horizontal/apps'\n// import pages from './pages'\n// import others from './others'\n// import charts from './charts'\n// import uiElements from './ui-elements'\n// import formsAndTables from './forms-tables'\nimport dashboards from '../horizontal/dashboards'\n\n// ** Merge & Export\n// export default [...dashboards, ...apps, ...uiElements, ...formsAndTables, ...pages, ...charts, ...others]\nexport default [...dashboards, ...apps]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\nconst VerticalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item?.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames('nav-item', {\n        disabled: item?.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        target={item?.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item?.externalLink === true\n          ? {\n            href: item?.navLink || '/'\n          }\n          : {\n            to: item?.navLink || '/',\n            className: ({ isActive }) => {\n              const commonClass = 'd-flex align-items-center'\n              if (isActive && !item?.disabled && item?.navLink !== '#') {\n                if (isChild) {\n                  return `${commonClass} dropdown-item active`\n                } else {\n                  return `${commonClass} nav-link active`\n                }\n              } else {\n                if (isChild) {\n                  return `${commonClass} dropdown-item`\n                } else {\n                  return `${commonClass} nav-link`\n                }\n              }\n            }\n          })}\n      /*eslint-enable */\n      >\n        {item?.icon}\n        <span>{t(item?.title)}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { usePopper } from 'react-popper'\nimport { useTranslation } from 'react-i18next'\n\n// ** Utils\nimport { hasActiveChild } from '@layouts/utils'\n\n// ** Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst applyHeight = {\n  enabled: true,\n  name: 'applyHeight',\n  phase: 'beforeWrite',\n  fn: data => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: 'auto'\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest('.dropdown').classList.add('openLeft')\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? 'bottom-end' : 'bottom-start'\n  const popperPlacementSubMenu = isRtl ? 'left-start' : 'right-start'\n\n  // ** Hooks\n  const { t } = useTranslation()\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: isChild ? popperPlacementSubMenu : popperPlacement,\n    modifiers: [\n      applyHeight,\n      {\n        enabled: true,\n        name: 'offset',\n        options: {\n          offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n        }\n      }\n    ]\n  })\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames('dropdown', {\n        show: menuOpen,\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active': hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to='/'\n        onClick={e => e.preventDefault()}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames('dropdown-menu', { 'first-level': submenu === false })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport {\n  resolveHorizontalNavMenuItemComponent as resolveNavItemComponent,\n  canViewMenuGroup,\n  canViewMenuItem\n} from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item?.children) {\n      return <TagName item={item} index={index} key={item?.id} {...props} />\n    }\n    return <TagName item={item} index={index} key={item?.id} {...props} />\n    if (item?.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return canViewMenuItem(item) && <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\nimport { useSkin } from '@hooks/useSkin'\nimport NavbarUser from '../../navbar/NavbarUser'\nimport { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nconst HorizontalMenu = ({ menuData }) => {\n  const role = useSelector(state => state?.auth?.userData?.role)\n  const [menuDataArr, setMenuDataArr] = useState(menuData)\n\n  const { skin, setSkin } = useSkin()\n  useEffect(() => {\n    let tempArr = menuData\n    // console.log(role, \"role\")\n    if (tempArr && tempArr.length > 0) {\n      tempArr = tempArr.filter(el => el.roleArr && el.roleArr.length > 0 && role && role !== \"\" && el.roleArr.some(ele => ele === role)).map(el => {\n        if (el.children && el.children.length) {\n          el.children = el.children.filter(ele => ele.roleArr && ele.roleArr.length > 0 && role && role !== \"\" && ele.roleArr.some(elex => elex === role)).map(elm => {\n            if (elm.children && elm.children.length) {\n              elm.children = elm.children.filter(elex => elex.roleArr && elex.roleArr.length > 0 && role && role !== \"\" && elex.roleArr.some(elexm => elexm === role))\n            }\n            return { ...elm }\n          })\n        }\n        return { ...el }\n      })\n    }\n    setMenuDataArr([...tempArr])\n  }, [menuData, role])\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems submenu={false} items={menuDataArr} />\n        <NavbarUser skin={skin} setSkin={setSkin} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav' : 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  // console.log(navbar)\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {/* <Navbar\n        expand='lg'\n        container={false}\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar> */}\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            <NavItem style={{ listStyle: 'none', width: 200 }}>\n              <Link to='/dashboard' >\n                <h4 className='mx-2'>{themeConfig.app.appName}</h4>\n              </Link>\n            </NavItem>\n            {menu ? menu({ menuData, routerProps, currentActiveItem }) : <MenuComponent menuData={menuData} />}\n          </Navbar>\n        </div>\n      ) : null}\n      <div className='wrepaer_bodddy' >\n\n        {children}\n        {themeConfig.layout.customizer === true ? (\n          <Customizer\n            skin={skin}\n            isRtl={isRtl}\n            layout={layout}\n            setSkin={setSkin}\n            setIsRtl={setIsRtl}\n            isHidden={isHidden}\n            setLayout={setLayout}\n            footerType={footerType}\n            navbarType={navbarType}\n            setIsHidden={setIsHidden}\n            themeConfig={themeConfig}\n            navbarColor={navbarColor}\n            contentWidth={contentWidth}\n            setFooterType={setFooterType}\n            setNavbarType={setNavbarType}\n            setLastLayout={setLastLayout}\n            setNavbarColor={setNavbarColor}\n            setContentWidth={setContentWidth}\n          />\n        ) : null}\n\n      </div>\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// ** Icons Import\nimport { Command, Eye } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n    {\n        id: 'blogs1',\n        title: 'Blog Video',\n        icon: <Command />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n            {\n                id: 'Blogssas',\n                title: 'View Blog Video',\n                icon: <Eye />,\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n                navLink: '/blogs-video/view'\n            }\n            // {\n            //     id: 'ViewAdvertisementSubscriptions',\n            //     title: 'View advertisement Subscriptions',\n            //     icon: <Eye />,\n            //     roleArr: [\"ADMIN\"],\n            //     navLink: '/subscription/advertisement/view'\n            // }\n        ]\n    }\n]\n","// ** Icons Import\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n    {\n        id: 'blogs',\n        title: 'Blogs',\n        icon: <Command />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n            {\n                id: 'Blogs',\n                title: 'View Blogs',\n                icon: <Eye />,\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n                navLink: '/blogs/view'\n            }\n            // {\n            //     id: 'ViewAdvertisementSubscriptions',\n            //     title: 'View advertisement Subscriptions',\n            //     icon: <Eye />,\n            //     roleArr: [\"ADMIN\"],\n            //     navLink: '/subscription/advertisement/view'\n            // }\n        ]\n    }\n]\n","// ** Icons Import\nimport { Edit, Copy, Circle, Box, Package, AlertTriangle, RotateCw, Server, Grid } from 'react-feather'\n\nexport default [\n  {\n    id: 'formsAndTable',\n    title: 'Forms & Tables',\n    roleArr: [],\n    icon: <Edit />,\n    children: [\n      {\n        id: 'formElements',\n        roleArr: [\"ADMIN\"],\n        title: 'Form Elements',\n        icon: <Copy />,\n        children: [\n          {\n            id: 'input',\n            roleArr: [\"ADMIN\"],\n            title: 'Input',\n            icon: <Circle />,\n            navLink: '/forms/elements/input'\n          },\n          {\n            id: 'inputGroup',\n            roleArr: [\"ADMIN\"],\n            title: 'Input Groups',\n            icon: <Circle />,\n            navLink: '/forms/elements/input-group'\n          },\n          {\n            id: 'inputMask',\n            roleArr: [\"ADMIN\"],\n            title: 'Input Mask',\n            icon: <Circle />,\n            navLink: '/forms/elements/input-mask'\n          },\n          {\n            id: 'textarea',\n            roleArr: [\"ADMIN\"],\n            title: 'Textarea',\n            icon: <Circle />,\n            navLink: '/forms/elements/textarea'\n          },\n          {\n            id: 'checkbox',\n            roleArr: [\"ADMIN\"],\n            title: 'Checkbox',\n            icon: <Circle />,\n            navLink: '/forms/elements/checkbox'\n          },\n          {\n            id: 'radio',\n            roleArr: [\"ADMIN\"],\n            title: 'Radio',\n            icon: <Circle />,\n            navLink: '/forms/elements/radio'\n          },\n          {\n            id: 'switch',\n            roleArr: [\"ADMIN\"],\n            title: 'Switch',\n            icon: <Circle />,\n            navLink: '/forms/elements/switch'\n          },\n          {\n            id: 'select',\n            roleArr: [\"ADMIN\"],\n            title: 'Select',\n            icon: <Circle />,\n            navLink: '/forms/elements/select'\n          },\n          {\n            id: 'numberInput',\n            roleArr: [\"ADMIN\"],\n            title: 'Number Input',\n            icon: <Circle />,\n            navLink: '/forms/elements/number-input'\n          },\n          {\n            id: 'fileUploader',\n            roleArr: [\"ADMIN\"],\n            title: 'File Uploader',\n            icon: <Circle />,\n            navLink: '/forms/elements/file-uploader'\n          },\n          {\n            id: 'quillEditor',\n            roleArr: [\"ADMIN\"],\n            title: 'Editor',\n            icon: <Circle />,\n            navLink: '/forms/elements/editor'\n          },\n          {\n            id: 'date_&_timePicker',\n            roleArr: [\"ADMIN\"],\n            title: 'Date & Time Picker',\n            icon: <Circle />,\n            navLink: '/forms/elements/pickers'\n          }\n        ]\n      },\n      {\n        id: 'formLayouts',\n        roleArr: [\"ADMIN\"],\n        title: 'Form Layout',\n        icon: <Box />,\n        navLink: '/forms/layout/form-layout'\n      },\n      {\n        id: 'wizard',\n        roleArr: [\"ADMIN\"],\n        title: 'Form Wizard',\n        icon: <Package />,\n        navLink: '/forms/wizard'\n      },\n      {\n        id: 'formValidation',\n        roleArr: [\"ADMIN\"],\n        title: 'Form Validation',\n        icon: <AlertTriangle size={12} />,\n        navLink: '/forms/form-validation'\n      },\n      {\n        id: 'formRepeater',\n        roleArr: [\"ADMIN\"],\n        title: 'Form Repeater',\n        icon: <RotateCw />,\n        navLink: '/forms/form-repeater'\n      },\n      {\n        id: 'tablesReactstrap',\n        roleArr: [\"ADMIN\"],\n        title: 'Table',\n        icon: <Server />,\n        navLink: '/tables/reactstrap'\n      },\n      {\n        id: 'dataTable',\n        roleArr: [\"ADMIN\"],\n        title: 'DataTable',\n        icon: <Grid />,\n        children: [\n          {\n            id: 'dtBasic',\n            roleArr: [\"ADMIN\"],\n            title: 'Basic',\n            icon: <Circle />,\n            navLink: '/datatables/basic'\n          },\n          {\n            id: 'dtAdvance',\n            roleArr: [\"ADMIN\"],\n            title: 'Advanced',\n            icon: <Circle />,\n            navLink: '/datatables/advance'\n          }\n        ]\n      }\n    ]\n  }\n]\n","// ** Icons Import\nimport { ShoppingCart, Circle, List } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n  {\n    id: 'productGroup',\n    title: 'Products',\n    icon: <ShoppingCart />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\", \"APPROVERS\", ROLES_CONSTANT.SUBADMIN],\n    children: [\n      {\n        id: 'category',\n        title: 'Category',\n        icon: <List />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        navLink: '/products/category'\n      },\n      {\n        id: 'brand',\n        title: 'Brand',\n        icon: <List />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        navLink: '/products/brands'\n      },\n      {\n        id: 'product',\n        title: 'Product',\n        icon: <List />,\n        roleArr: [\"ADMIN\", \"DISTRIBUTOR\", \"APPROVERS\", ROLES_CONSTANT.SUBADMIN],\n        navLink: '/products/product-lists'\n      },\n      {\n        id: 'review',\n        title: 'Review',\n        icon: <List />,\n        roleArr: [\"ADMIN\", \"DISTRIBUTOR\", \"APPROVERS\", ROLES_CONSTANT.SUBADMIN],\n        navLink: '/products/product-reviews'\n      }\n    ]\n  }\n]\n","// ** Icons Import\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n    {\n        id: 'topup',\n        title: 'Topup',\n        icon: <Command />,\n        roleArr: [\"ADMIN\"],\n        children: [\n            {\n                id: 'Viewtopup',\n                title: 'View Topups',\n                icon: <Eye />,\n                roleArr: [\"ADMIN\"],\n                navLink: '/topup/view'\n            }\n            // {\n            //     id: 'ViewAdvertisementSubscriptions',\n            //     title: 'View advertisement Subscriptions',\n            //     icon: <Eye />,\n            //     roleArr: [\"ADMIN\"],\n            //     navLink: '/subscription/advertisement/view'\n            // }\n        ]\n    },\n    {\n        id: 'subscriptions',\n        title: 'Subscriptions',\n        icon: <Command />,\n        roleArr: [\"ADMIN\"],\n        children: [\n            {\n                id: 'ViewSubscriptions',\n                title: 'View Subscriptions',\n                icon: <Eye />,\n                roleArr: [\"ADMIN\"],\n                navLink: '/subscription/view'\n            }\n            // {\n            //     id: 'ViewAdvertisementSubscriptions',\n            //     title: 'View advertisement Subscriptions',\n            //     icon: <Eye />,\n            //     roleArr: [\"ADMIN\"],\n            //     navLink: '/subscription/advertisement/view'\n            // }\n        ]\n    }\n]\n","// ** Icons Import\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n    {\n        id: 'tickets',\n        title: 'Tickets',\n        icon: <Command />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n            {\n                id: 'view-tickets',\n                title: 'View Tickets',\n                icon: <Eye />,\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n                navLink: '/Tickets'\n            }\n        ]\n    }\n]\n","// ** Icons Import\nimport { ShoppingCart, Circle, List, Command, Plus, Eye } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\n\nexport default [\n    {\n        id: 'seos',\n        title: 'Seos',\n        icon: <Command />,\n        roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n        children: [\n            {\n                id: 'Seos',\n                title: 'View Seos',\n                icon: <Eye />,\n                roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n                navLink: '/seo/view'\n            }\n            // {\n            //     id: 'ViewAdvertisementSubscriptions',\n            //     title: 'View advertisement Subscriptions',\n            //     icon: <Eye />,\n            //     roleArr: [\"ADMIN\"],\n            //     navLink: '/subscription/advertisement/view'\n            // }\n        ]\n    }\n]\n","import { Command, Eye, Users } from 'react-feather'\nimport { ROLES_CONSTANT } from '../../utility/constant'\nimport BlogVideos from './BlogVideos'\nimport blogs from './Blogs'\nimport apps from './apps'\nimport dashboards from './dashboards'\nimport flashSales from './flashSales'\nimport formsAndTables from './forms-tables'\nimport product from './product'\nimport subscriptions from './subscriptions'\nimport tickets from './tickets'\nimport Seo from './Seo'\n\n// ** Merge & Export\n// export default [...dashboards, ...apps, ...uiElements, ...formsAndTables, ...pages, ...charts, ...others]\nexport default [...dashboards, ...apps, ...product, ...formsAndTables, ...subscriptions, ...flashSales, ...tickets, ...blogs, ...BlogVideos, ...Seo, \n{\n    id: 'dashboardas',\n    title: 'News Letter',\n    icon: <Users />,\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n    // navLink: '/news-letters'\n    children: [\n        {\n            id: 'view-News-Letter-flash-sales',\n            title: 'View News Letter',\n            icon: <Eye />,\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n            navLink: '/news-letters'\n        }\n    ]\n},\n{\n    id: 'flash-sales',\n    title: 'Reports',\n    icon: <Command />,\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n    children: [\n        {\n            id: 'view-flash-sales',\n            title: 'Flash sales',\n            icon: <Eye />,\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n            navLink: '/flash-sales/view'\n        },\n        {\n            id: 'view-Promotions',\n            title: 'Promotions',\n            icon: <Eye />,\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n            navLink: '/Promotions/view'\n        },\n        {\n            id: 'view-Subscriptions',\n            title: 'Subscriptions',\n            icon: <Eye />,\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n            navLink: '/Subscription/view-user-count'\n        },\n        {\n            id: 'view-Leads',\n            title: 'Leads',\n            icon: <Eye />,\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n            navLink: '/Leads/view'\n        },\n        {\n            id: 'view-Sales-report',\n            title: 'Sales report',\n            icon: <Eye />,\n            roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n            navLink: '/sales/report'\n        }\n    ]\n},\n{\n    id: 'dashboards',\n    title: 'User Requirements',\n    icon: <Users />,\n    roleArr: [\"ADMIN\", ROLES_CONSTANT.SUBADMIN],\n    navLink: '/user-requirements'\n}\n]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/horizontal'\n\nconst HorizontalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\n\n// ** ThemeConfig\nimport themeConfig from '@configs/themeConfig'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === 'horizontal' && !routeMeta) ||\n    (layoutStored.layout === 'horizontal' && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth && routeMeta.contentWidth === store.layout.contentWidth) {\n        dispatch(handleContentWidth(themeConfig.layout.contentWidth))\n      }\n      if (routeMeta.menuCollapsed && routeMeta.menuCollapsed === store.layout.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!store.layout.menuCollapsed))\n      }\n      if (routeMeta.menuHidden && routeMeta.menuHidden === store.layout.menuHidden) {\n        dispatch(handleMenuHidden(!store.layout.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [routeMeta ? routeMeta.className : '']: routeMeta && routeMeta.className,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': routeMeta && !routeMeta.appLayout,\n          'content-area-wrapper': routeMeta && routeMeta.appLayout,\n          'container-xxl p-0': contentWidth === 'boxed'\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: 'content-body' } : {})}>{children}</Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Navigate } from 'react-router-dom'\nimport {Suspense } from 'react'\n\n// ** Context Imports\nimport { AbilityContext } from '@src/utility/context/Can'\n\nconst PrivateRoute = ({ children, route }) => {\n  // ** Hooks & Vars\n  // const ability = useContext(AbilityContext)\n  const user = JSON.parse(localStorage.getItem('userData'))\n\n  if (route) {\n    // let action = null\n    // let resource = null\n    // let restrictedRoute = false\n\n    // if (route.meta) {\n    //   action = route.meta.action\n    //   resource = route.meta.resource\n    //   restrictedRoute = route.meta.restricted\n    // }\n    if (!user) {\n      return <Navigate to='/login' />\n    }\n    // if (user && restrictedRoute) {\n    //   return <Navigate to='/' />\n    // }\n    // if (user && restrictedRoute && user.role === 'client') {\n    //   return <Navigate to='/access-control' />\n    // }\n    // if (user && !ability.can(action || 'read', resource)) {\n    //   return <Navigate to='/misc/not-authorized' replace />\n    // }\n\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\nimport { getBrand, deleteBrand, getBrandById } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Edit } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap'\nimport { generateFilePath } from '../../../../services/url.service'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color={row.avatarColor || 'light-primary'}\n        content={row.fullName || 'John Doe'}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'Name',\n    sortable: true,\n    sortField: 'name',\n    width: \"25%\",\n    cell: row => row.name\n  },\n  {\n    name: 'Image',\n    sortable: true,\n    sortField: 'level',\n    width: \"25%\",\n    cell: row => <a href={generateFilePath(row.image)} target=\"_blank\"><img src={generateFilePath(row.image)} style={{ height: 50, width: 50 }} alt=\"\" srcset=\"\" /></a>\n  },\n  {\n    name: 'Status',\n    sortable: true,\n    sortField: 'status',\n    selector: row => row.status,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[row.status === true ? 'active' : 'inactive']} pill>\n        {row.status === true ? 'Active' : 'Inactive'}\n      </Badge>\n    )\n  },\n  {\n    name: 'Actions',\n    cell: row => (\n      <>\n\n        <Button color='primary' className='btn-sm ms-2 ' onClick={e => {\n          e.preventDefault()\n          store.dispatch(getBrandById(row._id))\n        }}>     <Edit size={14} /></Button>\n        <Button color='danger' className='ms-2 btn-sm'\n          onClick={e => {\n            e.preventDefault()\n            store.dispatch(deleteBrand(row._id))\n          }}\n        >    <Trash2 size={14} /></Button>\n      </>\n\n      // <div className='column-action'>\n      //   <UncontrolledDropdown>\n      //     <DropdownToggle tag='div' className='btn btn-sm'>\n      //       <MoreVertical size={14} className='cursor-pointer' />\n      //     </DropdownToggle>\n      //     <DropdownMenu>\n      //       <DropdownItem tag='a' href='/' className='w-100' onClick={e => { \n      //         e.preventDefault() \n      //         store.dispatch(getBrandById(row._id))\n      //         }}\n      //         >\n      //         <Archive size={14} className='me-50' />\n      //         <span className='align-middle'>Edit</span>\n      //       </DropdownItem>\n      //       <DropdownItem\n      //         tag='a'\n      //         href='/'\n      //         className='w-100'\n      //         onClick={e => {\n      //           e.preventDefault()\n      //           store.dispatch(deleteBrand(row._id))\n      //         }}\n      //       >\n      //         <Trash2 size={14} className='me-50' />\n      //         <span className='align-middle'>Delete</span>\n      //       </DropdownItem>\n      //     </DropdownMenu>\n      //   </UncontrolledDropdown>\n      // </div>\n    )\n  }\n]\n","// ** React Import\nimport { useEffect, useState } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport {\n    Button, Label, FormText, Form, Input, Modal,\n    CardBody,\n    ModalBody,\n    ModalHeader,\n    Row,\n    Col\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { addBrand, getAllData, updateBrand } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\nimport { toastError } from '../../../../utility/toastutill'\nimport FileUpload from '../../../../utility/FileUpload'\n\nconst AddModal = ({ open, toggleSidebar }) => {\n    // ** States\n    const store = useSelector(state => state.brands)\n\n    const [name, setname] = useState(\"\")\n    const [image, setimage] = useState()\n    const [status, setstatus] = useState(true)\n    const [isUpdated, setisUpdated] = useState(false)\n    const [updateObj, setupdateObj] = useState({})\n    // ** Store Vars\n    const dispatch = useDispatch()\n    const checkIsValid = () => {\n\n        if (`${name}` === '') {\n            toastError(\"Please Fill name\")\n            return false\n        }\n\n\n        return true\n    }\n\n    // ** Function to handle form submit\n    const onSubmit = () => {\n        if (checkIsValid()) {\n            toggleSidebar()\n            if (isUpdated === true) {\n                dispatch(\n                    updateBrand({\n                        name,\n                        status,\n                        image,\n                        id: updateObj._id\n                    })\n                )\n            } else {\n                dispatch(\n                    addBrand({\n                        name,\n                        status,\n                        image\n                    })\n                )\n            }\n        }\n    }\n\n    const handleSidebarClosed = () => {\n    }\n\n    useEffect(() => {\n        if (store.selectedBrand !== null) {\n            const brand = store.selectedBrand\n            setupdateObj(brand)\n            setisUpdated(true)\n            setname(brand.name)\n            setimage(brand.image)\n            setstatus(brand.status)\n        } else {\n            setupdateObj({})\n            setisUpdated(false)\n            setname(\"\")\n            setimage(\"\")\n        }\n    }, [store.selectedBrand])\n\n\n    return (\n        <>\n            <Modal\n                isOpen={open}\n                onClosed={handleSidebarClosed}\n                toggle={toggleSidebar}\n                className='modal-dialog-centered modal-lg'\n            >\n                <ModalHeader className='bg-transparent' toggle={toggleSidebar}></ModalHeader>\n                <ModalBody className='px-3 pb-3'>\n                    <div className='text-center'>\n                        <h2>{isUpdated ? \"Update\" : \"Add\"}  Brand</h2>\n                    </div>\n\n                    <Form className=\"row\">\n                        <div className='mb-1 col-md-6'>\n                            <Label className='form-label' for='fullName'>\n                                Name <span className='text-danger'>*</span>\n                            </Label>\n                            <Input className='form-control' value={name} onChange={(e) => setname(e.target.value)} />\n                        </div>\n                        <div className='mb-1 col-md-6'>\n                            <Label className='form-label'>\n                                Image\n                            </Label>\n                            <FileUpload onFileChange={(val) => setimage(val)} />\n                        </div>\n\n                        <div className=' mb-1 col-md-12'>\n                            <Label className='form-label' for='phone'>\n                                Status <span className='text-danger'>*</span>\n                            </Label>\n                            <div className='demo-inline-spacing'>\n                                <div className='form-check'>\n                                    <Input type='radio' id='ex1-active' name='ex1' checked={status === true} onChange={() => setstatus(true)} />\n                                    <Label className='form-check-label' for='ex1-active'>\n                                        Active\n                                    </Label>\n                                </div>\n                                <div className='form-check'>\n                                    <Input type='radio' name='ex1' id='ex1-inactive' checked={status === false} onChange={() => setstatus(false)} />\n                                    <Label className='form-check-label' for='ex1-inactive'>\n                                        InActive\n                                    </Label>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div className='mb-1 col-md-12'>\n                            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\n                                Submit\n                            </Button>\n                        </div>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </>\n        // <Sidebar\n        //   size='lg'\n        //   open={open}\n        //   title='New User'\n        //   headerClassName='mb-1'\n        //   contentClassName='pt-0'\n        //   toggleSidebar={toggleSidebar}\n        //   onClosed={handleSidebarClosed}\n        // >\n        //   <Form onSubmit={handleSubmit(onSubmit)}>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='fullName'>\n        //         Full Name <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='fullName'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='lastName'>\n        //         lastName <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='lastName'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='lastName' placeholder='johnDoe99' invalid={errors.lastName && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='userEmail'>\n        //         Email <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='email'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input\n        //             type='email'\n        //             id='userEmail'\n        //             placeholder='john.doe@example.com'\n        //             invalid={errors.email && true}\n        //             {...field}\n        //           />\n        //         )}\n        //       />\n        //       <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        //     </div>\n\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='phone'>\n        //         phone <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='phone'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='phone' placeholder='(397) 294-5153' invalid={errors.phone && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='company'>\n        //         Company <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='company'\n        //         control={control}\n        //         render={({ field }) => (\n        //           <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='country'>\n        //         Country <span className='text-danger'>*</span>\n        //       </Label>\n        //       <Controller\n        //         name='country'\n        //         control={control}\n        //         render={({ field }) => (\n        //           // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n        //           <Select\n        //             isClearable={false}\n        //             classNamePrefix='select'\n        //             options={countryOptions}\n        //             theme={selectThemeColors}\n        //             className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n        //             {...field}\n        //           />\n        //         )}\n        //       />\n        //     </div>\n        //     <div className='mb-1'>\n        //       <Label className='form-label' for='user-role'>\n        //         User Role\n        //       </Label>\n        //       <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n        //         <option value='subscriber'>Subscriber</option>\n        //         <option value='editor'>Editor</option>\n        //         <option value='maintainer'>Maintainer</option>\n        //         <option value='author'>Author</option>\n        //         <option value='admin'>Admin</option>\n        //       </Input>\n        //     </div>\n        //     <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n        //       <Label className='form-label' for='select-plan'>\n        //         Select Plan\n        //       </Label>\n        //       <Input type='select' id='select-plan' name='select-plan'>\n        //         <option value='basic'>Basic</option>\n        //         <option value='enterprise'>Enterprise</option>\n        //         <option value='company'>Company</option>\n        //         <option value='team'>Team</option>\n        //       </Input>\n        //     </div>\n        //     <Button type='submit' className='me-1' color='primary'>\n        //       Submit\n        //     </Button>\n        //     <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n        //       Cancel\n        //     </Button>\n        //   </Form>\n        // </Sidebar>\n    )\n}\n\nexport default AddModal\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllBrand, getBrand } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport { ROLES_CONSTANT } from '../../../../utility/constant'\nimport AddModal from './AddModal'\n\n// ** Table Header\n\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const brands = useSelector(state => state.brands)\n  const brand = useSelector(state => state.brands.brand)\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('name')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n  // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n  const [rolesOptions, setrolesOptions] = useState([])\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getBrand({\n      sort,\n      sortColumn,\n      q: searchTerm,\n      perPage: rowsPerPage,\n      page: currentPage,\n      role: currentRole.value,\n      status: currentStatus.value\n    }))\n  }, [])\n  useEffect(() => {\n    // dispatch(\n    //   getBrand({\n    //     sort,\n    //     sortColumn,\n    //     q: searchTerm,\n    //     page: currentPage,\n    //     perPage: rowsPerPage,\n    //     role: currentRole.value,\n    //     status: currentStatus.value\n    //     // currentPlan: currentPlan.value\n    //   })\n    // )\n    // ** Set Roles\n\n  }, [dispatch, sort, sortColumn, currentPage])\n\n  // ** User filter options\n  // const roleOptions = [\n  //   { value: '', label: 'Select Role' },\n  //   { value: 'admin', label: 'Admin' },\n  //   { value: 'author', label: 'Author' },\n  //   { value: 'editor', label: 'Editor' },\n  //   { value: 'maintainer', label: 'Maintainer' },\n  //   { value: 'subscriber', label: 'Subscriber' }\n  // ]\n\n  // const planOptions = [\n  //   { value: '', label: 'Select Plan' },\n  //   { value: 'basic', label: 'Basic' },\n  //   { value: 'company', label: 'Company' },\n  //   { value: 'enterprise', label: 'Enterprise' },\n  //   { value: 'team', label: 'Team' }\n  // ]\n\n  const statusOptions = [\n    { value: '', label: 'Select Status', number: 0 },\n    { value: 'active', label: 'Active', number: true },\n    { value: 'inactive', label: 'Inactive', number: false }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getBrand({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n    dispatch(\n      getBrand({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: 1,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getBrand({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(brands.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      role: currentRole.value,\n      status: currentStatus.value,\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n    console.log(brands, \"brandsdsdds\")\n    if (brands.brands.length > 0) {\n      return brands.brands\n    } else if (!brands || (brands.brands.length === 0 && isFiltered)) {\n      return []\n    } else {\n      return brands.brands.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getBrand({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage,\n        role: currentRole.value,\n        status: currentStatus.value\n      })\n    )\n  }\n\n\n  useEffect(() => {\n    if (brands.selectedBrand !== null) {\n      toggleSidebar()\n    }\n\n  }, [brands.selectedBrand])\n\n  return (\n    <Fragment>\n      {/* <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Filters</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='4'>\n              <Label for='role-select'>Role</Label>\n              <Select\n                isClearable={false}\n                value={currentRole}\n                options={rolesOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                onChange={data => {\n                  setCurrentRole(data)\n                  dispatch(\n                    getBrand({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      role: data.value,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      status: currentStatus.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n            {/* <Col className='my-md-0 my-1' md='4'>\n              <Label for='plan-select'>Plan</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={planOptions}\n                value={currentPlan}\n                onChange={data => {\n                  setCurrentPlan(data)\n                  dispatch(\n                    getBrand({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      role: currentRole.value,\n                      currentPlan: data.value,\n                      status: currentStatus.value\n                    })\n                  )\n                }}\n              />\n            </Col> \n            <Col md='4'>\n              <Label for='status-select'>Status</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={data => {\n                  setCurrentStatus(data)\n                  dispatch(\n                    getBrand({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      status: data.value,\n                      perPage: rowsPerPage,\n                      role: currentRole.value\n                    })\n                  )\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card> */}\n\n      <Card className='overflow-hidden'>\n        <div className='invoice-list-table-header w-100 px-4 ms-50 mt-2'>\n          <Row>\n            <Col xl='6' className='d-flex align-items-center p-0'>\n              <div className='d-flex align-items-center w-100'>\n                <label htmlFor='rows-per-page'>Show</label>\n                <Input\n                  className='mx-50'\n                  type='select'\n                  id='rows-per-page'\n                  value={rowsPerPage}\n                  onChange={handlePerPage}\n                  style={{ width: '5rem' }}\n                >\n                  <option value='1'>1</option>\n                  <option value='10'>10</option>\n                  <option value='25'>25</option>\n                  <option value='50'>50</option>\n                </Input>\n                <label htmlFor='rows-per-page'>Entries</label>\n              </div>\n            </Col>\n            <Col\n              xl='6'\n              className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n            >\n              <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n                <label className='mb-0' htmlFor='search-invoice'>\n                  Search:\n                </label>\n                <Input\n                  id='search-invoice'\n                  className='ms-50 w-100'\n                  type='text'\n                  value={searchTerm}\n                  onChange={e => handleFilter(e.target.value)}\n                />\n              </div>\n\n              <div className='d-flex align-items-center table-header-actions'>\n                {/* <UncontrolledDropdown className='me-1'>\n                  <DropdownToggle color='secondary' caret outline>\n                    <Share className='font-small-4 me-50' />\n                    <span className='align-middle'>Export</span>\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem className='w-100'>\n                      <Printer className='font-small-4 me-50' />\n                      <span className='align-middle'>Print</span>\n                    </DropdownItem>\n                    <DropdownItem className='w-100' onClick={() => downloadCSV(brands.brand)}>\n                      <FileText className='font-small-4 me-50' />\n                      <span className='align-middle'>CSV</span>\n                    </DropdownItem>\n                    <DropdownItem className='w-100'>\n                      <Grid className='font-small-4 me-50' />\n                      <span className='align-middle'>Excel</span>\n                    </DropdownItem>\n                    <DropdownItem className='w-100'>\n                      <File className='font-small-4 me-50' />\n                      <span className='align-middle'>PDF</span>\n                    </DropdownItem>\n                    <DropdownItem className='w-100'>\n                      <Copy className='font-small-4 me-50' />\n                      <span className='align-middle'>Copy</span>\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown> */}\n\n                <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\n                  Add New\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </div>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            subHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={columns}\n            onSort={handleSort}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n          // subHeaderComponent={\n          //   <CustomHeader\n          //     brands={brands}\n          //     searchTerm={searchTerm}\n          //     rowsPerPage={rowsPerPage}\n          //     handleFilter={handleFilter}\n          //     handlePerPage={handlePerPage}\n          //     toggleSidebar={toggleSidebar}\n          //   />\n          // }\n          />\n        </div>\n      </Card>\n\n      <AddModal open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst BrandList = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default BrandList\n","\n\n// ** Reactstrap Imports\nimport { useEffect, useState } from 'react'\nimport { ArrowUpLeft } from 'react-feather'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\n// import { addSubscription, getSubscriptionById, updateSubscription } from '../store'\nimport _ from 'lodash'\nimport { toastError, toastSuccess } from '../../../../utility/toastutill'\nimport { getAllSubscriptionbyUserId, sendMailById } from '../../../../services/UserSubscription.service'\nimport DataTable from 'react-data-table-component'\nimport ReactPaginate from 'react-paginate'\nimport moment from 'moment'\nimport { getReviewForProduct, deleteReviewById} from '../../../../services/product.service'\nexport default function Review() {\n    const { id } = useParams()\n    const [userSubscriptionsArr, setUserSubscriptionsArr] = useState([])\n    const [selectedUser, setSelectedUser] = useState({})\n    // ** States\n    const [sort, setSort] = useState('desc')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [currentPage, setCurrentPage] = useState(1)\n    const [sortColumn, setSortColumn] = useState('name')\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n    const [sidebarOpen, setSidebarOpen] = useState(false)\n    const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\n    // const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\n    const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\n    const [rolesOptions, setrolesOptions] = useState([])\n    const [editModal, setEditModal] = useState(false)\n    const [totalPages, setTotalPages] = useState(0)\n    const [startDate, setstartDate] = useState()\n    const [endDate, setEndDate] = useState()\n    const handleGetReviews = async (query) => {\n        try {\n            const { data: res } = await getReviewForProduct(query)\n            if (res.data) {\n                console.log(res, \"userSUb\")\n                setUserSubscriptionsArr(res.data)\n                setTotalPages(res.count)\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n\n    const deleteProdcutId = async (id) => {\n        try {\n            const { data: res } = await deleteReviewById(id)\n            if (res.message) {\n                toastSuccess(res.message)\n            handleGetReviews(`q=${searchTerm}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\n\n            }\n        } catch (err) {\n            toastError(err)\n        }\n    }\n\n    useEffect(() => {\n            handleGetReviews(`q=${searchTerm}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\n    }, [])\n\n    const columns = [\n      {\n        name: \"Name\",\n        width: \"250px\",\n        sortable: false,\n        selector: (row) => row.name\n      },    \n\n      {\n        name: \"Message\",\n        minWidth: \"500px\",\n        sortable: false,\n        selector: (row) => row.message\n      },\n\n      {\n        name: \"Rating\",\n        width: \"70px\",\n        sortable: false,\n        selector: (row) => row.rating\n      },\n\n      {\n        name: \"Date On\",\n        width: \"150px\",\n        sortable: false,\n        selector: (row) => moment(row.createdAt).format(\"DD-MM-YYYY\")\n      },\n\n      {\n        name: \"Action\",\n        width: \"150px\",\n        sortable: false,\n        cell: (row) => (\n          <>\n            <Button\n              type=\"button\"\n              color=\"success\"\n              className=\"btn-sm btn-success\"\n              onClick={() => deleteProdcutId(row?._id)}\n            >\n              Delete\n            </Button>\n          </>\n        )\n      }\n      // {\n      //   name: 'Billing',\n      //   minWidth: '230px',\n      //   sortable: true,\n      //   sortField: 'billing',\n      //   selector: row => row.billing,\n      //   cell: row => <span className='text-capitalize'>{row.billing}</span>\n      // },\n    ]\n\n     // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    handleGetReviews(`q=${val}&rowsPerPage=${rowsPerPage}&currentPage=${currentPage}`)\n\n    }\n    \n      const handleFilterByDate = () => {\n        handleGetReviews(\n          `startDate=${startDate}&endDate=${endDate}&rowsPerPage=${rowsPerPage}&currentPage=1`\n        )\n      }\n\n    const handlePagination = page => {\n        setCurrentPage(page.selected + 1)\n        console.log(page.selected, \"totalCount\")\n        handleGetReviews(`q=${searchTerm}&rowsPerPage=${rowsPerPage}&currentPage=${page.selected + 1}`)\n        // dispatch(\n        //   getAllUsersWithSubsciptionFn({\n        //     sort,\n        //     sortColumn,\n        //     q: searchTerm,\n        //     perPage: rowsPerPage,\n        //     page: page.selected + 1,\n        //     role: currentRole.value,\n        //     status: currentStatus.value\n        //   })\n        // )\n        // setCurrentPage(page.selected + 1)\n    }\n\n    const handlePerPage = e => {\n        const value = parseInt(e.currentTarget.value)\n        setCurrentPage(1)\n        handleGetReviews(`rowsPerPage=${value}&currentPage=${1}`)\n        setRowsPerPage(value)\n    }\n\n\n    const CustomPagination = () => {\n        const count = Number(Math.ceil(totalPages / rowsPerPage))\n\n        return (\n            <ReactPaginate\n                previousLabel={''}\n                nextLabel={''}\n                pageCount={count || 1}\n                activeClassName='active'\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n                onPageChange={page => handlePagination(page)}\n                pageClassName={'page-item'}\n                nextLinkClassName={'page-link'}\n                nextClassName={'page-item next'}\n                previousClassName={'page-item prev'}\n                previousLinkClassName={'page-link'}\n                pageLinkClassName={'page-link'}\n                containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n            />\n        )\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <Col xl=\"9\" className=\"d-flex align-items-center p-0\">\n            <div className=\"d-flex align-items-center w-100\">\n              <label htmlFor=\"rows-per-page\">Show</label>\n              <Input\n                className=\"mx-50\"\n                type=\"select\"\n                id=\"rows-per-page\"\n                value={rowsPerPage}\n                onChange={handlePerPage}\n                style={{ width: \"5rem\" }}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"10\">10</option>\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n                <option value=\"500\">500</option>\n              </Input>\n              <label htmlFor=\"rows-per-page\">Entries</label>\n            </div>\n            <div className=\"d-flex align-items-center\">\n              <label className=\"mb-0\" htmlFor=\"search-invoice\">\n                Filter\n              </label>\n              <Input\n                id=\"search-invoice\"\n                className=\"ms-50 w-100\"\n                type=\"date\"\n                value={startDate}\n                onChange={(e) => setstartDate(e.target.value)}\n              />\n              <Input\n                id=\"search-invoice\"\n                className=\"ms-50 w-100\"\n                type=\"date\"\n                value={endDate}\n                onChange={(e) => setEndDate(e.target.value)}\n              />\n            </div>\n            <Button color=\"primary\" onClick={() => handleFilterByDate()}>\n              Filter\n            </Button>\n          </Col>\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\n              Search:\n            </label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 w-100\"\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => handleFilter(e.target.value)}\n            />\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <Row>\n            <div>\n              <DataTable\n                noHeader\n                pagination\n                columns={columns}\n                paginationServer\n                paginationComponent={CustomPagination}\n                // sortIcon={<ChevronDown />}\n                data={userSubscriptionsArr}\n              />\n            </div>\n          </Row>\n        </CardBody>\n      </Card>\n    )\n}","// ** Reactstrap Imports\nimport { Link, useParams } from 'react-router-dom'\nimport { Card, CardHeader, CardTitle, CardBody, Label, Input, FormText, Row, Col, Button } from 'reactstrap'\nimport { ArrowUpLeft, Minus, Plus, Trash } from 'react-feather'\nimport { useEffect, useState } from 'react'\nimport { toastError } from '../../../utility/toastutill'\nimport { getNestedCategoriesApi } from \"../../../services/category.service\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllBrand, getBrand } from '../brand/store'\nimport FileUpload from '../../../utility/FileUpload'\nimport { addProduct, getProduct, getProductById, updateProduct } from '../store'\nimport { generateFilePath } from '../../../services/url.service'\n\nconst AddProduct = () => {\n\n  const dispatch = useDispatch()\n  const { id } = useParams()\n\n  const brandArr = useSelector(state => state.brands.brand)\n  const productRedux = useSelector(state => state.products.selectedProduct)\n\n  const [categoryArr, setcategoryArr] = useState([])\n  const [brand, setbrand] = useState(\"\")\n  const [category, setcategory] = useState(\"\")\n  const [name, setname] = useState(\"\")\n  const [thickness, setthickness] = useState(\"\")\n  const [application, setapplication] = useState(\"\")\n  const [grade, setgrade] = useState(\"\")\n  const [color, setcolor] = useState(\"\")\n  const [size, setsize] = useState(\"\")\n  const [wood, setwood] = useState(\"\")\n  const [glue, setglue] = useState(\"\")\n  const [price, setprice] = useState(\"\")\n  const [sellingprice, setsellingprice] = useState(\"\")\n  const [warranty, setwarranty] = useState(\"\")\n  const [shortDescription, setshortDescription] = useState(\"\")\n  const [longDescription, setLongDescription] = useState()\n  const [image, setimage] = useState()\n  const [status, setstatus] = useState(false)\n  const [isUpdated, setisUpdated] = useState(false)\n  const [updateObj, setupdateObj] = useState({})\n  const [imageArr, setimageArr] = useState([\n    {\n      image: \"\"\n    }\n  ])\n\n  const [mainCategoryArr, setmainCategoryArr] = useState([])\n\n  const handleFileSet = (value, index) => {\n    let tempArr = _.cloneDeep(imageArr)\n    tempArr = tempArr.map((el, i) => {\n      if (index === i) {\n        el.image = value\n      }\n      return el\n    })\n    setimageArr([...tempArr])\n  }\n  const handleNestedCategory = async () => {\n    try {\n      const { data: res } = await getNestedCategoriesApi()\n      if (res.success && res.data.length) {\n        setcategoryArr(res.data)\n      }\n\n    } catch (error) {\n      console.error(error)\n      toastError(error)\n    }\n  }\n\n  useEffect(() => {\n    if (productRedux !== null) {\n      setname(productRedux?.name)\n      setprice(productRedux?.price)\n      setsellingprice(productRedux?.sellingprice)\n      setcategory(productRedux?.categoryId)\n      setbrand(productRedux?.brand)\n      setthickness(productRedux?.specification?.thickness)\n      setapplication(productRedux?.specification?.application)\n      setgrade(productRedux?.specification?.grade)\n      setcolor(productRedux?.specification?.color)\n      setwood(productRedux?.specification?.wood)\n      setglue(productRedux?.specification?.glue)\n      setwarranty(productRedux?.specification?.warranty)\n      setshortDescription(productRedux?.shortDescription)\n      setLongDescription(productRedux?.longDescription)\n      setimage(productRedux?.mainImage)\n      setstatus(productRedux?.status)\n      setisUpdated(true)\n      setupdateObj(productRedux)\n      setimageArr(productRedux?.imageArr)\n      setmainCategoryArr(productRedux?.categoryArr)\n      setsize(productRedux?.specification?.size)\n\n    }\n  }, [productRedux])\n\n  const handleCtegoryEvent = (id) => {\n    const tempCategoryArr = []\n    categoryArr.map(el => {\n      if (el._id === id) {\n        tempCategoryArr.push({ categoryId: el._id })\n      } else {\n        if (el.subCategoryArr && el.subCategoryArr.length > 0) {\n          el.subCategoryArr.map(elx => {\n            if (elx._id === id) {\n              tempCategoryArr.push({ categoryId: el._id })\n              tempCategoryArr.push({ categoryId: elx._id })\n            }\n          }\n          )\n        }\n      }\n    }\n    )\n\n    setcategory(id)\n    setmainCategoryArr([...tempCategoryArr])\n  }\n\n\n  useEffect(() => {\n    if (id) {\n      dispatch(getProductById(id))\n    }\n  }, [id])\n  const onSubmit = () => {\n\n    if (`${name}` === '') {\n      toastError('Please Fill Name')\n      return 0\n    }\n    if (`${category}` === '') {\n      toastError('Please Fill Category')\n      return 0\n    }\n\n    if (`${application}` === '') {\n      toastError('Please Fill Application')\n      return 0\n    }\n\n    if (`${color}` === '') {\n      toastError('Please Fill Color')\n      return 0\n    }\n\n    if (`${shortDescription}` === '') {\n      toastError('Please Fill shortDescription')\n      return 0\n    }\n\n    if (`${image}` === '') {\n      toastError('Please add main imgae')\n      return 0\n    }\n    if (imageArr && imageArr.length > 1) {\n      if (imageArr.some(el => !el.image)) {\n        toastError('canot upload blank image')\n        return 0\n      }\n    }\n\n\n    if (isUpdated === true) {\n      dispatch(\n        updateProduct({\n          name,\n          categoryId: category,\n          brand,\n          price,\n          sellingprice,\n          specification: {\n            thickness,\n            application,\n            grade,\n            color,\n            wood,\n            glue,\n            warranty,\n            size\n          },\n          shortDescription,\n          longDescription,\n          status,\n          image,\n          imageArr,\n          categoryArr: mainCategoryArr,\n          id: updateObj._id\n        })\n      )\n    } else {\n      dispatch(\n        addProduct({\n          name,\n          categoryId: category,\n          brand,\n          price,\n          sellingprice,\n          specification: {\n            thickness,\n            application,\n            grade,\n            color,\n            wood,\n            glue,\n            warranty,\n            size\n          },\n          imageArr,\n          categoryArr: mainCategoryArr,\n          shortDescription,\n          longDescription,\n          status,\n          image\n        })\n      )\n    }\n  }\n  const subcategoryRender = (cateArr, dash) => {\n    dash += '- '\n    console.log(cateArr.length)\n    return (\n      cateArr && cateArr.length > 0 && cateArr.map((cat) => {\n        return (\n          <>\n            <option key={cat._id} value={cat._id}>{dash}{cat.name}</option>\n            {subcategoryRender(cat.subCategoryArr, dash)}\n          </>\n\n        )\n      })\n    )\n  }\n\n  const handleImageAdd = () => {\n    if (imageArr && imageArr.length < 3) {\n      setimageArr([...imageArr, { image: \"\" }])\n    }\n  }\n  const handleImagesRemove = (removeIndex) => {\n    if (imageArr.length > 1) {\n      setimageArr([\n        ...imageArr.filter(\n          (el, index) => index !== removeIndex\n        )\n      ])\n    }\n  }\n\n  useEffect(() => {\n    handleNestedCategory()\n    dispatch(getBrand('status=true'))\n  }, [])\n\n\n  return (\n    <Card>\n      <CardHeader>\n        <Link to=\"/products/product-lists\" className=' btn btn-sm btn-warning' color='primary'>\n          <ArrowUpLeft />Back\n        </Link>\n        <CardTitle tag='h4'>Add Product</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Name\n            </Label>\n            <Input type='text' id='basicInput' value={name} onChange={(e) => setname(e.target.value)} placeholder='Enter Product Name' />\n          </Col>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Select  Category {categoryArr.length}\n            </Label>\n            <select className='form-control' value={category} onChange={(e) => handleCtegoryEvent(e.target.value)}>\n              <option value=\"\">Please Select Category</option>\n              {categoryArr && categoryArr.length > 0 && subcategoryRender(categoryArr, '-')}\n            </select>\n          </Col>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Select  Brand\n            </Label>\n            <select className='form-control' value={brand} onChange={(e) => setbrand(e.target.value)}>\n              <option value=\"\">Please Select Brand</option>\n              {brandArr && brandArr.length > 0 && brandArr.map(el => <option value={el._id}>{el.name}</option>)}\n            </select>\n          </Col>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Price\n            </Label>\n            <Input type='text' id='basicInput' value={price} onChange={(e) => setprice(e.target.value)} placeholder='Enter Product Price' />\n          </Col>\n          <Col className='mb-1' xl='4' md='6' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Selling Price\n            </Label>\n            <Input type='text' id='basicInput' value={sellingprice} onChange={(e) => setsellingprice(e.target.value)} placeholder='Enter Product Selling Price' />\n          </Col>\n          <h4>Specification</h4>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Thickness\n            </Label>\n            <Input type='text' id='basicInput' value={thickness} onChange={(e) => setthickness(e.target.value)} placeholder='Enter Product Thickness' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Usage/Application\n            </Label>\n            <Input type='text' id='basicInput' value={application} onChange={(e) => setapplication(e.target.value)} placeholder='Enter Product Usage/Application' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Size\n            </Label>\n            <Input type='text' id='basicInput' value={size} onChange={(e) => setsize(e.target.value)} placeholder='Enter Product Size' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Grade\n            </Label>\n            <Input type='text' id='basicInput' value={grade} onChange={(e) => setgrade(e.target.value)} placeholder='Enter Product Grade' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Color\n            </Label>\n            <Input type='text' id='basicInput' value={color} onChange={(e) => setcolor(e.target.value)} placeholder='Enter Product Color' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Wood Type\n            </Label>\n            <Input type='text' id='basicInput' value={wood} onChange={(e) => setwood(e.target.value)} placeholder='Enter Product Wood Type' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Glue Used\n            </Label>\n            <Input type='text' id='basicInput' value={glue} onChange={(e) => setglue(e.target.value)} placeholder='Enter Product Glue Used' />\n          </Col>\n          <Col className='mb-1' xl='3' md='4' sm='6'>\n            <Label className='form-label' for='basicInput'>\n              Warranty\n            </Label>\n            <Input type='text' id='basicInput' value={warranty} onChange={(e) => setwarranty(e.target.value)} placeholder='Enter Product Warranty' />\n          </Col>\n          <h4>Description</h4>\n          <Col className='mb-1' xl='6' md='12' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Short Description\n            </Label>\n            <Input type='textarea' name='text' value={shortDescription} onChange={(e) => setshortDescription(e.target.value)} id='exampleText' rows='3' placeholder='Enter Your Short Ddescription' />\n          </Col>\n          <Col className='mb-1' xl='6' md='12' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Long Description\n            </Label>\n            <Input type='textarea' name='text' value={longDescription} onChange={(e) => setLongDescription(e.target.value)} id='exampleText' rows='3' placeholder='Enter Your Short Ddescription' />\n\n          </Col>\n\n          <Col className='mb-1' xl='4' md='12' sm='12'>\n            <Label className='form-label' for='basicInput'>\n              Main Image (width:100px and height:100px)\n            </Label>\n            <FileUpload onFileChange={(val) => setimage(val)} />\n          </Col>\n          <Col className='mb-1' xl='2' md='12' sm='12'>\n            {\n              image && image.includes('data:image') ? (<img src={image} width=\"100px\" height=\"80px\" />) : (<img src={generateFilePath(image)} width=\"100px\" height=\"80px\" />)\n            }\n          </Col>\n          <Col className='mb-1' xl='6' md='12' sm='12'>\n\n            <Label className='form-label' for='phone'>\n              Status <span className='text-danger'>*</span>\n            </Label>\n            <div className='demo-inline-spacing'>\n              <div className='form-check'>\n                <Input type='radio' id='ex1-active' name='ex1' checked={status === true} onChange={() => setstatus(true)} />\n                <Label className='form-check-label' for='ex1-active'>\n                  Active\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input type='radio' name='ex1' id='ex1-inactive' checked={status === false} onChange={() => setstatus(false)} />\n                <Label className='form-check-label' for='ex1-inactive'>\n                  InActive\n                </Label>\n              </div>\n            </div>\n          </Col>\n          <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Label className='form-label my-2' for='basicInput'>\n              Muptiple Image (width:121px and height:100px) <button type='button' className='btn btn-sm btn-success' onClick={() => { handleImageAdd() }}><Plus /> Add</button>\n            </Label>\n            <Row>\n              {\n                imageArr && imageArr.map((img, indez) => (\n                  <Col xl='4' md='4' sm='4'>\n                    <Row>\n                      {\n                        img.image && (\n                          <Col className='mb-1' xl='12' md='12' sm='12'>\n                            {\n                              img.image.includes('data:image') ? (<img src={img.image} width=\"100px\" height=\"80px\" />) : (<img src={generateFilePath(img.image)} width=\"100px\" height=\"80px\" />)\n                            }\n                          </Col>\n                        )\n                      }\n                      <Col className='mb-1' xl='8' md='8' sm='8'>\n                        <FileUpload onFileChange={(val) => handleFileSet(val, indez)} />\n                      </Col>\n\n                      <Col className='mb-1' xl='3' md='3' sm='3'>\n                        <button type='button' className='btn btn-sm btn-danger' onClick={() => handleImagesRemove(indez)}><Trash /> </button>\n                      </Col>\n                    </Row>\n                  </Col>\n\n                ))\n              }\n            </Row>\n          </Col>\n          <Col className='mb-1' xl='12' md='12' sm='12'>\n            <Button type='button' className='me-1' color='primary' onClick={() => { onSubmit() }} >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default AddProduct\n","import { lazy } from 'react'\nimport BrandList from '../../views/products/brand/list'\nimport Review from '../../views/products/review/list/Review'\nimport AddProduct from '../../views/products/list/AddProduct'\nconst CategoryList = lazy(() => import('../../views/products/category/list'))\nconst ProductList = lazy(() => import('../../views/products/list'))\n\n\nconst ProductRoutes = [\n  {\n    path: '/products/category',\n    element: <CategoryList />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  },\n  {\n    path: '/products/product-lists',\n    element: <ProductList />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  },\n  {\n    path: '/products/brands',\n    element: <BrandList />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  },\n  {\n    path: 'products/add-products',\n    element: <AddProduct />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  },\n  {\n    path: 'products/edit-product/:id',\n    element: <AddProduct />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  },\n  {\n    path: '/products/product-reviews',\n    element: <Review />,\n    roleArr: [\"ADMIN\", \"DISTRIBUTOR\"]\n  }\n\n]\n\nexport default ProductRoutes\n","import { lazy } from 'react'\nconst CountryList = lazy(() => import('../../views/location/Country/list'))\nconst StateList = lazy(() => import('../../views/location/State/list'))\nconst CityList = lazy(() => import('../../views/location/City/list'))\n\n                       \nconst LocationRoutes = [\n  {\n    path: 'apps/location/country',\n    element: <CountryList />,\n    roleArr:[\"ADMIN\"]\n  },\n  {\n    path: 'apps/location/state',\n    element: <StateList />,\n    roleArr:[\"ADMIN\"]\n  },\n  {\n    path: 'apps/location/city',\n    element: <CityList />,\n    roleArr:[\"ADMIN\"]\n  }\n\n]\n\nexport default LocationRoutes\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Routes Imports\nimport AppRoutes from './Apps'\nimport FormRoutes from './Forms'\nimport PagesRoutes from './Pages'\nimport TablesRoutes from './Tables'\nimport ChartsRoutes from './Charts'\nimport DashboardRoutes from './Dashboards'\nimport UiElementRoutes from './UiElements'\nimport ExtensionsRoutes from './Extensions'\nimport PageLayoutsRoutes from './PageLayouts'\nimport AuthenticationRoutes from './Authentication'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\n\n// ** Route Components\nimport PublicRoute from '@components/routes/PublicRoute'\nimport PrivateRoute from '@components/routes/PrivateRoute'\n\n// ** Utils\nimport { isObjEmpty } from '@utils'\nimport ProductRoutes from './Product'\nimport LocationRoutes from './location.js'\n\nconst getLayout = {\n  blank: <BlankLayout />,\n  vertical: <VerticalLayout />,\n  horizontal: <HorizontalLayout />\n}\n\n// ** Document title\nconst TemplateTitle = '%s - Vuexy React Admin Template'\n\n// ** Default Route\nconst DefaultRoute = '/apps/user/list'\n\n// ** Merge Routes\nconst Routes = [\n  ...AuthenticationRoutes,\n  ...DashboardRoutes,\n  ...AppRoutes,\n  ...FormRoutes,\n  ...ProductRoutes,\n  ...LocationRoutes,\n  ...PagesRoutes,\n  ...UiElementRoutes,\n  ...ExtensionsRoutes,\n  ...PageLayoutsRoutes,\n  ...TablesRoutes,\n  ...ChartsRoutes\n]\n\n// const getRouteMeta = route => {\n//   if (isObjEmpty(route.element.props)) {\n//     if (route.meta) {\n//       return { routeMeta: route.meta }\n//     } else {\n//       return {}\n//     }\n//   }\n// }\n\n// ** Return Filtered Array of Routes & Paths\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n  const LayoutRoutes = []\n  // console.log(layout, defaultLayout, Routes, \"asd\")\n  if (Routes) {\n    Routes.filter(route => {\n      const isBlank = false\n      // ** Checks if Route layout or Default layout matches current layout\n      // if (\n      //   (route.meta && route.meta.layout && route.meta.layout === layout) ||\n      //   ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\n      // ) {\n      const RouteTag = PrivateRoute\n\n      // // ** Check for public or private route\n      // if (route.meta) {\n      //   route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\n      //   RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\n      // }\n      // if (route.element) {\n      //   const Wrapper =\n      //     // eslint-disable-next-line multiline-ternary\n      //     isObjEmpty(route.element.props) && isBlank === false\n      //       ? // eslint-disable-next-line multiline-ternary\n      //         LayoutWrapper\n      //       : Fragment\n\n      //   route.element = (\n      //     <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n      //       <RouteTag route={route}>{route.element}</RouteTag>\n      //     </Wrapper>\n      //   )\n      // }\n\n      // Push route to LayoutRoutes\n      if (route.element) {\n        const Wrapper =\n          // eslint-disable-next-line multiline-ternary\n          isObjEmpty(route.element.props) && isBlank === false\n            ? // eslint-disable-next-line multiline-ternary\n            LayoutWrapper\n            : Fragment\n\n        route.element = (\n          <Wrapper >\n            <RouteTag route={route}>{route.element}</RouteTag>\n          </Wrapper>\n        )\n      }\n      LayoutRoutes.push(route)\n      // }\n      return LayoutRoutes\n    })\n  }\n  return LayoutRoutes\n}\n\nconst getRoutes = layout => {\n  const defaultLayout = layout || 'vertical'\n  const layouts = ['vertical', 'horizontal', 'blank']\n  // const layouts = ['blank']\n  // console.log(layout, \"layout\")\n  const AllRoutes = []\n\n  layouts.forEach(layoutItem => {\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\n\n    AllRoutes.push({\n      path: '/',\n      element: getLayout[defaultLayout],\n      children: LayoutRoutes\n    })\n  })\n  // console.log(AllRoutes, \"AllRoutes\")\n  return AllRoutes\n}\n\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\n","// ** Router imports\nimport { lazy } from 'react'\n\n// ** Router imports\nimport { useRoutes, Navigate } from 'react-router-dom'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\n\n// ** Hooks Imports\nimport { useLayout } from '@hooks/useLayout'\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from '../utility/Utils'\n\n// ** GetRoutes\nimport { getRoutes } from './routes'\n\n// ** Components\nconst Error = lazy(() => import('../views/pages/misc/Error'))\nconst Login = lazy(() => import('../views/pages/authentication/Login'))\nconst NotAuthorized = lazy(() => import('../views/pages/misc/NotAuthorized'))\n\nconst Router = () => {\n  // ** Hooks\n  const { layout } = useLayout()\n\n  const allRoutes = getRoutes(layout)\n  const getHomeRoute = () => {\n    const user = getUserData()\n    if (user) {\n      return getHomeRouteForLoggedInUser(user.role)\n    } else {\n      return '/login'\n    }\n  }\n\n  const routes = useRoutes([\n    {\n      path: '/',\n      index: true,\n      element: <Navigate replace to={getHomeRoute()} />\n    },\n    {\n      path: '/login',\n      element: <BlankLayout />,\n      children: [{ path: '/login', element: <Login /> }]\n    },\n    {\n      path: '/auth/not-auth',\n      element: <BlankLayout />,\n      children: [{ path: '/auth/not-auth', element: <NotAuthorized /> }]\n    },\n    {\n      path: '*',\n      element: <BlankLayout />,\n      children: [{ path: '*', element: <Error /> }]\n    },\n    ...allRoutes\n  ])\n\n  return routes\n}\n\nexport default Router\n","import React, { Suspense } from 'react'\nimport 'react-quill/dist/quill.snow.css'\n// ** Router Import\nimport Router from './router/Router'\n\nconst App = () => {\n  return (\n    <Suspense fallback={null}>\n      <Router />\n    </Suspense>\n  )\n}\n\nexport default App\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","import { DefaultRoute } from '../router/routes'\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  return DefaultRoute\n  // if (userRole === 'client') return '/access-control'\n  // return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","export const ROLES_CONSTANT = {\n  ADMIN: \"ADMIN\",\n  SUBADMIN: \"SUBADMIN\",\n  // USER: \"USER\",\n  MANUFACTURER: \"MANUFACTURER/IMPORTER\",\n  DISTRIBUTOR: \"DISTRIBUTOR\",\n  DEALER: \"DEALER\",\n  FIELDUSER: \"FIELDUSER\",\n  APPROVERS: \"APPROVERS\",\n  SALES: \"SALES\"\n\n}\n\nexport const APPROVED_STATUS = {\n  APPROVED: \"APPROVED\",\n  PENDING: \"PENDING\",\n  REJECTED: \"REJECTED\"\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n","// ** React Imports\nimport { useEffect } from 'react'\n\n// ** Store Imports\nimport { handleSkin } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setSkin = type => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== 'light') {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n","import React, { useState } from \"react\"\nimport { Button } from \"reactstrap\"\n\nfunction FileUpload({ onFileChange, acceptImage, returnOriginal, acceptOnly }) {\n  const [file, setFile] = useState(\"\")\n\n  const getBase64 = (file, cb) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = function () {\n      cb(reader.result)\n    }\n    reader.onerror = function (error) {\n      // console.log('Error: ', error)\n    }\n  }\n  const handleFileSelection = (event) => {\n    event.preventDefault()\n\n    if (event.target.files[0]) {\n      getBase64(event.target.files[0], (result) => {\n        setFile(event.target.files[0])\n        if (returnOriginal) {\n          onFileChange(event.target.files[0])\n        } else {\n          onFileChange(result)\n        }\n      })\n    }\n  }\n  return (\n    <div className=\"position-relative\">\n      {\n        acceptImage === true ? <input type=\"file\" onChange={(event) => handleFileSelection(event)} className=\"form-control\" accept=\"image/png, image/gif, image/jpeg\" /> : <input type=\"file\" onChange={(event) => handleFileSelection(event)} accept={acceptOnly ? acceptOnly : \"\"} className=\"form-control\" />\n      }\n\n    </div>\n  )\n}\n\nexport default FileUpload\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames('overflow-hidden', {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames('flex-grow-1', {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** React Imports\nimport ReactDOM from 'react-dom'\nimport { useNavigate } from 'react-router-dom'\nimport { Fragment, useEffect, useState, useRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { AlertCircle } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Hooks Imports\nimport { useOnClickOutside } from '@hooks/useOnClickOutside'\n\n// ** Styles Imports\nimport '@styles/base/bootstrap-extended/_include.scss'\nimport './autocomplete.scss'\n\nconst Autocomplete = props => {\n  // ** Refs\n  const container = useRef(null)\n  const inputElRef = useRef(null)\n  const suggestionsListRef = useRef(null)\n\n  // ** States\n  const [focused, setFocused] = useState(false)\n  const [activeSuggestion, setActiveSuggestion] = useState(0)\n  const [showSuggestions, setShowSuggestions] = useState(false)\n  const [userInput, setUserInput] = useState(props.value ? props.value : '')\n\n  // ** Vars\n  const navigate = useNavigate()\n  let filteredData = []\n\n  // ** Suggestion Item Click Event\n  const onSuggestionItemClick = (url, e) => {\n    setActiveSuggestion(0)\n    setShowSuggestions(false)\n    setUserInput(filteredData[activeSuggestion][props.filterKey])\n    if (url !== undefined && url !== null) {\n      navigate(url)\n    }\n\n    if (props.onSuggestionClick) {\n      props.onSuggestionClick(url, e)\n    }\n  }\n\n  // ** Suggestion Hover Event\n  const onSuggestionItemHover = index => {\n    setActiveSuggestion(index)\n  }\n\n  // ** Input On Change Event\n  const onChange = e => {\n    const userInput = e.currentTarget.value\n    setActiveSuggestion(0)\n    setShowSuggestions(true)\n    setUserInput(userInput)\n    if (e.target.value < 1) {\n      setShowSuggestions(false)\n    }\n  }\n\n  // ** Input Click Event\n  const onInputClick = e => {\n    e.stopPropagation()\n  }\n\n  // ** Input's Keydown Event\n  const onKeyDown = e => {\n    const filterKey = props.filterKey\n    const suggestionList = ReactDOM.findDOMNode(suggestionsListRef.current)\n\n    // ** User pressed the up arrow\n    if (e.keyCode === 38 && activeSuggestion !== 0) {\n      setActiveSuggestion(activeSuggestion - 1)\n\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion <= filteredData.length / 2) {\n        suggestionList.scrollTop = 0\n      }\n    } else if (e.keyCode === 40 && activeSuggestion < filteredData.length - 1) {\n      // ** User pressed the down arrow\n      setActiveSuggestion(activeSuggestion + 1)\n\n      if (e.target.value.length > -1 && suggestionList !== null && activeSuggestion >= filteredData.length / 2) {\n        suggestionList.scrollTop = suggestionList.scrollHeight\n      }\n    } else if (e.keyCode === 27) {\n      // ** User Pressed ESC\n      setShowSuggestions(false)\n      setUserInput('')\n    } else if (e.keyCode === 13 && showSuggestions) {\n      // ** User Pressed ENTER\n      onSuggestionItemClick(filteredData[activeSuggestion].link, e)\n      setUserInput(filteredData[activeSuggestion][filterKey])\n      setShowSuggestions(false)\n    } else {\n      return\n    }\n\n    // ** Custom Keydown Event\n    if (props.onKeyDown !== undefined && props.onKeyDown !== null) {\n      props.onKeyDown(e, userInput)\n    }\n  }\n\n  // ** Function To Render Grouped Suggestions\n  const renderGroupedSuggestion = arr => {\n    const { filterKey, customRender } = props\n\n    const renderSuggestion = (item, i) => {\n      if (!customRender) {\n        const suggestionURL = item.link !== undefined && item.link !== null ? item.link : null\n        return (\n          <li\n            className={classnames('suggestion-item', {\n              active: filteredData.indexOf(item) === activeSuggestion\n            })}\n            key={item[filterKey]}\n            onClick={e => onSuggestionItemClick(suggestionURL, e)}\n            onMouseEnter={() => {\n              onSuggestionItemHover(filteredData.indexOf(item))\n            }}\n          >\n            {item[filterKey]}\n          </li>\n        )\n      } else if (customRender) {\n        return customRender(\n          item,\n          i,\n          filteredData,\n          activeSuggestion,\n          onSuggestionItemClick,\n          onSuggestionItemHover,\n          userInput\n        )\n      } else {\n        return null\n      }\n    }\n\n    return arr.map((item, i) => {\n      return renderSuggestion(item, i)\n    })\n  }\n\n  // ** Function To Render Ungrouped Suggestions\n  const renderUngroupedSuggestions = () => {\n    const { filterKey, suggestions, customRender, suggestionLimit } = props\n\n    filteredData = []\n    const sortSingleData = suggestions\n      .filter(i => {\n        const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n          includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\n        if (startCondition) {\n          return startCondition\n        } else if (!startCondition && includeCondition) {\n          return includeCondition\n        } else {\n          return null\n        }\n      })\n      .slice(0, suggestionLimit)\n    filteredData.push(...sortSingleData)\n    if (sortSingleData.length) {\n      return sortSingleData.map((suggestion, index) => {\n        const suggestionURL = suggestion.link !== undefined && suggestion.link !== null ? suggestion.link : null\n        if (!customRender) {\n          return (\n            <li\n              className={classnames('suggestion-item', {\n                active: filteredData.indexOf(suggestion) === activeSuggestion\n              })}\n              key={suggestion[filterKey]}\n              onClick={e => onSuggestionItemClick(suggestionURL, e)}\n              onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\n            >\n              {suggestion[filterKey]}\n            </li>\n          )\n        } else if (customRender) {\n          return customRender(\n            suggestion,\n            index,\n            filteredData,\n            activeSuggestion,\n            onSuggestionItemClick,\n            onSuggestionItemHover,\n            userInput\n          )\n        } else {\n          return null\n        }\n      })\n    } else {\n      return (\n        <li className='suggestion-item no-result'>\n          <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\n        </li>\n      )\n    }\n  }\n\n  // ** Function To Render Suggestions\n  const renderSuggestions = () => {\n    const { filterKey, grouped, filterHeaderKey, suggestions } = props\n\n    // ** Checks if suggestions are grouped or not.\n    if (grouped === undefined || grouped === null || !grouped) {\n      return renderUngroupedSuggestions()\n    } else {\n      filteredData = []\n      return suggestions.map(suggestion => {\n        const sortData = suggestion.data\n          .filter(i => {\n            const startCondition = i[filterKey].toLowerCase().startsWith(userInput.toLowerCase()),\n              includeCondition = i[filterKey].toLowerCase().includes(userInput.toLowerCase())\n            if (startCondition) {\n              return startCondition\n            } else if (!startCondition && includeCondition) {\n              return includeCondition\n            } else {\n              return null\n            }\n          })\n          .slice(0, suggestion.searchLimit)\n\n        filteredData.push(...sortData)\n        return (\n          <Fragment key={suggestion[filterHeaderKey]}>\n            <li className='suggestion-item suggestion-title-wrapper'>\n              <h6 className='suggestion-title'>{suggestion[filterHeaderKey]}</h6>\n            </li>\n            {sortData.length ? (\n              renderGroupedSuggestion(sortData)\n            ) : (\n              <li className='suggestion-item no-result'>\n                <AlertCircle size={15} /> <span className='align-middle ms-50'>No Result</span>\n              </li>\n            )}\n          </Fragment>\n        )\n      })\n    }\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true)\n    }\n  }, [focused, props.defaultSuggestions])\n\n  //** ComponentDidUpdate\n  useEffect(() => {\n    const textInput = ReactDOM.findDOMNode(inputElRef.current)\n\n    // ** For searchbar focus\n    if (textInput !== null && props.autoFocus) {\n      inputElRef.current.focus()\n    }\n\n    // ** If user has passed default suggestions & focus then show default suggestions\n    if (props.defaultSuggestions && focused) {\n      setShowSuggestions(true)\n    }\n\n    // ** Function to run on user passed Clear Input\n    if (props.clearInput) {\n      props.clearInput(userInput, setUserInput)\n    }\n\n    // ** Function on Suggestions Shown\n    if (props.onSuggestionsShown && showSuggestions) {\n      props.onSuggestionsShown(userInput)\n    }\n  }, [setShowSuggestions, focused, userInput, showSuggestions, props])\n\n  // ** On External Click Close The Search & Call Passed Function\n  useOnClickOutside(container, () => {\n    setShowSuggestions(false)\n    if (props.externalClick) {\n      props.externalClick()\n    }\n  })\n\n  let suggestionsListComponent\n\n  if (showSuggestions) {\n    suggestionsListComponent = (\n      <PerfectScrollbar\n        className={classnames('suggestions-list', {\n          [props.wrapperClass]: props.wrapperClass\n        })}\n        ref={suggestionsListRef}\n        component='ul'\n        options={{ wheelPropagation: false }}\n      >\n        {renderSuggestions()}\n      </PerfectScrollbar>\n    )\n  }\n\n  return (\n    <div className='autocomplete-container' ref={container}>\n      <input\n        type='text'\n        onChange={e => {\n          onChange(e)\n          if (props.onChange) {\n            props.onChange(e)\n          }\n        }}\n        onKeyDown={e => onKeyDown(e)}\n        value={userInput}\n        className={`autocomplete-search ${props.className ? props.className : ''}`}\n        placeholder={props.placeholder}\n        onClick={onInputClick}\n        ref={inputElRef}\n        onFocus={() => setFocused(true)}\n        autoFocus={props.autoFocus}\n        onBlur={e => {\n          if (props.onBlur) props.onBlur(e)\n          setFocused(false)\n        }}\n      />\n      {suggestionsListComponent}\n    </div>\n  )\n}\n\nexport default Autocomplete\n\n// ** PropTypes\nAutocomplete.propTypes = {\n  grouped: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onKeyDown: PropTypes.func,\n  onChange: PropTypes.func,\n  clearInput: PropTypes.func,\n  placeholder: PropTypes.string,\n  externalClick: PropTypes.func,\n  defaultValue: PropTypes.string,\n  wrapperClass: PropTypes.string,\n  filterHeaderKey: PropTypes.string,\n  suggestionLimit: PropTypes.number,\n  onSuggestionsShown: PropTypes.func,\n  onSuggestionItemClick: PropTypes.func,\n  filterKey: PropTypes.string.isRequired,\n  suggestions: PropTypes.array.isRequired\n}\n","//** React Imports\nimport { useEffect } from 'react'\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(\n    () => {\n      const listener = event => {\n        // ** Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return\n        }\n\n        // ** Call passed function on click outside\n        handler(event)\n      }\n\n      document.addEventListener('mousedown', listener)\n      document.addEventListener('touchstart', listener)\n\n      return () => {\n        document.removeEventListener('mousedown', listener)\n        document.removeEventListener('touchstart', listener)\n      }\n    },\n    // ** Add ref and handler to effect dependencies\n    // ** It's worth noting that because passed in handler is a new ...\n    // ** ... function on every render that will cause this effect ...\n    // ** ... callback/cleanup to run every render. It's not a big deal ...\n    // ** ... but to optimize you can wrap handler in useCallback before ...\n    // ** ... passing it into this hook.\n    [ref, handler]\n  )\n}\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store Imports\nimport { useDispatch, useSelector } from 'react-redux'\nimport { handleLayout, handleLastLayout } from '@store/layout'\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setLayout = value => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = value => {\n    dispatch(handleLastLayout(value))\n  }\n\n  if (window) {\n    const breakpoint = 1200\n\n    useEffect(() => {\n      if (window.innerWidth < breakpoint) {\n        setLayout('vertical')\n      }\n\n      window.addEventListener('resize', () => {\n        if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\n          setLayout('vertical')\n        }\n        if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\n          setLayout(store.lastLayout)\n        }\n      })\n    }, [store.layout])\n  }\n\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\n}\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames('blank-page', {\n        'dark-layout': skin === 'dark'\n      })}\n    >\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n"],"sourceRoot":""}