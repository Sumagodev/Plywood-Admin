{"version":3,"sources":["views/apps/roles-permissions/roles/columns.js","views/apps/roles-permissions/roles/Table.js","views/apps/roles-permissions/roles/RoleCards.js","views/apps/roles-permissions/roles/index.js","@core/components/avatar-group/index.js","assets/images/illustration/faq-illustrations.svg"],"names":["renderClient","row","avatar","length","className","img","width","height","initials","content","fullName","color","avatarColor","statusObj","pending","active","inactive","columns","name","sortable","minWidth","sortField","selector","cell","to","id","onClick","store","dispatch","getUser","email","role","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","currentPlan","billing","status","pill","BootstrapCheckbox","forwardRef","props","ref","type","CustomHeader","plan","handlePlanChange","handlePerPage","rowsPerPage","handleFilter","searchTerm","xl","htmlFor","value","onChange","style","e","target","Table","useDispatch","useSelector","state","users","setPlan","useState","sort","setSort","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sortColumn","setSortColumn","useEffect","getAllData","getData","q","page","perPage","data","noHeader","subHeader","pagination","responsive","selectableRows","paginationServer","onSort","column","sortDirection","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRowsComponent","subHeaderComponent","val","parseInt","currentTarget","totalUsers","title","require","default","rolesArr","RoleCards","show","setShow","modalType","setModalType","reset","control","setError","setValue","handleSubmit","formState","errors","useForm","defaultValues","roleName","map","item","index","md","preventDefault","sm","src","illustration","alt","isOpen","onClosed","toggle","tag","onSubmit","xs","for","render","field","placeholder","invalid","placement","outline","Roles","AvatarGroup","Tag","classnames","i","ItemTag","split","join","meta","undefined"],"mappings":"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","file":"static/js/104.f7efe179.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\nimport { getUser } from '@src/views/apps/user/store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, Eye } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = row => {\n  if (row.avatar.length) {\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        content={row.fullName || 'John Doe'}\n        color={row.avatarColor || 'light-primary'}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    subscriber: {\n      class: 'text-primary',\n      icon: User\n    },\n    maintainer: {\n      class: 'text-success',\n      icon: Database\n    },\n    editor: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    author: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\n      {row.role}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'Name',\n    sortable: true,\n    minWidth: '297px',\n    sortField: 'fullName',\n    selector: row => row.fullName,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/apps/user/view/${row.id}`}\n            className='user_name text-truncate text-body'\n            onClick={() => store.dispatch(getUser(row.id))}\n          >\n            <span className='fw-bold'>{row.fullName}</span>\n          </Link>\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Role',\n    sortable: true,\n    minWidth: '172px',\n    sortField: 'role',\n    selector: row => row.role,\n    cell: row => renderRole(row)\n  },\n  {\n    name: 'Plan',\n    sortable: true,\n    minWidth: '138px',\n    sortField: 'currentPlan',\n    selector: row => row.currentPlan,\n    cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\n  },\n  {\n    name: 'Billing',\n    sortable: true,\n    minWidth: '230px',\n    sortField: 'billing',\n    selector: row => row.billing,\n    sortField: 'billing',\n    selector: row => row.billing,\n    cell: row => <span className='text-capitalize'>{row.billing}</span>\n  },\n  {\n    name: 'Status',\n    sortable: true,\n    minWidth: '138px',\n    sortField: 'status',\n    selector: row => row.status,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\n        {row.status}\n      </Badge>\n    )\n  },\n  {\n    name: 'Actions',\n    minWidth: '100px',\n    cell: row => (\n      <Link to={`/apps/user/view/${row.id}`}>\n        <Eye className='font-medium-3 text-body' />\n      </Link>\n    )\n  }\n]\n","// ** React Imports\nimport { useState, useEffect, forwardRef } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllData, getData } from '@src/views/apps/user/store'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\n\n// ** Reactstrap Imports\nimport { Card, Input, Row, Col } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef((props, ref) => (\n  <div className='form-check'>\n    <Input type='checkbox' ref={ref} {...props} />\n  </div>\n))\n\n// ** Table Header\nconst CustomHeader = ({ plan, handlePlanChange, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              type='text'\n              value={searchTerm}\n              id='search-invoice'\n              className='ms-50 w-100'\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n          <Input value={plan} type='select' style={{ width: '10rem' }} onChange={e => handlePlanChange(e.target.value)}>\n            <option value=''>Select Role</option>\n            <option value='basic'>Basic</option>\n            <option value='company'>Company</option>\n            <option value='enterprise'>Enterprise</option>\n            <option value='team'>Team</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst Table = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.users)\n\n  // ** States\n  const [plan, setPlan] = useState('')\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sortColumn, setSortColumn] = useState('id')\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        status: '',\n        sortColumn,\n        q: searchTerm,\n        currentPlan: plan,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setCurrentPage(1)\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        perPage: value,\n        currentPlan: plan,\n        page: 1\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        q: val,\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  const handlePlanChange = val => {\n    setPlan(val)\n    dispatch(\n      getData({\n        sort,\n        role: val,\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        role: '',\n        sortColumn,\n        status: '',\n        q: searchTerm,\n        currentPlan: plan,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  return (\n    <Card>\n      <div className='react-dataTable react-dataTable-selectable-rows'>\n        <DataTable\n          noHeader\n          subHeader\n          pagination\n          responsive\n          selectableRows\n          paginationServer\n          columns={columns}\n          onSort={handleSort}\n          data={dataToRender()}\n          sortIcon={<ChevronDown />}\n          paginationComponent={CustomPagination}\n          selectableRowsComponent={BootstrapCheckbox}\n          className='react-dataTable'\n          subHeaderComponent={\n            <CustomHeader\n              plan={plan}\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n              handlePlanChange={handlePlanChange}\n            />\n          }\n        />\n      </div>\n    </Card>\n  )\n}\n\nexport default Table\n","// ** React Imports\nimport { Fragment, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Label,\n  Input,\n  Table,\n  Modal,\n  Button,\n  CardBody,\n  ModalBody,\n  ModalHeader,\n  FormFeedback,\n  UncontrolledTooltip\n} from 'reactstrap'\n\n// ** Third Party Components\nimport { Copy, Info } from 'react-feather'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\n// ** FAQ Illustrations\nimport illustration from '@src/assets/images/illustration/faq-illustrations.svg'\n\n// ** Vars\nconst data = [\n  {\n    totalUsers: 4,\n    title: 'Administrator',\n    users: [\n      {\n        size: 'sm',\n        title: 'Vinnie Mostowy',\n        img: require('@src/assets/images/avatars/2.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Allen Rieske',\n        img: require('@src/assets/images/avatars/12.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Julee Rossignol',\n        img: require('@src/assets/images/avatars/6.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Kaith Dsouza',\n        img: require('@src/assets/images/avatars/11.png').default\n      }\n    ]\n  },\n  {\n    totalUsers: 7,\n    title: 'Manager',\n    users: [\n      {\n        size: 'sm',\n        title: 'Jimmy Ressula',\n        img: require('@src/assets/images/avatars/4.png').default\n      },\n      {\n        size: 'sm',\n        title: 'John Doe',\n        img: require('@src/assets/images/avatars/1.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Kristi Lawker',\n        img: require('@src/assets/images/avatars/2.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Kaith D',\n        img: require('@src/assets/images/avatars/5.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Danny Paul',\n        img: require('@src/assets/images/avatars/7.png').default\n      }\n    ]\n  },\n  {\n    totalUsers: 5,\n    title: 'Users',\n    users: [\n      {\n        size: 'sm',\n        title: 'Andrew Tye',\n        img: require('@src/assets/images/avatars/6.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Rishi Swaat',\n        img: require('@src/assets/images/avatars/9.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Rossie Kim',\n        img: require('@src/assets/images/avatars/2.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Kim Merchent',\n        img: require('@src/assets/images/avatars/10.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Sam Dsouza',\n        img: require('@src/assets/images/avatars/8.png').default\n      }\n    ]\n  },\n  {\n    totalUsers: 3,\n    title: 'Support',\n    users: [\n      {\n        size: 'sm',\n        title: 'Kim Karlos',\n        img: require('@src/assets/images/avatars/3.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Katy Turner',\n        img: require('@src/assets/images/avatars/9.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Peter Adward',\n        img: require('@src/assets/images/avatars/12.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Kaith Dsouza',\n        img: require('@src/assets/images/avatars/10.png').default\n      },\n      {\n        size: 'sm',\n        title: 'John Parker',\n        img: require('@src/assets/images/avatars/11.png').default\n      }\n    ]\n  },\n  {\n    totalUsers: 2,\n    title: 'Restricted User',\n    users: [\n      {\n        size: 'sm',\n        title: 'Kim Merchent',\n        img: require('@src/assets/images/avatars/10.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Sam Dsouza',\n        img: require('@src/assets/images/avatars/6.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Nurvi Karlos',\n        img: require('@src/assets/images/avatars/3.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Andrew Tye',\n        img: require('@src/assets/images/avatars/8.png').default\n      },\n      {\n        size: 'sm',\n        title: 'Rossie Kim',\n        img: require('@src/assets/images/avatars/9.png').default\n      }\n    ]\n  }\n]\n\nconst rolesArr = [\n  'User Management',\n  'Content Management',\n  'Disputes Management',\n  'Database Management',\n  'Financial Management',\n  'Reporting',\n  'API Control',\n  'Repository Management',\n  'Payroll'\n]\n\nconst RoleCards = () => {\n  // ** States\n  const [show, setShow] = useState(false)\n  const [modalType, setModalType] = useState('Add New')\n\n  // ** Hooks\n  const {\n    reset,\n    control,\n    setError,\n    setValue,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues: { roleName: '' } })\n\n  const onSubmit = data => {\n    if (data.roleName.length) {\n      setShow(false)\n    } else {\n      setError('roleName', {\n        type: 'manual'\n      })\n    }\n  }\n\n  const onReset = () => {\n    setShow(false)\n    reset({ roleName: '' })\n  }\n\n  const handleModalClosed = () => {\n    setModalType('Add New')\n    setValue('roleName')\n  }\n\n  return (\n    <Fragment>\n      <Row>\n        {data.map((item, index) => {\n          return (\n            <Col key={index} xl={4} md={6}>\n              <Card>\n                <CardBody>\n                  <div className='d-flex justify-content-between'>\n                    <span>{`Total ${item.totalUsers} users`}</span>\n                    <AvatarGroup data={item.users} />\n                  </div>\n                  <div className='d-flex justify-content-between align-items-end mt-1 pt-25'>\n                    <div className='role-heading'>\n                      <h4 className='fw-bolder'>{item.title}</h4>\n                      <Link\n                        to='/'\n                        className='role-edit-modal'\n                        onClick={e => {\n                          e.preventDefault()\n                          setModalType('Edit')\n                          setShow(true)\n                        }}\n                      >\n                        <small className='fw-bolder'>Edit Role</small>\n                      </Link>\n                    </div>\n                    <Link to='' className='text-body' onClick={e => e.preventDefault()}>\n                      <Copy className='font-medium-5' />\n                    </Link>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          )\n        })}\n        <Col xl={4} md={6}>\n          <Card>\n            <Row>\n              <Col sm={5}>\n                <div className='d-flex align-items-end justify-content-center h-100'>\n                  <img className='img-fluid mt-2' src={illustration} alt='Image' width={85} />\n                </div>\n              </Col>\n              <Col sm={7}>\n                <CardBody className='text-sm-end text-center ps-sm-0'>\n                  <Button\n                    color='primary'\n                    className='text-nowrap mb-1'\n                    onClick={() => {\n                      setModalType('Add New')\n                      setShow(true)\n                    }}\n                  >\n                    Add New Role\n                  </Button>\n                  <p className='mb-0'>Add a new role, if it does not exist</p>\n                </CardBody>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={show}\n        onClosed={handleModalClosed}\n        toggle={() => setShow(!show)}\n        className='modal-dialog-centered modal-lg'\n      >\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\n        <ModalBody className='px-5 pb-5'>\n          <div className='text-center mb-4'>\n            <h1>{modalType} Role</h1>\n            <p>Set role permissions</p>\n          </div>\n          <Row tag='form' onSubmit={handleSubmit(onSubmit)}>\n            <Col xs={12}>\n              <Label className='form-label' for='roleName'>\n                Role Name\n              </Label>\n              <Controller\n                name='roleName'\n                control={control}\n                render={({ field }) => (\n                  <Input {...field} id='roleName' placeholder='Enter role name' invalid={errors.roleName && true} />\n                )}\n              />\n              {errors.roleName && <FormFeedback>Please enter a valid role name</FormFeedback>}\n            </Col>\n            <Col xs={12}>\n              <h4 className='mt-2 pt-50'>Role Permissions</h4>\n              <Table className='table-flush-spacing' responsive>\n                <tbody>\n                  <tr>\n                    <td className='text-nowrap fw-bolder'>\n                      <span className='me-50'> Administrator Access</span>\n                      <Info size={14} id='info-tooltip' />\n                      <UncontrolledTooltip placement='top' target='info-tooltip'>\n                        Allows a full access to the system\n                      </UncontrolledTooltip>\n                    </td>\n                    <td>\n                      <div className='form-check'>\n                        <Input type='checkbox' id='select-all' />\n                        <Label className='form-check-label' for='select-all'>\n                          Select All\n                        </Label>\n                      </div>\n                    </td>\n                  </tr>\n                  {rolesArr.map((role, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className='text-nowrap fw-bolder'>{role}</td>\n                        <td>\n                          <div className='d-flex'>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`read-${role}`} />\n                              <Label className='form-check-label' for={`read-${role}`}>\n                                Read\n                              </Label>\n                            </div>\n                            <div className='form-check me-3 me-lg-5'>\n                              <Input type='checkbox' id={`write-${role}`} />\n                              <Label className='form-check-label' for={`write-${role}`}>\n                                Write\n                              </Label>\n                            </div>\n                            <div className='form-check'>\n                              <Input type='checkbox' id={`create-${role}`} />\n                              <Label className='form-check-label' for={`create-${role}`}>\n                                Create\n                              </Label>\n                            </div>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </Table>\n            </Col>\n            <Col className='text-center mt-2' xs={12}>\n              <Button type='submit' color='primary' className='me-1'>\n                Submit\n              </Button>\n              <Button type='reset' outline onClick={onReset}>\n                Discard\n              </Button>\n            </Col>\n          </Row>\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default RoleCards\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Roles Components\nimport Table from './Table'\nimport RoleCards from './RoleCards'\n\nconst Roles = () => {\n  return (\n    <Fragment>\n      <h3>Roles List</h3>\n      <p className='mb-2'>\n        A role provides access to predefined menus and features depending on the assigned role to an administrator that\n        can have access to what he needs.\n      </p>\n      <RoleCards />\n      <h3 className='mt-50'>Total users with their roles</h3>\n      <p className='mb-2'>Find all of your company’s administrator accounts and their associate roles.</p>\n      <div className='app-user-list'>\n        <Table />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Roles\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Custom Components Imports\nimport Avatar from '@components/avatar'\n\nconst AvatarGroup = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : 'div'\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div'\n      return (\n        <Fragment key={i}>\n          {item.title ? (\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null}\n          {!item.meta ? (\n            <Avatar\n              tag={ItemTag}\n              className={classnames('pull-up', {\n                [item.className]: item.className\n              })}\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\n              {...item}\n              title={undefined}\n              meta={undefined}\n            />\n          ) : null}\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\n        </Fragment>\n      )\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar-group', {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/faq-illustrations.f8c4ea78.svg\";"],"sourceRoot":""}