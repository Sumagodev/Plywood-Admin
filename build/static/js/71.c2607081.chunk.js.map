{"version":3,"sources":["views/apps/calendar/Calendar.js","views/apps/calendar/SidebarLeft.js","views/apps/calendar/AddEventSidebar.js","views/apps/calendar/index.js","assets/images/pages/calendar-illustration.png"],"names":["Calendar","props","calendarRef","useRef","store","isRtl","dispatch","calendarsColor","calendarApi","setCalendarApi","handleAddEventSidebar","blankEvent","toggleSidebar","selectEvent","updateEvent","useEffect","current","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","eventClassNames","event","calendarEvent","_def","extendedProps","calendar","eventClick","clickedEvent","customButtons","sidebarToggle","text","className","click","dateClick","info","ev","date","eventDrop","droppedEvent","toast","success","eventResize","resizedEvent","ref","direction","memo","filters","label","color","SidebarLeft","updateFilter","updateAllFilters","block","onClick","id","type","checked","selectedCalendars","onChange","e","target","for","map","filter","classnames","includes","src","illustration","alt","AddEventSidebar","open","addEvent","removeEvent","refetchEvents","selectedEvent","control","setError","setValue","getValues","handleSubmit","formState","errors","useForm","defaultValues","title","url","setUrl","useState","desc","setDesc","guests","setGuests","allDay","setAllDay","location","setLocation","endPicker","setEndPicker","Date","startPicker","setStartPicker","calendarLabel","setCalendarLabel","value","guestsOptions","avatar","img1","img2","img3","img4","img5","img6","handleUpdateEvent","eventToUpdate","display","undefined","description","propsToUpdate","extendedPropsToUpdate","updatedEventData","existingEvent","getEventById","index","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","handleDeleteEvent","eventId","remove","error","EventActions","isObjEmpty","outline","CloseBtn","size","isOpen","toggle","onOpened","resolveLabel","onClosed","contentClassName","modalClassName","close","tag","options","wheelPropagation","onSubmit","data","obj","handleAddEvent","name","render","field","placeholder","invalid","theme","selectThemeColors","classNamePrefix","isClearable","components","Option","required","enableTime","dateFormat","isMulti","img","rows","Business","Holiday","Personal","Family","ETC","CalendarComponent","useDispatch","useSelector","state","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","useRTL","val","fetchEvents","show"],"mappings":"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","file":"static/js/71.c2607081.chunk.js","sourcesContent":["// ** React Import\r\nimport { useEffect, useRef, memo, Fragment } from 'react'\r\n\r\n// ** Full Calendar & it's Plugins\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\n\r\n// ** Third Party Components\r\nimport toast from 'react-hot-toast'\r\nimport { Menu } from 'react-feather'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst Calendar = props => {\r\n  // ** Refs\r\n  const calendarRef = useRef(null)\r\n\r\n  // ** Props\r\n  const {\r\n    store,\r\n    isRtl,\r\n    dispatch,\r\n    calendarsColor,\r\n    calendarApi,\r\n    setCalendarApi,\r\n    handleAddEventSidebar,\r\n    blankEvent,\r\n    toggleSidebar,\r\n    selectEvent,\r\n    updateEvent\r\n  } = props\r\n\r\n  // ** UseEffect checks for CalendarAPI Update\r\n  useEffect(() => {\r\n    if (calendarApi === null) {\r\n      setCalendarApi(calendarRef.current.getApi())\r\n    }\r\n  }, [calendarApi])\r\n\r\n  // ** calendarOptions(Props)\r\n  const calendarOptions = {\r\n    events: store.events.length ? store.events : [],\r\n    plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\r\n    initialView: 'dayGridMonth',\r\n    headerToolbar: {\r\n      start: 'sidebarToggle, prev,next, title',\r\n      end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n    },\r\n    /*\r\n      Enable dragging and resizing event\r\n      ? Docs: https://fullcalendar.io/docs/editable\r\n    */\r\n    editable: true,\r\n\r\n    /*\r\n      Enable resizing event from start\r\n      ? Docs: https://fullcalendar.io/docs/eventResizableFromStart\r\n    */\r\n    eventResizableFromStart: true,\r\n\r\n    /*\r\n      Automatically scroll the scroll-containers during event drag-and-drop and date selecting\r\n      ? Docs: https://fullcalendar.io/docs/dragScroll\r\n    */\r\n    dragScroll: true,\r\n\r\n    /*\r\n      Max number of events within a given day\r\n      ? Docs: https://fullcalendar.io/docs/dayMaxEvents\r\n    */\r\n    dayMaxEvents: 2,\r\n\r\n    /*\r\n      Determines if day names and week names are clickable\r\n      ? Docs: https://fullcalendar.io/docs/navLinks\r\n    */\r\n    navLinks: true,\r\n\r\n    eventClassNames({ event: calendarEvent }) {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar]\r\n\r\n      return [\r\n        // Background Color\r\n        `bg-light-${colorName}`\r\n      ]\r\n    },\r\n\r\n    eventClick({ event: clickedEvent }) {\r\n      dispatch(selectEvent(clickedEvent))\r\n      handleAddEventSidebar()\r\n\r\n      // * Only grab required field otherwise it goes in infinity loop\r\n      // ! Always grab all fields rendered by form (even if it get `undefined`) otherwise due to Vue3/Composition API you might get: \"object is not extensible\"\r\n      // event.value = grabEventDataFromEventApi(clickedEvent)\r\n\r\n      // eslint-disable-next-line no-use-before-define\r\n      // isAddNewEventSidebarActive.value = true\r\n    },\r\n\r\n    customButtons: {\r\n      sidebarToggle: {\r\n        text: <Menu className='d-xl-none d-block' />,\r\n        click() {\r\n          toggleSidebar(true)\r\n        }\r\n      }\r\n    },\r\n\r\n    dateClick(info) {\r\n      const ev = blankEvent\r\n      ev.start = info.date\r\n      ev.end = info.date\r\n      dispatch(selectEvent(ev))\r\n      handleAddEventSidebar()\r\n    },\r\n\r\n    /*\r\n      Handle event drop (Also include dragged event)\r\n      ? Docs: https://fullcalendar.io/docs/eventDrop\r\n      ? We can use `eventDragStop` but it doesn't return updated event so we have to use `eventDrop` which returns updated event\r\n    */\r\n    eventDrop({ event: droppedEvent }) {\r\n      dispatch(updateEvent(droppedEvent))\r\n      toast.success('Event Updated')\r\n    },\r\n\r\n    /*\r\n      Handle event resize\r\n      ? Docs: https://fullcalendar.io/docs/eventResize\r\n    */\r\n    eventResize({ event: resizedEvent }) {\r\n      dispatch(updateEvent(resizedEvent))\r\n      toast.success('Event Updated')\r\n    },\r\n\r\n    ref: calendarRef,\r\n\r\n    // Get direction from app state (store)\r\n    direction: isRtl ? 'rtl' : 'ltr'\r\n  }\r\n\r\n  return (\r\n    <Card className='shadow-none border-0 mb-0 rounded-0'>\r\n      <CardBody className='pb-0'>\r\n        <FullCalendar {...calendarOptions} />{' '}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default memo(Calendar)\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Custom Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { CardBody, Button, Input, Label } from 'reactstrap'\r\n\r\n// ** illustration import\r\nimport illustration from '@src/assets/images/pages/calendar-illustration.png'\r\n\r\n// ** Filters Checkbox Array\r\nconst filters = [\r\n  { label: 'Personal', color: 'danger', className: 'form-check-danger mb-1' },\r\n  { label: 'Business', color: 'primary', className: 'form-check-primary mb-1' },\r\n  { label: 'Family', color: 'warning', className: 'form-check-warning mb-1' },\r\n  { label: 'Holiday', color: 'success', className: 'form-check-success mb-1' },\r\n  { label: 'ETC', color: 'info', className: 'form-check-info' }\r\n]\r\n\r\nconst SidebarLeft = props => {\r\n  // ** Props\r\n  const { handleAddEventSidebar, toggleSidebar, updateFilter, updateAllFilters, store, dispatch } = props\r\n\r\n  // ** Function to handle Add Event Click\r\n  const handleAddEventClick = () => {\r\n    toggleSidebar(false)\r\n    handleAddEventSidebar()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='sidebar-wrapper'>\r\n        <CardBody className='card-body d-flex justify-content-center my-sm-0 mb-3'>\r\n          <Button color='primary' block onClick={handleAddEventClick}>\r\n            <span className='align-middle'>Add Event</span>\r\n          </Button>\r\n        </CardBody>\r\n        <CardBody>\r\n          <h5 className='section-label mb-1'>\r\n            <span className='align-middle'>Filter</span>\r\n          </h5>\r\n          <div className='form-check mb-1'>\r\n            <Input\r\n              id='view-all'\r\n              type='checkbox'\r\n              label='View All'\r\n              className='select-all'\r\n              checked={store.selectedCalendars.length === filters.length}\r\n              onChange={e => dispatch(updateAllFilters(e.target.checked))}\r\n            />\r\n            <Label className='form-check-label' for='view-all'>\r\n              View All\r\n            </Label>\r\n          </div>\r\n          <div className='calendar-events-filter'>\r\n            {filters.length &&\r\n              filters.map(filter => {\r\n                return (\r\n                  <div\r\n                    key={`${filter.label}-key`}\r\n                    className={classnames('form-check', {\r\n                      [filter.className]: filter.className\r\n                    })}\r\n                  >\r\n                    <Input\r\n                      type='checkbox'\r\n                      key={filter.label}\r\n                      label={filter.label}\r\n                      className='input-filter'\r\n                      id={`${filter.label}-event`}\r\n                      checked={store.selectedCalendars.includes(filter.label)}\r\n                      onChange={() => {\r\n                        dispatch(updateFilter(filter.label))\r\n                      }}\r\n                    />\r\n                    <Label className='form-check-label' for={`${filter.label}-event`}>\r\n                      {filter.label}\r\n                    </Label>\r\n                  </div>\r\n                )\r\n              })}\r\n          </div>\r\n        </CardBody>\r\n      </div>\r\n      <div className='mt-auto'>\r\n        <img className='img-fluid' src={illustration} alt='illustration' />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SidebarLeft\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport toast from 'react-hot-toast'\r\nimport Flatpickr from 'react-flatpickr'\r\nimport Select, { components } from 'react-select' // eslint-disable-line\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Modal, ModalHeader, ModalBody, Label, Input, Form } from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { selectThemeColors, isObjEmpty } from '@utils'\r\n\r\n// ** Avatar Images\r\nimport img1 from '@src/assets/images/avatars/1-small.png'\r\nimport img2 from '@src/assets/images/avatars/3-small.png'\r\nimport img3 from '@src/assets/images/avatars/5-small.png'\r\nimport img4 from '@src/assets/images/avatars/7-small.png'\r\nimport img5 from '@src/assets/images/avatars/9-small.png'\r\nimport img6 from '@src/assets/images/avatars/11-small.png'\r\n\r\n// ** Styles Imports\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\nconst AddEventSidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    store,\r\n    dispatch,\r\n    addEvent,\r\n    calendarApi,\r\n    selectEvent,\r\n    updateEvent,\r\n    removeEvent,\r\n    refetchEvents,\r\n    calendarsColor,\r\n    handleAddEventSidebar\r\n  } = props\r\n\r\n  // ** Vars & Hooks\r\n  const selectedEvent = store.selectedEvent,\r\n    {\r\n      control,\r\n      setError,\r\n      setValue,\r\n      getValues,\r\n      handleSubmit,\r\n      formState: { errors }\r\n    } = useForm({\r\n      defaultValues: { title: '' }\r\n    })\r\n\r\n  // ** States\r\n  const [url, setUrl] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n  const [guests, setGuests] = useState({})\r\n  const [allDay, setAllDay] = useState(false)\r\n  const [location, setLocation] = useState('')\r\n  const [endPicker, setEndPicker] = useState(new Date())\r\n  const [startPicker, setStartPicker] = useState(new Date())\r\n  const [calendarLabel, setCalendarLabel] = useState([{ value: 'Business', label: 'Business', color: 'primary' }])\r\n\r\n  // ** Select Options\r\n  const options = [\r\n    { value: 'Business', label: 'Business', color: 'primary' },\r\n    { value: 'Personal', label: 'Personal', color: 'danger' },\r\n    { value: 'Family', label: 'Family', color: 'warning' },\r\n    { value: 'Holiday', label: 'Holiday', color: 'success' },\r\n    { value: 'ETC', label: 'ETC', color: 'info' }\r\n  ]\r\n\r\n  const guestsOptions = [\r\n    { value: 'Donna Frank', label: 'Donna Frank', avatar: img1 },\r\n    { value: 'Jane Foster', label: 'Jane Foster', avatar: img2 },\r\n    { value: 'Gabrielle Robertson', label: 'Gabrielle Robertson', avatar: img3 },\r\n    { value: 'Lori Spears', label: 'Lori Spears', avatar: img4 },\r\n    { value: 'Sandy Vega', label: 'Sandy Vega', avatar: img5 },\r\n    { value: 'Cheryl May', label: 'Cheryl May', avatar: img6 }\r\n  ]\r\n\r\n  // ** Custom select components\r\n  const OptionComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <span className={`bullet bullet-${data.color} bullet-sm me-50`}></span>\r\n        {data.label}\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  const GuestsComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex flex-wrap align-items-center'>\r\n          <Avatar className='my-0 me-1' size='sm' img={data.avatar} />\r\n          <div>{data.label}</div>\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** Adds New Event\r\n  const handleAddEvent = () => {\r\n    const obj = {\r\n      title: getValues('title'),\r\n      start: startPicker,\r\n      end: endPicker,\r\n      allDay,\r\n      display: 'block',\r\n      extendedProps: {\r\n        calendar: calendarLabel[0].label,\r\n        url: url.length ? url : undefined,\r\n        guests: guests.length ? guests : undefined,\r\n        location: location.length ? location : undefined,\r\n        desc: desc.length ? desc : undefined\r\n      }\r\n    }\r\n    dispatch(addEvent(obj))\r\n    refetchEvents()\r\n    handleAddEventSidebar()\r\n    toast.success('Event Added')\r\n  }\r\n\r\n  // ** Reset Input Values on Close\r\n  const handleResetInputValues = () => {\r\n    dispatch(selectEvent({}))\r\n    setValue('title', '')\r\n    setAllDay(false)\r\n    setUrl('')\r\n    setLocation('')\r\n    setDesc('')\r\n    setGuests({})\r\n    setCalendarLabel([{ value: 'Business', label: 'Business', color: 'primary' }])\r\n    setStartPicker(new Date())\r\n    setEndPicker(new Date())\r\n  }\r\n\r\n  // ** Set sidebar fields\r\n  const handleSelectedEvent = () => {\r\n    if (!isObjEmpty(selectedEvent)) {\r\n      const calendar = selectedEvent.extendedProps.calendar\r\n\r\n      const resolveLabel = () => {\r\n        if (calendar.length) {\r\n          return { label: calendar, value: calendar, color: calendarsColor[calendar] }\r\n        } else {\r\n          return { value: 'Business', label: 'Business', color: 'primary' }\r\n        }\r\n      }\r\n      setValue('title', selectedEvent.title || getValues('title'))\r\n      setAllDay(selectedEvent.allDay || allDay)\r\n      setUrl(selectedEvent.url || url)\r\n      setLocation(selectedEvent.extendedProps.location || location)\r\n      setDesc(selectedEvent.extendedProps.description || desc)\r\n      setGuests(selectedEvent.extendedProps.guests || guests)\r\n      setStartPicker(new Date(selectedEvent.start))\r\n      setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end))\r\n      setCalendarLabel([resolveLabel()])\r\n    }\r\n  }\r\n\r\n  // ** (UI) updateEventInCalendar\r\n  const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\r\n    const existingEvent = calendarApi.getEventById(updatedEventData.id)\r\n\r\n    // ** Set event properties except date related\r\n    // ? Docs: https://fullcalendar.io/docs/Event-setProp\r\n    // ** dateRelatedProps => ['start', 'end', 'allDay']\r\n    // ** eslint-disable-next-line no-plusplus\r\n    for (let index = 0; index < propsToUpdate.length; index++) {\r\n      const propName = propsToUpdate[index]\r\n      existingEvent.setProp(propName, updatedEventData[propName])\r\n    }\r\n\r\n    // ** Set date related props\r\n    // ? Docs: https://fullcalendar.io/docs/Event-setDates\r\n    existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\r\n      allDay: updatedEventData.allDay\r\n    })\r\n\r\n    // ** Set event's extendedProps\r\n    // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\r\n    // ** eslint-disable-next-line no-plusplus\r\n    for (let index = 0; index < extendedPropsToUpdate.length; index++) {\r\n      const propName = extendedPropsToUpdate[index]\r\n      existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\r\n    }\r\n  }\r\n\r\n  // ** Updates Event in Store\r\n  const handleUpdateEvent = () => {\r\n    if (getValues('title').length) {\r\n      const eventToUpdate = {\r\n        id: selectedEvent.id,\r\n        title: getValues('title'),\r\n        allDay,\r\n        start: startPicker,\r\n        end: endPicker,\r\n        url,\r\n        display: allDay === false ? 'block' : undefined,\r\n        extendedProps: {\r\n          location,\r\n          description: desc,\r\n          guests,\r\n          calendar: calendarLabel[0].label\r\n        }\r\n      }\r\n\r\n      const propsToUpdate = ['id', 'title', 'url']\r\n      const extendedPropsToUpdate = ['calendar', 'guests', 'location', 'description']\r\n      dispatch(updateEvent(eventToUpdate))\r\n      updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate)\r\n\r\n      handleAddEventSidebar()\r\n      toast.success('Event Updated')\r\n    } else {\r\n      setError('title', {\r\n        type: 'manual'\r\n      })\r\n    }\r\n  }\r\n\r\n  // ** (UI) removeEventInCalendar\r\n  const removeEventInCalendar = eventId => {\r\n    calendarApi.getEventById(eventId).remove()\r\n  }\r\n\r\n  const handleDeleteEvent = () => {\r\n    dispatch(removeEvent(selectedEvent.id))\r\n    removeEventInCalendar(selectedEvent.id)\r\n    handleAddEventSidebar()\r\n    toast.error('Event Removed')\r\n  }\r\n\r\n  // ** Event Action buttons\r\n  const EventActions = () => {\r\n    if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\r\n      return (\r\n        <Fragment>\r\n          <Button className='me-1' type='submit' color='primary'>\r\n            Add\r\n          </Button>\r\n          <Button color='secondary' type='reset' onClick={handleAddEventSidebar} outline>\r\n            Cancel\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <Button className='me-1' color='primary' onClick={handleUpdateEvent}>\r\n            Update\r\n          </Button>\r\n          <Button color='danger' onClick={handleDeleteEvent} outline>\r\n            Delete\r\n          </Button>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  // ** Close BTN\r\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleAddEventSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      className='sidebar-lg'\r\n      toggle={handleAddEventSidebar}\r\n      onOpened={handleSelectedEvent}\r\n      onClosed={handleResetInputValues}\r\n      contentClassName='p-0 overflow-hidden'\r\n      modalClassName='modal-slide-in event-sidebar'\r\n    >\r\n      <ModalHeader className='mb-1' toggle={handleAddEventSidebar} close={CloseBtn} tag='div'>\r\n        <h5 className='modal-title'>\r\n          {selectedEvent && selectedEvent.title && selectedEvent.title.length ? 'Update' : 'Add'} Event\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody className='flex-grow-1 pb-sm-0 pb-3'>\r\n          <Form\r\n            onSubmit={handleSubmit(data => {\r\n              if (data.title.length) {\r\n                if (isObjEmpty(errors)) {\r\n                  if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\r\n                    handleAddEvent()\r\n                  } else {\r\n                    handleUpdateEvent()\r\n                  }\r\n                  handleAddEventSidebar()\r\n                }\r\n              } else {\r\n                setError('title', {\r\n                  type: 'manual'\r\n                })\r\n              }\r\n            })}\r\n          >\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='title'>\r\n                Title <span className='text-danger'>*</span>\r\n              </Label>\r\n              <Controller\r\n                name='title'\r\n                control={control}\r\n                render={({ field }) => (\r\n                  <Input id='title' placeholder='Title' invalid={errors.title && true} {...field} />\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='label'>\r\n                Label\r\n              </Label>\r\n              <Select\r\n                id='label'\r\n                value={calendarLabel}\r\n                options={options}\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                isClearable={false}\r\n                onChange={data => setCalendarLabel([data])}\r\n                components={{\r\n                  Option: OptionComponent\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='startDate'>\r\n                Start Date\r\n              </Label>\r\n              <Flatpickr\r\n                required\r\n                id='startDate'\r\n                name='startDate'\r\n                className='form-control'\r\n                onChange={date => setStartPicker(date[0])}\r\n                value={startPicker}\r\n                options={{\r\n                  enableTime: allDay === false,\r\n                  dateFormat: 'Y-m-d H:i'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='endDate'>\r\n                End Date\r\n              </Label>\r\n              <Flatpickr\r\n                required\r\n                id='endDate'\r\n                // tag={Flatpickr}\r\n                name='endDate'\r\n                className='form-control'\r\n                onChange={date => setEndPicker(date[0])}\r\n                value={endPicker}\r\n                options={{\r\n                  enableTime: allDay === false,\r\n                  dateFormat: 'Y-m-d H:i'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-switch mb-1'>\r\n              <Input\r\n                id='allDay'\r\n                type='switch'\r\n                className='me-1'\r\n                checked={allDay}\r\n                name='customSwitch'\r\n                onChange={e => setAllDay(e.target.checked)}\r\n              />\r\n              <Label className='form-label' for='allDay'>\r\n                All Day\r\n              </Label>\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='eventURL'>\r\n                Event URL\r\n              </Label>\r\n              <Input\r\n                type='url'\r\n                id='eventURL'\r\n                value={url}\r\n                onChange={e => setUrl(e.target.value)}\r\n                placeholder='https://www.google.com'\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='guests'>\r\n                Guests\r\n              </Label>\r\n              <Select\r\n                isMulti\r\n                id='guests'\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                isClearable={false}\r\n                options={guestsOptions}\r\n                theme={selectThemeColors}\r\n                value={guests.length ? [...guests] : null}\r\n                onChange={data => setGuests([...data])}\r\n                components={{\r\n                  Option: GuestsComponent\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='location'>\r\n                Location\r\n              </Label>\r\n              <Input id='location' value={location} onChange={e => setLocation(e.target.value)} placeholder='Office' />\r\n            </div>\r\n\r\n            <div className='mb-1'>\r\n              <Label className='form-label' for='description'>\r\n                Description\r\n              </Label>\r\n              <Input\r\n                type='textarea'\r\n                name='text'\r\n                id='description'\r\n                rows='3'\r\n                value={desc}\r\n                onChange={e => setDesc(e.target.value)}\r\n                placeholder='Description'\r\n              />\r\n            </div>\r\n            <div className='d-flex mb-1'>\r\n              <EventActions />\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddEventSidebar\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Calendar App Component Imports\r\nimport Calendar from './Calendar'\r\nimport SidebarLeft from './SidebarLeft'\r\nimport AddEventSidebar from './AddEventSidebar'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchEvents, selectEvent, updateEvent, updateFilter, updateAllFilters, addEvent, removeEvent } from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-calendar.scss'\r\n\r\n// ** CalendarColors\r\nconst calendarsColor = {\r\n  Business: 'primary',\r\n  Holiday: 'success',\r\n  Personal: 'danger',\r\n  Family: 'warning',\r\n  ETC: 'info'\r\n}\r\n\r\nconst CalendarComponent = () => {\r\n  // ** Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.calendar)\r\n\r\n  // ** states\r\n  const [calendarApi, setCalendarApi] = useState(null)\r\n  const [addSidebarOpen, setAddSidebarOpen] = useState(false)\r\n  const [leftSidebarOpen, setLeftSidebarOpen] = useState(false)\r\n\r\n  // ** Hooks\r\n  const [isRtl] = useRTL()\r\n\r\n  // ** AddEventSidebar Toggle Function\r\n  const handleAddEventSidebar = () => setAddSidebarOpen(!addSidebarOpen)\r\n\r\n  // ** LeftSidebar Toggle Function\r\n  const toggleSidebar = val => setLeftSidebarOpen(val)\r\n\r\n  // ** Blank Event Object\r\n  const blankEvent = {\r\n    title: '',\r\n    start: '',\r\n    end: '',\r\n    allDay: false,\r\n    url: '',\r\n    extendedProps: {\r\n      calendar: '',\r\n      guests: [],\r\n      location: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  // ** refetchEvents\r\n  const refetchEvents = () => {\r\n    if (calendarApi !== null) {\r\n      calendarApi.refetchEvents()\r\n    }\r\n  }\r\n\r\n  // ** Fetch Events On Mount\r\n  useEffect(() => {\r\n    dispatch(fetchEvents(store.selectedCalendars))\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='app-calendar overflow-hidden border'>\r\n        <Row className='g-0'>\r\n          <Col\r\n            id='app-calendar-sidebar'\r\n            className={classnames('col app-calendar-sidebar flex-grow-0 overflow-hidden d-flex flex-column', {\r\n              show: leftSidebarOpen\r\n            })}\r\n          >\r\n            <SidebarLeft\r\n              store={store}\r\n              dispatch={dispatch}\r\n              updateFilter={updateFilter}\r\n              toggleSidebar={toggleSidebar}\r\n              updateAllFilters={updateAllFilters}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <Col className='position-relative'>\r\n            <Calendar\r\n              isRtl={isRtl}\r\n              store={store}\r\n              dispatch={dispatch}\r\n              blankEvent={blankEvent}\r\n              calendarApi={calendarApi}\r\n              selectEvent={selectEvent}\r\n              updateEvent={updateEvent}\r\n              toggleSidebar={toggleSidebar}\r\n              calendarsColor={calendarsColor}\r\n              setCalendarApi={setCalendarApi}\r\n              handleAddEventSidebar={handleAddEventSidebar}\r\n            />\r\n          </Col>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: leftSidebarOpen === true\r\n            })}\r\n            onClick={() => toggleSidebar(false)}\r\n          ></div>\r\n        </Row>\r\n      </div>\r\n      <AddEventSidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        addEvent={addEvent}\r\n        open={addSidebarOpen}\r\n        selectEvent={selectEvent}\r\n        updateEvent={updateEvent}\r\n        removeEvent={removeEvent}\r\n        calendarApi={calendarApi}\r\n        refetchEvents={refetchEvents}\r\n        calendarsColor={calendarsColor}\r\n        handleAddEventSidebar={handleAddEventSidebar}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\n","export default __webpack_public_path__ + \"static/media/calendar-illustration.42be42ce.png\";"],"sourceRoot":""}