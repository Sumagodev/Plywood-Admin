{"version":3,"sources":["@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","views/pages/authentication/Register.js","@core/components/input-password-toggle/index.js"],"names":["loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","constructor","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","config","accessToken","getToken","headers","Authorization","error","Promise","reject","response","originalRequest","status","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","push","localStorage","getItem","getRefreshToken","value","setItem","login","args","post","register","jwt","defaultValues","email","terms","username","password","Register","ability","useContext","AbilityContext","skin","useSkin","navigate","useNavigate","dispatch","useDispatch","control","setError","handleSubmit","formState","errors","useForm","illustration","source","require","default","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","action","onSubmit","tempData","Object","values","every","field","length","useJwt","res","property","type","message","user","update","handleLogin","catch","err","console","log","key","for","name","render","autoFocus","placeholder","invalid","checked","href","block","color","size","InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","useState","classnames","renderIcon","defaultProps"],"mappings":"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","file":"static/js/98.a0e3db38.chunk.js","sourcesContent":["// ** Auth Endpoints\nexport default {\n  loginEndpoint: '/jwt/login',\n  registerEndpoint: '/jwt/register',\n  refreshEndpoint: '/jwt/refresh-token',\n  logoutEndpoint: '/jwt/logout',\n\n  // ** This will be prefixed in authorization header with token\n  // ? e.g. Authorization: Bearer <token>\n  tokenType: 'Bearer',\n\n  // ** Value of this property will be used as key to store JWT token in storage\n  storageTokenKeyName: 'accessToken',\n  storageRefreshTokenKeyName: 'refreshToken'\n}\n","import axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // ** jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // ** For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // ** For Refreshing Token\n  subscribers = []\n\n  constructor(jwtOverrideConfig) {\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // ** Request Interceptor\n    axios.interceptors.request.use(\n      config => {\n        // ** Get token from localStorage\n        const accessToken = this.getToken()\n\n        // ** If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // ** eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error)\n    )\n\n    // ** Add request/response interceptor\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        // ** const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // ** if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // ** Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // ** Make sure to assign accessToken according to your response.\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\n              // ** Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axios(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return axios.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken()\n    })\n  }\n}\n","// ** Core JWT Import\nimport useJwt from '@src/@core/auth/jwt/useJwt'\n\nconst { jwt } = useJwt({})\n\nexport default jwt\n","// ** JWT Service Import\nimport JwtService from './jwtService'\n\n// ** Export Service as useJwt\nexport default function useJwt(jwtOverrideConfig) {\n  const jwt = new JwtService(jwtOverrideConfig)\n\n  return {\n    jwt\n  }\n}\n","// ** React Imports\nimport { useContext } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\nimport useJwt from '@src/auth/jwt/useJwt'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogin } from '@store/authentication'\n\n// ** Third Party Components\nimport { useForm, Controller } from 'react-hook-form'\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\n\n// ** Context\nimport { AbilityContext } from '@src/utility/context/Can'\n\n// ** Custom Components\nimport InputPasswordToggle from '@components/input-password-toggle'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardTitle, CardText, Label, Button, Form, Input, FormFeedback } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/pages/page-authentication.scss'\n\nconst defaultValues = {\n  email: '',\n  terms: false,\n  username: '',\n  password: ''\n}\n\nconst Register = () => {\n  // ** Hooks\n  const ability = useContext(AbilityContext)\n  const { skin } = useSkin()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const {\n    control,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  const illustration = skin === 'dark' ? 'register-v2-dark.svg' : 'register-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const onSubmit = data => {\n    const tempData = { ...data }\n    delete tempData.terms\n    if (Object.values(tempData).every(field => field.length > 0) && data.terms === true) {\n      const { username, email, password } = data\n      useJwt\n        .register({ username, email, password })\n        .then(res => {\n          if (res.data.error) {\n            for (const property in res.data.error) {\n              if (res.data.error[property] !== null) {\n                setError(property, {\n                  type: 'manual',\n                  message: res.data.error[property]\n                })\n              }\n            }\n          } else {\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\n            ability.update(res.data.user.ability)\n            dispatch(handleLogin(data))\n            navigate('/')\n          }\n        })\n        .catch(err => console.log(err))\n    } else {\n      for (const key in data) {\n        if (data[key].length === 0) {\n          setError(key, {\n            type: 'manual',\n            message: `Please enter a valid ${key}`\n          })\n        }\n        if (key === 'terms' && data.terms === false) {\n          setError('terms', {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-cover'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ms-1'>Vuexy</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login Cover' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='fw-bold mb-1'>\n              Adventure starts here 🚀\n            </CardTitle>\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\n\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <Controller\n                  id='username'\n                  name='username'\n                  control={control}\n                  render={({ field }) => (\n                    <Input autoFocus placeholder='johndoe' invalid={errors.username && true} {...field} />\n                  )}\n                />\n                {errors.username ? <FormFeedback>{errors.username.message}</FormFeedback> : null}\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <Controller\n                  id='email'\n                  name='email'\n                  control={control}\n                  render={({ field }) => (\n                    <Input type='email' placeholder='john@example.com' invalid={errors.email && true} {...field} />\n                  )}\n                />\n                {errors.email ? <FormFeedback>{errors.email.message}</FormFeedback> : null}\n              </div>\n              <div className='mb-1'>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <Controller\n                  id='password'\n                  name='password'\n                  control={control}\n                  render={({ field }) => (\n                    <InputPasswordToggle className='input-group-merge' invalid={errors.password && true} {...field} />\n                  )}\n                />\n              </div>\n              <div className='form-check mb-1'>\n                <Controller\n                  name='terms'\n                  control={control}\n                  render={({ field }) => (\n                    <Input {...field} id='terms' type='checkbox' checked={field.value} invalid={errors.terms && true} />\n                  )}\n                />\n                <Label className='form-check-label' for='terms'>\n                  I agree to\n                  <a className='ms-25' href='/' onClick={e => e.preventDefault()}>\n                    privacy policy & terms\n                  </a>\n                </Label>\n              </div>\n              <Button type='submit' block color='primary'>\n                Sign up\n              </Button>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='me-25'>Already have an account?</span>\n              <Link to='/login'>\n                <span>Sign in instead</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button color='facebook'>\n                <Facebook size={14} />\n              </Button>\n              <Button color='twitter'>\n                <Twitter size={14} />\n              </Button>\n              <Button color='google'>\n                <Mail size={14} />\n              </Button>\n              <Button className='me-0' color='github'>\n                <GitHub size={14} />\n              </Button>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Register\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}