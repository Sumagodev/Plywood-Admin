{"version":3,"sources":["views/pages/knowledge-base/KnowledgeBaseCategory.js","@core/components/breadcrumbs/index.js","assets/images/banner/banner.png","views/pages/knowledge-base/KnowledgeBaseHeader.js"],"names":["KnowledgeBaseCategory","data","setData","useState","filteredData","setFilteredData","searchTerm","setSearchTerm","useEffect","axios","get","then","res","params","useParams","Content","item","IconTag","Icon","icon","className","md","sm","size","classnames","iconColor","title","questions","length","map","listItem","tag","Link","to","category","slug","question","id","handleFilter","e","value","target","knowledgeBaseSearchQueryLower","toLowerCase","arr","filter","includes","queObj","BreadCrumbs","props","index","Wrapper","link","Fragment","isLastItem","active","color","end","FaqFilter","style","backgroundImage","require","default","onSubmit","preventDefault","onChange","placeholder"],"mappings":"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","file":"static/js/68.a0f52779.chunk.js","sourcesContent":["// ** React Imports\nimport { Link, useParams } from 'react-router-dom'\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport * as Icon from 'react-feather'\nimport classnames from 'classnames'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport KnowledgeBaseHeader from './KnowledgeBaseHeader'\n\n// ** Reactstrap Imports\nimport { Row, Col, Card, CardBody, ListGroup, ListGroupItem } from 'reactstrap'\n\n// ** Styles\nimport '@styles/base/pages/page-knowledge-base.scss'\n\nconst KnowledgeBaseCategory = () => {\n  // ** States\n  const [data, setData] = useState(null),\n    [filteredData, setFilteredData] = useState([]),\n    [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    axios.get('/faq/data/category').then(res => setData(res.data))\n  }, [])\n\n  const params = useParams()\n\n  const Content = ({ item }) => {\n    const IconTag = Icon[item.icon]\n    return (\n      <Col className='kb-search-content' md='4' sm='6'>\n        <Card>\n          <CardBody>\n            <h6 className='kb-title'>\n              <IconTag\n                size={20}\n                className={classnames('me-50', {\n                  [item.iconColor]: item.iconColor\n                })}\n              />\n              <span>\n                {item.title} {`(${item.questions.length})`}\n              </span>\n            </h6>\n            <ListGroup className='list-group-circle mt-2'>\n              {item.questions.map(listItem => (\n                <ListGroupItem\n                  tag={Link}\n                  to={`/pages/knowledge-base/${params.category}/${listItem.slug}`}\n                  className='text-body'\n                  key={listItem.id}\n                >\n                  {listItem.question}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </CardBody>\n        </Card>\n      </Col>\n    )\n  }\n\n  const renderContent = () => {\n    const dataToMap = searchTerm.length ? filteredData : data\n\n    return dataToMap.map(item => <Content key={item.id} item={item} />)\n  }\n\n  const handleFilter = e => {\n    const value = e.target.value,\n      knowledgeBaseSearchQueryLower = e.target.value.toLowerCase()\n\n    setSearchTerm(e.target.value)\n\n    let arr = []\n\n    if (value.length) {\n      arr = data.filter(item => {\n        return (\n          item.title.toLowerCase().includes(knowledgeBaseSearchQueryLower) ||\n          item.questions.filter(queObj => queObj.question.toLowerCase().includes(knowledgeBaseSearchQueryLower)).length\n        )\n      })\n    }\n\n    setFilteredData([...arr])\n  }\n\n  return (\n    <Fragment>\n      <Breadcrumbs\n        title='Knowledge Base'\n        data={[{ title: 'Pages' }, { title: 'Knowledge Base' }, { title: 'Category' }]}\n      />\n      <KnowledgeBaseHeader searchTerm={searchTerm} setSearchTerm={setSearchTerm} handleFilter={handleFilter} />\n      {data !== null ? (\n        <div id='knowledge-base-category'>\n          <Row className='kb-search-content-info match-height'>{renderContent()}</Row>\n        </div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nexport default KnowledgeBaseCategory\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","export default __webpack_public_path__ + \"static/media/banner.06ea9907.png\";","// ** Icons Imports\nimport { Search } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Form, Input, InputGroup, InputGroupText } from 'reactstrap'\n\nconst FaqFilter = ({ searchTerm, setSearchTerm, handleFilter }) => {\n  const onChange = e => {\n    if (handleFilter) {\n      handleFilter(e)\n    } else {\n      setSearchTerm(e.target.value)\n    }\n  }\n\n  return (\n    <div id='knowledge-base-search'>\n      <Card\n        className='knowledge-base-bg'\n        style={{\n          backgroundImage: `url(${require('@src/assets/images/banner/banner.png').default})`\n        }}\n      >\n        <CardBody className='text-center'>\n          <h2 className='text-primary'>Dedicated Source Used on Website</h2>\n          <CardText className='mb-2'>\n            Popular searches: <span className='fw-bolder'>Sales automation, Email marketing</span>\n          </CardText>\n          <Form className='kb-search-input' onSubmit={e => e.preventDefault()}>\n            <InputGroup className='input-group-merge'>\n              <InputGroupText>\n                <Search size={14} />\n              </InputGroupText>\n              <Input value={searchTerm} onChange={e => onChange(e)} placeholder='Ask a question...' />\n            </InputGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nexport default FaqFilter\n"],"sourceRoot":""}