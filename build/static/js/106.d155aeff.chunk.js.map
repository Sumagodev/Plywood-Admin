{"version":3,"sources":["views/components/alerts/AlertIcon.js","views/components/alerts/AlertTitle.js","views/components/alerts/AlertColors.js","views/components/alerts/AlertExample.js","views/components/alerts/DefaultAlert.js","views/components/alerts/AlertDismissable.js","views/components/alerts/AlertUncontrolled.js","views/components/alerts/AlertSourceCode.js","views/components/alerts/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["AlertIcon","className","color","size","AlertTitle","href","onClick","e","preventDefault","AlertColors","AlertExample","visible","setVisible","useState","inputTerm","setInputTerm","htmlFor","placeholder","value","onChange","target","length","isNaN","handleInput","isOpen","DefaultAlert","AlertDismissable","toggle","AlertUncontrolled","defaultAlert","alertTitle","alertColors","alertDismissable","alertUncontrolled","alertIcon","alertExample","Alerts","useEffect","Prism","highlightAll","title","data","sm","code","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","active","classnames","end","CardSnippet","children","noBody","iconCode","setIsOpen","IconCode","CardBody"],"mappings":"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","file":"static/js/106.d155aeff.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Star } from 'react-feather'\r\n\r\nconst AlertIcon = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary'>\r\n        <div className='alert-body d-flex align-items-center'>\r\n          <Star size={15} />\r\n          <span className='ms-50'>\r\n            Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertIcon\r\n","// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertTitle = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Lorem ipsum dolor sit amet</h4>\r\n        <div className='alert-body'>\r\n          Lorem ipsum dolor sit amet{' '}\r\n          <a className='alert-link' href='/' onClick={e => e.preventDefault()}>\r\n            consectetur\r\n          </a>{' '}\r\n          adipisicing elit. Ducimus, laborum!.\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertTitle\r\n","// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertColors = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary'>\r\n        <h4 className='alert-heading'>Primary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='secondary'>\r\n        <h4 className='alert-heading'>Secondary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='success'>\r\n        <h4 className='alert-heading'>Success</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='danger'>\r\n        <h4 className='alert-heading'>Danger</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Warning</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='info'>\r\n        <h4 className='alert-heading'>Info</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='dark'>\r\n        <h4 className='alert-heading'>Dark</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertColors\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Icons Imports\r\nimport { AlertCircle } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert, Label, Input } from 'reactstrap'\r\n\r\nconst AlertExample = () => {\r\n  // ** States\r\n  const [visible, setVisible] = useState(true)\r\n  const [inputTerm, setInputTerm] = useState('')\r\n\r\n  const handleInput = e => {\r\n    setInputTerm(e.target.value)\r\n\r\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\r\n      setVisible(true)\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <div className='mb-2'>\r\n        <Label className='form-label' htmlFor='numbers'>\r\n          Enter numbers only\r\n        </Label>\r\n        <Input className='w-25 h-25 ps-1' placeholder='0123456789' value={inputTerm} onChange={e => handleInput(e)} />\r\n      </div>\r\n      <Alert color='danger' isOpen={visible}>\r\n        <div className='alert-body'>\r\n          <AlertCircle size={15} />{' '}\r\n          <span className='ms-1'>\r\n            The value is <strong>invalid</strong> you can only enter numbers\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertExample\r\n","// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst DefaultAlert = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Good Morning!</span>\r\n          <span> Start your day with some alerts.</span>\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default DefaultAlert\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertDismissable = () => {\r\n  // ** State\r\n  const [visible, setVisible] = useState(true)\r\n\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <Alert color='primary' isOpen={visible} toggle={() => setVisible(false)}>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertDismissable\r\n","// ** Reactstrap Imports\r\nimport { UncontrolledAlert } from 'reactstrap'\r\n\r\nconst AlertUncontrolled = () => {\r\n  return (\r\n    <div className='demo-spacing-0'>\r\n      <UncontrolledAlert color='primary'>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </UncontrolledAlert>\r\n    </div>\r\n  )\r\n}\r\nexport default AlertUncontrolled\r\n","export const defaultAlert = (\r\n  <pre className='language-jsx'>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst DefaultAlert = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <span className='fw-bold'>Good Morning!</span>\r\n          <span> Start your day with some alerts.</span>\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DefaultAlert\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertTitle = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertTitle = () => {\r\n  return (\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Lorem ipsum dolor sit amet</h4>\r\n        <div className='alert-body'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus, laborum!.</div>\r\n      </Alert>\r\n  )\r\n}\r\nexport default AlertTitle\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertColors = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertColors = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='primary'>\r\n        <h4 className='alert-heading'>Primary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='secondary'>\r\n        <h4 className='alert-heading'>Secondary</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='success'>\r\n        <h4 className='alert-heading'>Success</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='danger'>\r\n        <h4 className='alert-heading'>Danger</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='warning'>\r\n        <h4 className='alert-heading'>Warning</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='info'>\r\n        <h4 className='alert-heading'>Info</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n      <Alert color='dark'>\r\n        <h4 className='alert-heading'>Dark</h4>\r\n        <div className='alert-body'>\r\n          Tootsie roll lollipop lollipop icing. Wafer cookie danish macaroon. Liquorice fruitcake apple pie I love\r\n          cupcake cupcake.\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertDismissable = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport { Alert } from 'reactstrap'\r\n\r\nconst AlertDismissable = () => {\r\n  const [visible, setVisible] = useState(true)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='info' isOpen={visible} toggle={() => setVisible(false)}>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertDismissable\r\n    `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertUncontrolled = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { UncontrolledAlert } from 'reactstrap'\r\n\r\nconst AlertUncontrolled = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <UncontrolledAlert color='danger'>\r\n        <div className='alert-body'>\r\n          Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n        </div>\r\n      </UncontrolledAlert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertUncontrolled\r\n      `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertIcon = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Alert } from 'reactstrap'\r\nimport { Star } from 'react-feather'\r\n\r\nconst AlertIcon = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Alert color='primary'>\r\n        <div className='alert-body'>\r\n          <Star size={15} />\r\n          <span className='ms-1'>\r\n            Chupa chups topping bonbon. Jelly-o toffee I love. Sweet I love wafer I love wafer.\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertIcon\r\n        `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const alertExample = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport { Alert,  Label, Input } from 'reactstrap'\r\nimport { AlertCircle } from 'react-feather'\r\n\r\nconst AlertExample = () => {\r\n  const [inputTerm, setInputTerm] = useState('')\r\n  const [visible, setVisible] = useState('')\r\n\r\n  const handleInput = e => {\r\n    setInputTerm(e.target.value)\r\n\r\n    if (e.target.value.length > 0 && isNaN(e.target.value)) {\r\n      setVisible(true)\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='mb-2'>\r\n        <Label className='form-label' htmlFor='numbers'>Enter numbers only</Label>\r\n        <Input\r\n          className='w-25 h-25 ps-1'\r\n          placeholder='0123456789'\r\n          value={inputTerm}\r\n          onChange={e => handleInput(e)}\r\n        />\r\n      </div>\r\n      <Alert color='danger' isOpen={visible}>\r\n        <div className='alert-body'>\r\n          <AlertCircle size={15} />{' '}\r\n          <span className='ms-1'>\r\n            the value is <strong>invalid</strong> you can only enter numbers\r\n          </span>\r\n        </div>\r\n      </Alert>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default AlertExample\r\n        `}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport AlertIcon from './AlertIcon'\r\nimport AlertTitle from './AlertTitle'\r\nimport AlertColors from './AlertColors'\r\nimport AlertExample from './AlertExample'\r\nimport DefaultAlert from './DefaultAlert'\r\nimport AlertDismissable from './AlertDismissable'\r\nimport AlertUncontrolled from './AlertUncontrolled'\r\n\r\n// ** Source Code\r\nimport {\r\n  alertIcon,\r\n  alertTitle,\r\n  alertColors,\r\n  defaultAlert,\r\n  alertExample,\r\n  alertDismissable,\r\n  alertUncontrolled\r\n} from './AlertSourceCode'\r\n\r\nconst Alerts = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs title='Alerts' data={[{ title: 'Components' }, { title: 'Alerts' }]} />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Default' code={defaultAlert}>\r\n            <CardText>\r\n              Alerts are available for any length of text, as well as an optional dismiss button. Use <code>Alert</code>{' '}\r\n              Component & <code>color</code> prop for alert with all theme colors.\r\n            </CardText>\r\n            <DefaultAlert />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Title' code={alertTitle}>\r\n            <CardText>\r\n              Add a title to the alert with the <code>.alert-heading</code>\r\n            </CardText>\r\n            <AlertTitle />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Colors' code={alertColors}>\r\n            <CardText>\r\n              Use <code>color</code> prop to for alert with all theme colors.\r\n            </CardText>\r\n            <AlertColors />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Dismissable Alert' code={alertDismissable}>\r\n            <CardText>\r\n              Using <code>isOpen</code> and <code>toggle</code> you can create a dismissable alert.\r\n            </CardText>\r\n            <AlertDismissable />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Uncontrolled Alert' code={alertUncontrolled}>\r\n            <CardText>\r\n              For the most basic use-case an uncontrolled component can provide the functionality wanted without the\r\n              need to manage/control the state of the component. UncontrolledAlert does not require isOpen nor toggle\r\n              props to work.\r\n            </CardText>\r\n            <AlertUncontrolled />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icon' code={alertIcon}>\r\n            <AlertIcon />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Example' code={alertExample}>\r\n            <CardText>An example would be to have an input and when a condition is met, show the alert.</CardText>\r\n            <AlertExample />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Alerts\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}