{"version":3,"sources":["views/apps/roles-permissions/permissions/columns.js","views/apps/roles-permissions/permissions/Table.js","views/apps/roles-permissions/permissions/index.js"],"names":["colors","support","user","manager","administrator","columns","name","sortable","minWidth","cell","selector","row","assignedTo","map","assignee","index","isLastBadge","length","to","className","classnames","pill","color","replace","createdDate","sortFunction","rowA","rowB","Date","CustomHeader","role","setShow","searchTerm","rowsPerPage","handlePerPage","handleFilter","handleAssignedToChange","xs","lg","htmlFor","type","id","value","onChange","style","width","e","target","onClick","Table","dispatch","useDispatch","store","useSelector","state","permissions","reset","control","setError","setValue","handleSubmit","formState","errors","useForm","defaultValues","permissionName","show","useState","setAssignedTo","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","useEffect","getData","q","page","perPage","data","onSubmit","selected","updatePermission","addPermission","updatedColumns","size","handleEditClick","selectPermission","deletePermission","handleDiscard","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","isOpen","onClosed","toggle","tag","Form","for","render","field","placeholder","invalid","outline","sm","Permissions"],"mappings":"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","file":"static/js/165.b0cde2f5.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\n// ** Vars\nconst colors = {\n  support: 'light-info',\n  user: 'light-success',\n  manager: 'light-warning',\n  administrator: 'light-primary',\n  'restricted-user': 'light-danger'\n}\n\nexport const columns = [\n  {\n    name: 'Name',\n    sortable: true,\n    minWidth: '350px',\n    cell: ({ name }) => name,\n    selector: row => row.name\n  },\n  {\n    sortable: true,\n    minWidth: '350px',\n    name: 'Assigned To',\n    cell: ({ assignedTo }) => {\n      if (assignedTo) {\n        return assignedTo.map((assignee, index) => {\n          const isLastBadge = assignedTo[assignedTo.length - 1] === index\n          return (\n            <Link key={`${assignee}-${index}`} to='/apps/user/list' className={classnames({ 'me-50': !isLastBadge })}>\n              <Badge pill color={colors[assignee]} className='text-capitalize'>\n                {assignee.replace('-', ' ')}\n              </Badge>\n            </Link>\n          )\n        })\n      } else {\n        return null\n      }\n    }\n  },\n  {\n    sortable: true,\n    minWidth: '350px',\n    name: 'Created Date',\n    selector: row => row.createdDate,\n    cell: ({ createdDate }) => createdDate,\n    sortFunction: (rowA, rowB) => {\n      return new Date(rowB.createdDate) - new Date(rowA.createdDate)\n    }\n  }\n]\n","// ** React Imports\nimport { useEffect, useState, Fragment } from 'react'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Reactstrap Imports\nimport { Alert, Row, Col, Label, Form, Input, Button, Modal, ModalHeader, ModalBody, FormFeedback } from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getData, addPermission, deletePermission, selectPermission, updatePermission } from '../store'\n\n// ** Third party Components\nimport classnames from 'classnames'\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { useForm, Controller } from 'react-hook-form'\nimport { ChevronDown, Edit, Trash } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nconst CustomHeader = ({\n  role,\n  setShow,\n  searchTerm,\n  rowsPerPage,\n  handlePerPage,\n  handleFilter,\n  handleAssignedToChange\n}) => {\n  return (\n    <Row className='text-nowrap w-100 my-75 g-0 permission-header'>\n      <Col xs={12} lg={4} className='d-flex align-items-center'>\n        <div className='d-flex align-items-center justify-content-center justify-content-lg-start'>\n          <label htmlFor='rows-per-page'>Show</label>\n          <Input\n            className='mx-50'\n            type='select'\n            id='rows-per-page'\n            value={rowsPerPage}\n            onChange={handlePerPage}\n            style={{ width: '5rem' }}\n          >\n            <option value='10'>10</option>\n            <option value='25'>25</option>\n            <option value='50'>50</option>\n          </Input>\n          <label htmlFor='rows-per-page'>Entries</label>\n        </div>\n      </Col>\n      <Col xs={12} lg={8}>\n        <div className='d-flex align-items-center justify-content-lg-end justify-content-start flex-md-nowrap flex-wrap mt-lg-0 mt-1'>\n          <div className='d-flex align-items-center me-1'>\n            <label className='mb-0' htmlFor='search-permission'>\n              Search:\n            </label>\n            <Input\n              type='text'\n              value={searchTerm}\n              id='search-permission'\n              className='ms-50 w-100'\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n          <div className='mt-50 width-200 me-1 mt-sm-0 mt-1'>\n            <Input type='select' name='select' value={role} onChange={e => handleAssignedToChange(e.target.value)}>\n              <option value=''>Select Role</option>\n              <option value='administrator'>Administrator</option>\n              <option value='manager'>Manager</option>\n              <option value='user'>User</option>\n              <option value='support'>Support</option>\n              <option value='restricted-user'>Restricted User</option>\n            </Input>\n          </div>\n          <Button className='add-permission mt-sm-0 mt-1' color='primary' onClick={() => setShow(true)}>\n            Add Permission\n          </Button>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nconst Table = () => {\n  // ** Store Vars & Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.permissions)\n  const {\n    reset,\n    control,\n    setError,\n    setValue,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues: { permissionName: '' } })\n\n  // ** States\n  const [show, setShow] = useState(false)\n  const [assignedTo, setAssignedTo] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(\n      getData({\n        assignedTo,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }, [dispatch, store.data.length])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        assignedTo,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        assignedTo,\n        q: searchTerm,\n        perPage: value,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        q: val,\n        assignedTo,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Function to filter Roles\n  const handleAssignedToChange = val => {\n    setAssignedTo(val)\n    dispatch(\n      getData({\n        q: searchTerm,\n        assignedTo: val,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store.data.length > 0) {\n      return store.data\n    } else if (store.data.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store.allData.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleEditClick = data => {\n    dispatch(selectPermission(data))\n    setValue('permissionName', data.name)\n    setShow(true)\n  }\n\n  const handleModalClosed = () => {\n    dispatch(selectPermission(null))\n    setValue('permissionName', '')\n  }\n\n  const onSubmit = data => {\n    if (data.permissionName.length) {\n      if (store.selected !== null) {\n        dispatch(updatePermission({ name: data.permissionName, id: store.selected.id }))\n      } else {\n        dispatch(addPermission({ name: data.permissionName }))\n      }\n      setShow(false)\n    } else {\n      setError('permissionName', {\n        type: 'manual'\n      })\n    }\n  }\n\n  const updatedColumns = [\n    ...columns,\n    {\n      name: 'Actions',\n      cell: row => {\n        return (\n          <div className='d-flex align-items-center permissions-actions'>\n            <Button size='sm' color='transparent' className='btn btn-icon' onClick={() => handleEditClick(row)}>\n              <Edit className='font-medium-2' />\n            </Button>\n            <Button\n              size='sm'\n              color='transparent'\n              className='btn btn-icon'\n              onClick={() => dispatch(deletePermission(row.id))}\n            >\n              <Trash className='font-medium-2' />\n            </Button>\n          </div>\n        )\n      }\n    }\n  ]\n\n  const handleDiscard = () => {\n    reset()\n    setShow(false)\n  }\n\n  const renderModalSubtitle = () => {\n    if (store.selected !== null) {\n      return 'Edit permission as per your requirements.'\n    } else {\n      return 'Permissions you may use and assign to your users.'\n    }\n  }\n\n  const renderForm = () => {\n    if (store.selected === null) {\n      return (\n        <Row tag={Form} onSubmit={handleSubmit(onSubmit)}>\n          <Col xs={12}>\n            <Label className='form-label' for='permission-name'>\n              Permission Name\n            </Label>\n            <Controller\n              control={control}\n              id='permissionName'\n              name='permissionName'\n              render={({ field }) => (\n                <Input placeholder='Permission Name' invalid={errors.permissionName && true} {...field} />\n              )}\n            />\n            {errors && errors.permissionName && <FormFeedback>Please enter a valid Permission Name</FormFeedback>}\n          </Col>\n          <Col xs={12} className='mt-75'>\n            <div className='form-check'>\n              <Input type='checkbox' id='core-perm-checkbox' />\n              <Label className='form-check-label' for='core-perm-checkbox'>\n                Set as core permission\n              </Label>\n            </div>\n          </Col>\n          <Col xs={12} className='text-center mt-2'>\n            <Button className='me-1' color='primary'>\n              Create Permission\n            </Button>\n            <Button outline type='reset' onClick={handleDiscard}>\n              Discard\n            </Button>\n          </Col>\n        </Row>\n      )\n    } else {\n      return (\n        <Fragment>\n          <Alert color='warning'>\n            <h6 className='alert-heading'>Warning!</h6>\n            <div className='alert-body'>\n              By editing the permission name, you might break the system permissions functionality. Please ensure you're\n              absolutely certain before proceeding.\n            </div>\n          </Alert>\n          <Row tag={Form} onSubmit={handleSubmit(onSubmit)}>\n            <Col xs={12} sm={9}>\n              <Label className='form-label' for='permission-name'>\n                Permission Name\n              </Label>\n              <Controller\n                control={control}\n                id='permissionName'\n                name='permissionName'\n                render={({ field }) => (\n                  <Input placeholder='Permission Name' invalid={errors.permissionName && true} {...field} />\n                )}\n              />\n              {errors && errors.permissionName && <FormFeedback>Please enter a valid Permission Name</FormFeedback>}\n            </Col>\n            <Col xs={12} sm={3} className='p-sm-0'>\n              <Button className='mt-2' color='primary'>\n                Update\n              </Button>\n            </Col>\n            <Col xs={12} className='mt-75'>\n              <div className='form-check'>\n                <Input type='checkbox' id='core-perm-checkbox' />\n\n                <Label className='form-check-label' for='core-perm-checkbox'>\n                  Set as core permission\n                </Label>\n              </div>\n            </Col>\n          </Row>\n        </Fragment>\n      )\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='react-dataTable'>\n        <DataTable\n          noHeader\n          pagination\n          subHeader\n          responsive\n          paginationServer\n          columns={updatedColumns}\n          sortIcon={<ChevronDown />}\n          className='react-dataTable'\n          paginationComponent={CustomPagination}\n          data={dataToRender()}\n          subHeaderComponent={\n            <CustomHeader\n              setShow={setShow}\n              assignedTo={assignedTo}\n              searchTerm={searchTerm}\n              rowsPerPage={rowsPerPage}\n              handleFilter={handleFilter}\n              handlePerPage={handlePerPage}\n              handleAssignedToChange={handleAssignedToChange}\n            />\n          }\n        />\n      </div>\n      <Modal isOpen={show} onClosed={handleModalClosed} toggle={() => setShow(!show)} className='modal-dialog-centered'>\n        <ModalHeader className='bg-transparent' toggle={() => setShow(!show)}></ModalHeader>\n        <ModalBody\n          className={classnames({\n            'p-3 pt-0': store.selected !== null,\n            'px-sm-5 pb-5': store.selected === null\n          })}\n        >\n          <div className='text-center mb-2'>\n            <h1 className='mb-1'>{store.selected !== null ? 'Edit' : 'Add New'} Permission</h1>\n            <p>{renderModalSubtitle()}</p>\n          </div>\n\n          {renderForm()}\n        </ModalBody>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Table\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Card } from 'reactstrap'\n\n// ** Table Import\nimport Table from './Table'\n\nconst Permissions = () => {\n  return (\n    <Fragment>\n      <h3>Permissions List</h3>\n      <p>Each category (Basic, Professional, and Business) includes the four predefined roles shown below.</p>\n      <Card>\n        <div className='card-datatable app-user-list table-responsive'>\n          <Table />\n        </div>\n      </Card>\n    </Fragment>\n  )\n}\n\nexport default Permissions\n"],"sourceRoot":""}