{"version":3,"sources":["assets/images/svg/transparent.svg","views/components/toasts/ToastTranslucent.js","views/components/toasts/ToastHeaderIcons.js","views/components/toasts/ToastSourceCode.js","views/components/toasts/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["close","type","className","ToastTranslucent","md","sm","style","background","transparentBg","logo","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","opacity","points","ToastHeaderIcons","icon","size","color","toastTranslucent","toastHeaderIcons","Toasts","useEffect","Prism","highlightAll","title","data","code","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","useState","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/124.eeda1d24.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/transparent.60cb3acd.svg\";","// ** Reactstrap Imports\nimport { Toast, ToastBody, ToastHeader, Row, Col } from 'reactstrap'\n\n// ** Images\nimport transparentBg from '@src/assets/images/svg/transparent.svg'\n\nconst close = <button type='button' className='ms-1 btn-close'></button>\n\nconst ToastTranslucent = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-primary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a primary background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-secondary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a secondary background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-success my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a success background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-danger my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a danger background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-warning my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a warning background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-info my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on an info background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-dark my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on an dark background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div\n          className='p-3 my-2 rounded'\n          style={{\n            background: `url(${transparentBg})`\n          }}\n        >\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>This is a toast on a transparent background — check it out!</ToastBody>\n          </Toast>\n        </div>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastTranslucent\n","// ** Reactstrap Imports\nimport { Toast, ToastBody, ToastHeader, Spinner, Row, Col } from 'reactstrap'\n\nconst logo = (\n  <svg viewBox='0 0 139 95' version='1.1' height='14'>\n    <defs>\n      <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n        <stop stopColor='#000000' offset='0%'></stop>\n        <stop stopColor='#FFFFFF' offset='100%'></stop>\n      </linearGradient>\n      <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n        <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n        <stop stopColor='#FFFFFF' offset='100%'></stop>\n      </linearGradient>\n    </defs>\n    <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n      <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n        <g id='Group' transform='translate(400.000000, 178.000000)'>\n          <path\n            d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n            id='Path'\n            className='text-primary'\n            style={{ fill: 'currentColor' }}\n          ></path>\n          <path\n            d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n            id='Path'\n            fill='url(#linearGradient-1)'\n            opacity='0.2'\n          ></path>\n          <polygon\n            id='Path-2'\n            fill='#000000'\n            opacity='0.049999997'\n            points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n          ></polygon>\n          <polygon\n            id='Path-2'\n            fill='#000000'\n            opacity='0.099999994'\n            points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n          ></polygon>\n          <polygon\n            id='Path-3'\n            fill='url(#linearGradient-2)'\n            opacity='0.099999994'\n            points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n          ></polygon>\n        </g>\n      </g>\n    </g>\n  </svg>\n)\n\nconst close = <button type='button' className='ms-1 btn-close'></button>\n\nconst ToastHeaderIcons = () => {\n  return (\n    <Row className='demo-vertical-spacing'>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='primary'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a primary icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='success'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a success icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='info'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a info icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='danger'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a danger icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='warning'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a warning icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='dark'>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a dark icon — check it out!</ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon={<Spinner size='sm' color='primary' />}>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a spinner — check it out!</ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon={logo}>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a logo — check it out!</ToastBody>\n        </Toast>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastHeaderIcons\n","export const toastTranslucent = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Toast, ToastBody, ToastHeader, Row, Col } from 'reactstrap'\nimport transparentBg from '@src/assets/images/svg/transparent.svg'\n\nconst close = (\n  <button type='button' className='ms-1 btn-close'>\n    <span>×</span>\n  </button>\n)\n\nconst ToastTranslucent = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-primary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a primary background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-secondary my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a secondary background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-success my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a success background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-danger my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a danger background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-warning my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a warning background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-info my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on an info background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div className='p-3 bg-dark my-2 rounded'>\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on an dark background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <div\n          className='p-3 my-2 rounded'\n          style={{\n            background: \"url(transparentBg)\"\n          }}\n        >\n          <Toast>\n            <ToastHeader close={close}>Vuexy</ToastHeader>\n            <ToastBody>\n              This is a toast on a transparent background — check it out!\n            </ToastBody>\n          </Toast>\n        </div>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastTranslucent\n`}\n    </code>\n  </pre>\n)\n\nexport const toastHeaderIcons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Toast, ToastBody, ToastHeader, Spinner, Row, Col } from 'reactstrap'\nimport logo from '@src/assets/images/logo/logo.png'\n\nconst close = (\n  <button type='button' className='ms-1 btn-close'>\n    <span>×</span>\n  </button>\n)\n\n\nconst ToastHeaderIcons = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='primary'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a primary icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='success'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a success icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='info'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a info icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='danger'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a danger icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='warning'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a warning icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon='dark'>Vuexy</ToastHeader>\n          <ToastBody>\n            This is a toast with a dark icon — check it out!\n          </ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n          <ToastHeader close={close} icon={<Spinner size='sm' color='primary' />}>\n            Vuexy\n          </ToastHeader>\n          <ToastBody>This is a toast with a spinner — check it out!</ToastBody>\n        </Toast>\n      </Col>\n\n      <Col md='6' sm='12'>\n        <Toast>\n        <ToastHeader close={close} icon={logo}>Vuexy</ToastHeader>\n          <ToastBody>This is a toast with a logo — check it out!</ToastBody>\n        </Toast>\n      </Col>\n    </Row>\n  )\n}\nexport default ToastHeaderIcons\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport ToastTranslucent from './ToastTranslucent'\nimport ToastHeaderIcons from './ToastHeaderIcons'\n\n// ** Source Code\nimport { toastHeaderIcons, toastTranslucent } from './ToastSourceCode'\n\nconst Toasts = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Toasts' data={[{ title: 'Components' }, { title: 'Toasts' }]} />\n      <Row className='match-height'>\n        <Col sm='12'>\n          <Card title='Toast Translucent' code={toastTranslucent}>\n            <CardText>\n              Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers\n              that support the backdrop-filter CSS property, we’ll also attempt to blur the elements under a toast.\n            </CardText>\n            <ToastTranslucent />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Icons' code={toastHeaderIcons}>\n            <CardText>\n              Use <code>icon</code> attribute with <code>ToastHeader</code> tag to add an icon.\n            </CardText>\n            <ToastHeaderIcons />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Toasts\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}