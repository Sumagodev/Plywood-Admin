{"version":3,"sources":["views/ui-elements/page-layouts/LayoutEmpty.js","@core/components/breadcrumbs/index.js"],"names":["LayoutEmpty","title","data","color","className","href","target","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","size","end"],"mappings":"qJAAA,4CAgCeA,UAvBK,IAEhB,eAAC,WAAQ,WACP,cAAC,IAAW,CAACC,MAAM,eAAeC,KAAM,CAAC,CAAED,MAAO,WAAa,CAAEA,MAAO,mBACxE,cAAC,IAAK,CAACE,MAAM,UAAS,SACpB,sBAAKC,UAAU,aAAY,UACzB,sBAAMA,UAAU,UAAS,SAAC,WAC1B,iCAAM,6FACuF,IAC3F,mBACEC,KAAK,8GACLC,OAAO,SAAQ,SAChB,+BAEI,IAAI,8B,mCCvBrB,kGAuFeC,IApEKC,IAElB,MAAM,KAAEN,EAAI,MAAED,GAAUO,EAmBxB,OACE,sBAAKJ,UAAU,qBAAoB,UACjC,qBAAKA,UAAU,2CAA0C,SACvD,qBAAKA,UAAU,sBAAqB,SAClC,sBAAKA,UAAU,SAAQ,UACpBH,EAAQ,oBAAIG,UAAU,wCAAuC,SAAEH,IAAc,GAC9E,qBAAKG,UAAU,6DAA4D,SACzE,eAAC,IAAU,WACT,cAAC,IAAc,CAACK,IAAI,KAAI,SACtB,cAAC,IAAI,CAACC,GAAG,IAAG,SAAC,WAzBpBR,EAAKS,KAAI,CAACC,EAAMC,KACrB,MAAMC,EAAUF,EAAKG,KAAOC,IAAOC,WAC7BC,EAAahB,EAAKiB,OAAS,IAAMN,EACvC,OACE,cAAC,IAAc,CACbJ,IAAI,KAEJW,QAASF,EACTd,UAAWiB,IAAW,CAAE,gBAAiBH,IAAc,SAEvD,cAACJ,EAAO,IAAMF,EAAKG,KAAO,CAAEL,GAAIE,EAAKG,MAAS,CAAC,EAAC,SAAIH,EAAKX,SAJpDY,EAKU,gBAsBnB,qBAAKT,UAAU,qEAAoE,SACjF,qBAAKA,UAAU,4BAA2B,SACxC,eAAC,KAA0B,WACzB,cAAC,IAAc,CAACD,MAAM,UAAUC,UAAU,qCAAoC,SAC5E,cAAC,IAAI,CAACkB,KAAM,OAEd,eAAC,IAAY,CAACb,IAAI,KAAKc,KAAG,YACxB,eAAC,IAAY,CAACd,IAAKO,IAAMN,GAAG,aAAY,UACtC,cAAC,IAAW,CAACN,UAAU,OAAOkB,KAAM,KACpC,sBAAMlB,UAAU,eAAc,SAAC,YAEjC,eAAC,IAAY,CAACK,IAAKO,IAAMN,GAAG,aAAY,UACtC,cAAC,IAAa,CAACN,UAAU,OAAOkB,KAAM,KACtC,sBAAMlB,UAAU,eAAc,SAAC,YAEjC,eAAC,IAAY,CAACK,IAAKO,IAAMN,GAAG,cAAa,UACvC,cAAC,IAAI,CAACN,UAAU,OAAOkB,KAAM,KAC7B,sBAAMlB,UAAU,eAAc,SAAC,aAEjC,eAAC,IAAY,CAACK,IAAKO,IAAMN,GAAG,iBAAgB,UAC1C,cAAC,IAAQ,CAACN,UAAU,OAAOkB,KAAM,KACjC,sBAAMlB,UAAU,eAAc,SAAC,4BAMrC,C","file":"static/js/155.ac3a72ea.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Reactstrap Imports\nimport { Alert } from 'reactstrap'\n\nconst LayoutEmpty = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Layout Empty' data={[{ title: 'Layouts' }, { title: 'Layout Empty' }]} />\n      <Alert color='primary'>\n        <div className='alert-body'>\n          <span className='fw-bold'>Info: </span>\n          <span>\n            This layout can be useful for getting started with empty content section. Please check the{' '}\n            <a\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\n              target='_blank'\n            >\n              Layout empty documentation\n            </a>{' '}\n            for more details.\n          </span>\n        </div>\n      </Alert>\n    </Fragment>\n  )\n}\n\nexport default LayoutEmpty\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}