{"version":3,"sources":["@core/components/widgets/stats/StatsWithLineChart.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/RevenueGenerated.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/breadcrumbs/index.js","@core/components/widgets/stats/StatsWithAreaChart.js","@core/components/widgets/stats/TinyChartStats.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/OrdersReceived.js","views/ui-elements/cards/statistics/SubscribersGained.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js"],"names":["StatsWithLineChart","icon","color","stats","statTitle","series","options","type","height","rest","className","defaultProps","lineChartOptions","Newsletter","warning","data","setData","useState","useEffect","axios","get","then","res","chart","id","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","size","SiteTraffic","ActiveUsers","success","QuarterlySales","danger","StatsWithAreaChart","analyticsData","sales","RevenueGenerated","kFormatter","revenue","StatsVertical","StatisticsCards","context","useContext","ThemeColors","title","lg","xs","OrdersBarChart","main","ProfitLineChart","info","sm","StatsCard","cols","md","xl","StatsHorizontal","SubscribersGained","QuaterlySales","OrdersReceived","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","areaChartOptions","TinyChartStats","orders","subscribers","subtitle","colMargin","Object","keys","margin","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize"],"mappings":"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","file":"static/js/49.230708e5.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='fw-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Custom Components\nimport StatsCard from './StatsCard'\nimport Newsletter from './Newsletter'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport RevenueGenerated from './RevenueGenerated'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SubscribersGained from './SubscribersGained'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport {\n  Eye,\n  Cpu,\n  Heart,\n  Award,\n  Truck,\n  Server,\n  Activity,\n  ShoppingBag,\n  AlertOctagon,\n  MessageSquare\n} from 'react-feather'\n\nconst StatisticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Statistics Cards' data={[{ title: 'Cards' }, { title: 'Statistics Cards' }]} />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  color: 'primary',\n  options: areaChartOptions\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Package } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Users } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst StatsCard = ({ cols }) => {\n  const data = [\n    {\n      title: '230k',\n      subtitle: 'Sales',\n      color: 'light-primary',\n      icon: <TrendingUp size={24} />\n    },\n    {\n      title: '8.549k',\n      subtitle: 'Customers',\n      color: 'light-info',\n      icon: <User size={24} />\n    },\n    {\n      title: '1.423k',\n      subtitle: 'Products',\n      color: 'light-danger',\n      icon: <Box size={24} />\n    },\n    {\n      title: '$9745',\n      subtitle: 'Revenue',\n      color: 'light-success',\n      icon: <DollarSign size={24} />\n    }\n  ]\n\n  const renderData = () => {\n    return data.map((item, index) => {\n      const colMargin = Object.keys(cols)\n      const margin = index === 2 ? 'sm' : colMargin[0]\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n"],"sourceRoot":""}