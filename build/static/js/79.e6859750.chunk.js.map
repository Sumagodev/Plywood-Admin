{"version":3,"sources":["views/apps/email/MailCard.js","views/apps/email/MailDetails.js","views/apps/email/ComposePopup.js","views/apps/email/Mails.js","views/apps/email/Sidebar.js","views/apps/email/index.js"],"names":["MailCard","props","mail","dispatch","selectMail","labelColors","updateMails","selectedMails","handleMailClick","handleMailReadUpdate","formatDateToMonthShort","onClick","id","className","classnames","isRead","img","from","avatar","type","name","onChange","e","stopPropagation","checked","includes","for","emailIds","dataToUpdate","isStarred","size","favorite","subject","attachments","length","arr","map","label","renderLabels","labels","time","htmlToString","message","MailDetails","openMail","setOpenMail","paginateMail","handleMailToTrash","handleFolderUpdate","handleLabelsUpdate","showReplies","setShowReplies","useState","renderMessage","obj","imgHeight","imgWidth","tag","caret","email","borderless","to","formatDate","end","dangerouslySetInnerHTML","__html","item","index","href","preventDefault","src","thumbnail","alt","fileName","width","handleGoBack","handleFolderClick","folder","show","undefined","hasPreviousMail","dir","emailId","hasNextMail","options","wheelPropagation","sm","color","pill","replies","renderReplies","ComposePopup","composeOpen","toggleCompose","ccOpen","setCCOpen","bccOpen","setBCCOpen","selectOptions","value","img1","img2","img3","img4","img5","img6","SelectComponent","data","Option","toggleCC","toggleBCC","togglePopUp","scrollable","fade","keyboard","backdrop","container","isOpen","contentClassName","toggle","modalClassName","onSubmit","isMulti","isClearable","theme","selectThemeColors","classNamePrefix","components","placeholder","toolbarClassName","wrapperClassName","editorClassName","toolbar","inline","inDropdown","direction","hidden","divider","Mails","query","store","setQuery","selectAllMail","setSidebarOpen","updateMailLabel","resetSelectedMail","selectCurrentMail","mails","personal","company","important","private","ids","bool","then","target","renderMails","currentMail","Sidebar","sidebarOpen","getMails","params","useParams","handleFolder","handleLabel","handleActiveItem","block","Link","action","active","Object","keys","emailsMeta","inbox","draft","spam","EmailApp","setComposeOpen","useDispatch","useSelector","state","useEffect","q"],"mappings":"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","file":"static/js/79.e6859750.chunk.js","sourcesContent":["// ** Custom Components & Plugins\r\nimport classnames from 'classnames'\r\nimport { Star, Paperclip } from 'react-feather'\r\n\r\n// ** Custom Component Import\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Utils\r\nimport { htmlToString } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport { Input, Label } from 'reactstrap'\r\n\r\nconst MailCard = props => {\r\n  // ** Props\r\n  const {\r\n    mail,\r\n    dispatch,\r\n    selectMail,\r\n    labelColors,\r\n    updateMails,\r\n    selectedMails,\r\n    handleMailClick,\r\n    handleMailReadUpdate,\r\n    formatDateToMonthShort\r\n  } = props\r\n\r\n  // ** Function to render labels\r\n  const renderLabels = arr => {\r\n    if (arr && arr.length) {\r\n      return arr.map(label => (\r\n        <span key={label} className={`bullet bullet-${labelColors[label]} bullet-sm mx-50`}></span>\r\n      ))\r\n    }\r\n  }\r\n\r\n  // ** Function to handle read & mail click\r\n  const onMailClick = () => {\r\n    handleMailClick(mail.id)\r\n    handleMailReadUpdate([mail.id], true)\r\n  }\r\n\r\n  return (\r\n    <li onClick={() => onMailClick(mail.id)} className={classnames('d-flex user-mail', { 'mail-read': mail.isRead })}>\r\n      <div className='mail-left pe-50'>\r\n        <Avatar img={mail.from.avatar} />\r\n        <div className='user-action'>\r\n          {/* <Input\r\n            label=''\r\n            type='checkbox'\r\n            checked={selectedMails.includes(mail.id)}\r\n            id={`${mail.from.name}-${mail.id}`}\r\n            onChange={e => e.stopPropagation()}\r\n            onClick={e => {\r\n              dispatch(selectMail(mail.id))\r\n              e.stopPropagation()\r\n            }}\r\n          /> */}\r\n          <div className='form-check'>\r\n            <Input\r\n              type='checkbox'\r\n              id={`${mail.from.name}-${mail.id}`}\r\n              onChange={e => e.stopPropagation()}\r\n              checked={selectedMails.includes(mail.id)}\r\n              onClick={e => {\r\n                dispatch(selectMail(mail.id))\r\n                e.stopPropagation()\r\n              }}\r\n            />\r\n            <Label onClick={e => e.stopPropagation()} for={`${mail.from.name}-${mail.id}`}></Label>\r\n          </div>\r\n          <div\r\n            className='email-favorite'\r\n            onClick={e => {\r\n              e.stopPropagation()\r\n              dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\r\n            }}\r\n          >\r\n            <Star\r\n              size={14}\r\n              className={classnames({\r\n                favorite: mail.isStarred\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='mail-body'>\r\n        <div className='mail-details'>\r\n          <div className='mail-items'>\r\n            <h5 className='mb-25'>{mail.from.name}</h5>\r\n            <span className='text-truncate'>{mail.subject}</span>\r\n          </div>\r\n          <div className='mail-meta-item'>\r\n            {mail.attachments && mail.attachments.length ? <Paperclip size={14} /> : null}\r\n            {renderLabels(mail.labels)}\r\n            <span className='mail-date'>{formatDateToMonthShort(mail.time)}</span>\r\n          </div>\r\n        </div>\r\n        <div className='mail-message'>\r\n          <p className='text-truncate mb-0'>{htmlToString(mail.message)}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default MailCard\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Utils\r\nimport { formatDate } from '@utils'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\nimport {\r\n  Star,\r\n  Tag,\r\n  Mail,\r\n  Info,\r\n  Trash,\r\n  Edit2,\r\n  Folder,\r\n  Trash2,\r\n  Paperclip,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  MoreVertical,\r\n  CornerUpLeft,\r\n  CornerUpRight\r\n} from 'react-feather'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Badge,\r\n  Card,\r\n  Table,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst MailDetails = props => {\r\n  // ** Props\r\n  const {\r\n    mail,\r\n    openMail,\r\n    dispatch,\r\n    labelColors,\r\n    setOpenMail,\r\n    updateMails,\r\n    paginateMail,\r\n    handleMailToTrash,\r\n    handleFolderUpdate,\r\n    handleLabelsUpdate,\r\n    handleMailReadUpdate,\r\n    formatDateToMonthShort\r\n  } = props\r\n\r\n  // ** States\r\n  const [showReplies, setShowReplies] = useState(false)\r\n\r\n  // ** Renders Labels\r\n  const renderLabels = arr => {\r\n    if (arr && arr.length) {\r\n      return arr.map(label => (\r\n        <Badge key={label} color={`light-${labelColors[label]}`} className='me-50 text-capitalize' pill>\r\n          {label}\r\n        </Badge>\r\n      ))\r\n    }\r\n  }\r\n\r\n  // ** Renders Attachments\r\n  const renderAttachments = arr => {\r\n    return arr.map((item, index) => {\r\n      return (\r\n        <a\r\n          key={item.fileName}\r\n          href='/'\r\n          onClick={e => e.preventDefault()}\r\n          className={classnames({\r\n            'mb-50': index + 1 !== arr.length\r\n          })}\r\n        >\r\n          <img src={item.thumbnail} alt={item.fileName} width='16' className='me-50' />\r\n          <span className='text-muted fw-bolder align-text-top'>{item.fileName}</span>\r\n          <span className='text-muted font-small-2 ms-25'>{`(${item.size})`}</span>\r\n        </a>\r\n      )\r\n    })\r\n  }\r\n\r\n  // ** Renders Messages\r\n  const renderMessage = obj => {\r\n    return (\r\n      <Card>\r\n        <CardHeader className='email-detail-head'>\r\n          <div className='user-details d-flex justify-content-between align-items-center flex-wrap'>\r\n            <Avatar img={obj.from.avatar} className='me-75' imgHeight='48' imgWidth='48' />\r\n            <div className='mail-items'>\r\n              <h5 className='mb-0'>{obj.from.name}</h5>\r\n              <UncontrolledDropdown className='email-info-dropup'>\r\n                <DropdownToggle className='font-small-3 text-muted cursor-pointer' tag='span' caret>\r\n                  <span className='me-25'>{obj.from.email}</span>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                  <Table className='font-small-3' size='sm' borderless>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className='text-end text-muted align-top'>From:</td>\r\n                        <td>{obj.from.email}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className='text-end text-muted align-top'>To:</td>\r\n                        <td>{obj.to[0].email}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className='text-end text-muted align-top'>Date:</td>\r\n                        <td>\r\n                          {formatDateToMonthShort(obj.time)}, {formatDateToMonthShort(obj.time, false)}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </Table>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </div>\r\n          <div className='mail-meta-item d-flex align-items-center'>\r\n            <small className='mail-date-time text-muted'>{formatDate(obj.time)}</small>\r\n            <UncontrolledDropdown className='ms-50'>\r\n              <DropdownToggle className='cursor-pointer' tag='span'>\r\n                <MoreVertical size={14} />\r\n              </DropdownToggle>\r\n              <DropdownMenu end>\r\n                <DropdownItem className='d-flex align-items-center w-100'>\r\n                  <CornerUpLeft className='me-50' size={14} />\r\n                  Reply\r\n                </DropdownItem>\r\n                <DropdownItem className='d-flex align-items-center w-100'>\r\n                  <CornerUpRight className='me-50' size={14} />\r\n                  Forward\r\n                </DropdownItem>\r\n                <DropdownItem className='d-flex align-items-center w-100'>\r\n                  <Trash2 className='me-50' size={14} />\r\n                  Delete\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody className='mail-message-wrapper pt-2'>\r\n          <div className='mail-message' dangerouslySetInnerHTML={{ __html: obj.message }}></div>\r\n        </CardBody>\r\n        {obj.attachments && obj.attachments.length ? (\r\n          <CardFooter>\r\n            <div className='mail-attachments'>\r\n              <div className='d-flex align-items-center mb-1'>\r\n                <Paperclip size={16} />\r\n                <h5 className='fw-bolder text-body mb-0 ms-50'>{obj.attachments.length} Attachment</h5>\r\n              </div>\r\n              <div className='d-flex flex-column'>{renderAttachments(obj.attachments)}</div>\r\n            </div>\r\n          </CardFooter>\r\n        ) : null}\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  // ** Renders Replies\r\n  const renderReplies = arr => {\r\n    if (arr.length && showReplies === true) {\r\n      return arr.map((obj, index) => (\r\n        <Row key={index}>\r\n          <Col sm='12'>{renderMessage(obj)}</Col>\r\n        </Row>\r\n      ))\r\n    }\r\n  }\r\n\r\n  // ** Handle show replies, go back, folder & read click functions\r\n  const handleShowReplies = e => {\r\n    e.preventDefault()\r\n    setShowReplies(true)\r\n  }\r\n\r\n  const handleGoBack = () => {\r\n    setOpenMail(false)\r\n  }\r\n\r\n  const handleFolderClick = (e, folder, id) => {\r\n    handleFolderUpdate(e, folder, [id])\r\n    handleGoBack()\r\n  }\r\n\r\n  const handleReadClick = () => {\r\n    handleMailReadUpdate([mail.id], false)\r\n    handleGoBack()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('email-app-details', {\r\n        show: openMail\r\n      })}\r\n    >\r\n      {mail !== null && mail !== undefined ? (\r\n        <Fragment>\r\n          <div className='email-detail-header'>\r\n            <div className='email-header-left d-flex align-items-center'>\r\n              <span className='go-back me-1' onClick={handleGoBack}>\r\n                <ChevronLeft size={20} />\r\n              </span>\r\n              <h4 className='email-subject mb-0'>{mail.subject}</h4>\r\n            </div>\r\n            <div className='email-header-right ms-2 ps-1'>\r\n              <ul className='list-inline m-0'>\r\n                <li className='list-inline-item me-1'>\r\n                  <span\r\n                    className='action-icon favorite'\r\n                    onClick={() => {\r\n                      dispatch(updateMails({ emailIds: [mail.id], dataToUpdate: { isStarred: !mail.isStarred } }))\r\n                    }}\r\n                  >\r\n                    <Star\r\n                      size={18}\r\n                      className={classnames({\r\n                        'text-warning fill-current': mail.isStarred\r\n                      })}\r\n                    />\r\n                  </span>\r\n                </li>\r\n                <li className='list-inline-item me-1'>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle tag='span'>\r\n                      <Folder size={18} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu end>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleFolderClick(e, 'draft', mail.id)}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <Edit2 className='me-50' size={18} />\r\n                        <span>Draft</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleFolderClick(e, 'spam', mail.id)}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <Info className='me-50' size={18} />\r\n                        <span>Spam</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleFolderClick(e, 'trash', mail.id)}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <Trash className='me-50' size={18} />\r\n                        <span>Trash</span>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </li>\r\n                <li className='list-inline-item me-1'>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle tag='span'>\r\n                      <Tag size={18} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu end>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'personal', [mail.id])}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-success bullet-sm me-50' />\r\n                        <span>Personal</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'company', [mail.id])}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-primary bullet-sm me-50' />\r\n                        <span>Company</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'important', [mail.id])}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-warning bullet-sm me-50' />\r\n                        <span>Important</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'private', [mail.id])}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-danger bullet-sm me-50' />\r\n                        <span>Private</span>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </li>\r\n                <li className='list-inline-item me-1'>\r\n                  <span className='action-icon' onClick={handleReadClick}>\r\n                    <Mail size={18} />\r\n                  </span>\r\n                </li>\r\n                <li className='list-inline-item me-1'>\r\n                  <span\r\n                    className='action-icon'\r\n                    onClick={() => {\r\n                      handleMailToTrash([mail.id])\r\n                      handleGoBack()\r\n                    }}\r\n                  >\r\n                    <Trash size={18} />\r\n                  </span>\r\n                </li>\r\n                <li className='list-inline-item email-prev'>\r\n                  <span\r\n                    className={classnames({\r\n                      'action-icon': mail.hasPreviousMail\r\n                    })}\r\n                    onClick={() => {\r\n                      return mail.hasPreviousMail ? dispatch(paginateMail({ dir: 'next', emailId: mail.id })) : null\r\n                    }}\r\n                  >\r\n                    <ChevronLeft\r\n                      size={18}\r\n                      className={classnames({\r\n                        'text-muted': !mail.hasPreviousMail\r\n                      })}\r\n                    />\r\n                  </span>\r\n                </li>\r\n                <li className='list-inline-item email-next'>\r\n                  <span\r\n                    className={classnames({\r\n                      'action-icon': mail.hasNextMail\r\n                    })}\r\n                    onClick={() => {\r\n                      return mail.hasNextMail ? dispatch(paginateMail({ dir: 'previous', emailId: mail.id })) : null\r\n                    }}\r\n                  >\r\n                    <ChevronRight\r\n                      size={18}\r\n                      className={classnames({\r\n                        'text-muted': !mail.hasNextMail\r\n                      })}\r\n                    />\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <PerfectScrollbar className='email-scroll-area' options={{ wheelPropagation: false }}>\r\n            <Row>\r\n              <Col sm='12'>\r\n                <div className='email-label'>{renderLabels(mail.labels)}</div>\r\n              </Col>\r\n            </Row>\r\n            {mail.replies && mail.replies.length ? (\r\n              <Fragment>\r\n                {showReplies === false ? (\r\n                  <Row className='mb-1'>\r\n                    <Col sm='12'>\r\n                      <a className='fw-bold' href='/' onClick={handleShowReplies}>\r\n                        View {mail.replies.length} Earlier Messages\r\n                      </a>\r\n                    </Col>\r\n                  </Row>\r\n                ) : null}\r\n\r\n                {renderReplies(mail.replies)}\r\n              </Fragment>\r\n            ) : null}\r\n            <Row>\r\n              <Col sm='12'>{renderMessage(mail)}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm='12'>\r\n                <Card>\r\n                  <CardBody>\r\n                    <h5 className='mb-0'>\r\n                      Click here to{' '}\r\n                      <a href='/' onClick={e => e.preventDefault()}>\r\n                        Reply\r\n                      </a>{' '}\r\n                      or{' '}\r\n                      <a href='/' onClick={e => e.preventDefault()}>\r\n                        Forward\r\n                      </a>\r\n                    </h5>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </PerfectScrollbar>\r\n        </Fragment>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MailDetails\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Third Party Components\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport Select, { components } from 'react-select'\r\nimport { Minus, X, Maximize2, Paperclip, MoreVertical, Trash } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Button,\r\n  ModalBody,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** User Avatars\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-11.jpg'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/editor/editor.scss'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst ComposePopup = props => {\r\n  // ** Props & Custom Hooks\r\n  const { composeOpen, toggleCompose } = props\r\n\r\n  // ** States\r\n  const [ccOpen, setCCOpen] = useState(false)\r\n  const [bccOpen, setBCCOpen] = useState(false)\r\n\r\n  // ** User Select Options & Components\r\n  const selectOptions = [\r\n    { value: 'pheobe', label: 'Pheobe Buffay', img: img1 },\r\n    { value: 'chandler', label: 'Chandler Bing', img: img2 },\r\n    { value: 'ross', label: 'Ross Geller', img: img3 },\r\n    { value: 'monica', label: 'Monica Geller', img: img4 },\r\n    { value: 'joey', label: 'Joey Tribbiani', img: img5 },\r\n    { value: 'Rachel', label: 'Rachel Green', img: img6 }\r\n  ]\r\n\r\n  const SelectComponent = ({ data, ...props }) => {\r\n    return (\r\n      <components.Option {...props}>\r\n        <div className='d-flex flex-wrap align-items-center'>\r\n          <Avatar className='my-0 me-50' size='sm' img={data.img} />\r\n          {data.label}\r\n        </div>\r\n      </components.Option>\r\n    )\r\n  }\r\n\r\n  // ** CC Toggle Function\r\n  const toggleCC = e => {\r\n    e.preventDefault()\r\n    setCCOpen(!ccOpen)\r\n  }\r\n\r\n  // ** BCC Toggle Function\r\n  const toggleBCC = e => {\r\n    e.preventDefault()\r\n    setBCCOpen(!bccOpen)\r\n  }\r\n\r\n  // ** Toggles Compose POPUP\r\n  const togglePopUp = e => {\r\n    e.preventDefault()\r\n    toggleCompose()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      scrollable\r\n      fade={false}\r\n      keyboard={false}\r\n      backdrop={false}\r\n      id='compose-mail'\r\n      container='.content-body'\r\n      className='modal-lg'\r\n      isOpen={composeOpen}\r\n      contentClassName='p-0'\r\n      toggle={toggleCompose}\r\n      modalClassName='modal-sticky'\r\n    >\r\n      <div className='modal-header'>\r\n        <h5 className='modal-title'>Compose Mail</h5>\r\n        <div className='modal-actions'>\r\n          <a href='/' className='text-body me-75' onClick={togglePopUp}>\r\n            <Minus size={14} />\r\n          </a>\r\n          <a href='/' className='text-body me-75' onClick={e => e.preventDefault()}>\r\n            <Maximize2 size={14} />\r\n          </a>\r\n          <a href='/' className='text-body' onClick={togglePopUp}>\r\n            <X size={14} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <ModalBody className='flex-grow-1 p-0'>\r\n        <Form className='compose-form' onSubmit={e => e.preventDefault()}>\r\n          <div className='compose-mail-form-field'>\r\n            <Label for='email-to' className='form-label'>\r\n              To:\r\n            </Label>\r\n            <div className='flex-grow-1'>\r\n              <Select\r\n                isMulti\r\n                id='email-to'\r\n                isClearable={false}\r\n                theme={selectThemeColors}\r\n                options={selectOptions}\r\n                className='react-select select-borderless'\r\n                classNamePrefix='select'\r\n                components={{ Option: SelectComponent }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <a href='/' className='toggle-cc text-body me-1' onClick={toggleCC}>\r\n                Cc\r\n              </a>\r\n              <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\r\n                Bcc\r\n              </a>\r\n            </div>\r\n          </div>\r\n          {ccOpen === true ? (\r\n            <div className='compose-mail-form-field cc-wrapper'>\r\n              <Label for='email-cc' className='form-label'>\r\n                Cc:\r\n              </Label>\r\n              <div className='flex-grow-1'>\r\n                <Select\r\n                  isMulti\r\n                  id='email-cc'\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  options={selectOptions}\r\n                  className='react-select select-borderless'\r\n                  classNamePrefix='select'\r\n                  components={{ Option: SelectComponent }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <a href='/' className='toggle-cc text-body' onClick={toggleCC}>\r\n                  <X size={14} />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {bccOpen === true ? (\r\n            <div className='compose-mail-form-field cc-wrapper'>\r\n              <Label for='email-bcc' className='form-label'>\r\n                Bcc:\r\n              </Label>\r\n              <div className='flex-grow-1'>\r\n                <Select\r\n                  isMulti\r\n                  id='email-bcc'\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  options={selectOptions}\r\n                  className='react-select select-borderless'\r\n                  classNamePrefix='select'\r\n                  components={{ Option: SelectComponent }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <a href='/' className='toggle-cc text-body' onClick={toggleBCC}>\r\n                  <X size={14} />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div className='compose-mail-form-field'>\r\n            <Label for='email-subject' className='form-label'>\r\n              Subject:\r\n            </Label>\r\n            <Input id='email-subject' placeholder='Subject' />\r\n          </div>\r\n          <div id='message-editor'>\r\n            <Editor\r\n              placeholder='Message'\r\n              toolbarClassName='rounded-0'\r\n              wrapperClassName='toolbar-bottom'\r\n              editorClassName='rounded-0 border-0'\r\n              toolbar={{\r\n                options: ['inline', 'textAlign'],\r\n                inline: {\r\n                  inDropdown: false,\r\n                  options: ['bold', 'italic', 'underline', 'strikethrough']\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='compose-footer-wrapper'>\r\n            <div className='btn-wrapper d-flex align-items-center'>\r\n              <UncontrolledButtonDropdown direction='up' className='me-1'>\r\n                <Button color='primary' onClick={toggleCompose}>\r\n                  Send\r\n                </Button>\r\n                <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\r\n                <DropdownMenu end>\r\n                  <DropdownItem href='/' tag='a' onClick={togglePopUp}>\r\n                    Schedule Send\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledButtonDropdown>\r\n              <div className='email-attachement'>\r\n                <Label className='mb-0' for='attach-email-item'>\r\n                  <Paperclip className='cursor-pointer ms-50' size={18} />\r\n                  <input type='file' name='attach-email-item' id='attach-email-item' hidden />\r\n                </Label>\r\n              </div>\r\n            </div>\r\n            <div className='footer-action d-flex align-items-center'>\r\n              <UncontrolledDropdown className='me-50' direction='up'>\r\n                <DropdownToggle tag='span'>\r\n                  <MoreVertical className='cursor-pointer' size={18} />\r\n                </DropdownToggle>\r\n                <DropdownMenu end>\r\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n                    Add Label\r\n                  </DropdownItem>\r\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n                    Plain text mode\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n                    Print\r\n                  </DropdownItem>\r\n                  <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\r\n                    Check Spelling\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <Trash className='cursor-pointer' size={18} onClick={toggleCompose} />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ComposePopup\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Mail Components Imports\r\nimport MailCard from './MailCard'\r\nimport MailDetails from './MailDetails'\r\nimport ComposePopUp from './ComposePopup'\r\n\r\n// ** Utils\r\nimport { formatDateToMonthShort } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Menu, Search, Folder, Tag, Mail, Trash, Edit2, Info } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Input,\r\n  Label,\r\n  InputGroup,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  InputGroupText,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\nconst Mails = props => {\r\n  // ** Props\r\n  const {\r\n    query,\r\n    store,\r\n    openMail,\r\n    setQuery,\r\n    dispatch,\r\n    selectMail,\r\n    composeOpen,\r\n    updateMails,\r\n    setOpenMail,\r\n    paginateMail,\r\n    selectAllMail,\r\n    toggleCompose,\r\n    setSidebarOpen,\r\n    updateMailLabel,\r\n    resetSelectedMail,\r\n    selectCurrentMail\r\n  } = props\r\n\r\n  const { mails, selectedMails } = store\r\n\r\n  // ** States\r\n\r\n  // ** Variables\r\n  const labelColors = {\r\n    personal: 'success',\r\n    company: 'primary',\r\n    important: 'warning',\r\n    private: 'danger'\r\n  }\r\n\r\n  // ** Handles Update Functions\r\n  const handleMailClick = id => {\r\n    dispatch(selectCurrentMail(id))\r\n    setOpenMail(true)\r\n  }\r\n\r\n  // ** Handles SelectAll\r\n  const handleSelectAll = e => {\r\n    dispatch(selectAllMail(e.target.checked))\r\n  }\r\n\r\n  /*eslint-disable */\r\n\r\n  // ** Handles Folder Update\r\n  const handleFolderUpdate = (e, folder, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMails({ emailIds: ids, dataToUpdate: { folder } }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Label Update\r\n  const handleLabelsUpdate = (e, label, ids = selectedMails) => {\r\n    e.preventDefault()\r\n    dispatch(updateMailLabel({ emailIds: ids, label }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  // ** Handles Mail Read Update\r\n  const handleMailReadUpdate = (arr, bool) => {\r\n    dispatch(updateMails({ emailIds: arr, dataToUpdate: { isRead: bool } })).then(() => dispatch(resetSelectedMail()))\r\n    dispatch(selectAllMail(false))\r\n  }\r\n\r\n  // ** Handles Move to Trash\r\n  const handleMailToTrash = ids => {\r\n    dispatch(updateMails({ emailIds: ids, dataToUpdate: { folder: 'trash' } }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n  /*eslint-enable */\r\n\r\n  // ** Renders Mail\r\n  const renderMails = () => {\r\n    if (mails.length) {\r\n      return mails.map((mail, index) => {\r\n        return (\r\n          <MailCard\r\n            mail={mail}\r\n            key={index}\r\n            dispatch={dispatch}\r\n            selectMail={selectMail}\r\n            updateMails={updateMails}\r\n            labelColors={labelColors}\r\n            selectedMails={selectedMails}\r\n            handleMailClick={handleMailClick}\r\n            handleMailReadUpdate={handleMailReadUpdate}\r\n            formatDateToMonthShort={formatDateToMonthShort}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='email-app-list'>\r\n        <div className='app-fixed-search d-flex align-items-center'>\r\n          <div className='sidebar-toggle d-block d-lg-none ms-1' onClick={() => setSidebarOpen(true)}>\r\n            <Menu size='21' />\r\n          </div>\r\n          <div className='d-flex align-content-center justify-content-between w-100'>\r\n            <InputGroup className='input-group-merge'>\r\n              <InputGroupText>\r\n                <Search className='text-muted' size={14} />\r\n              </InputGroupText>\r\n              <Input\r\n                id='email-search'\r\n                placeholder='Search email'\r\n                value={query}\r\n                onChange={e => setQuery(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n        <div className='app-action'>\r\n          <div className='action-left form-check'>\r\n            <Input\r\n              type='checkbox'\r\n              id='select-all'\r\n              onChange={handleSelectAll}\r\n              checked={selectedMails.length && selectedMails.length === mails.length}\r\n            />\r\n            <Label className='form-check-label fw-bolder ps-25 mb-0' for='select-all'>\r\n              Select All\r\n            </Label>\r\n          </div>\r\n          {selectedMails.length ? (\r\n            <div className='action-right'>\r\n              <ul className='list-inline m-0'>\r\n                <li className='list-inline-item me-1'>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle tag='span'>\r\n                      <Folder size={18} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu end>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleFolderUpdate(e, 'draft')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <Edit2 className='me-50' size={18} />\r\n                        <span>Draft</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleFolderUpdate(e, 'spam')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <Info className='me-50' size={18} />\r\n                        <span>Spam</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleFolderUpdate(e, 'trash')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <Trash className='me-50' size={18} />\r\n                        <span>Trash</span>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </li>\r\n                <li className='list-inline-item me-1'>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle tag='span'>\r\n                      <Tag size={18} />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu end>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'personal')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-success bullet-sm me-50' />\r\n                        <span>Personal</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'company')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-primary bullet-sm me-50' />\r\n                        <span>Company</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'important')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-warning bullet-sm me-50' />\r\n                        <span>Important</span>\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        tag='a'\r\n                        href='/'\r\n                        onClick={e => handleLabelsUpdate(e, 'private')}\r\n                        className='d-flex align-items-center'\r\n                      >\r\n                        <span className='bullet bullet-danger bullet-sm me-50' />\r\n                        <span>Private</span>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </li>\r\n                <li className='list-inline-item me-1'>\r\n                  <span className='action-icon' onClick={() => handleMailReadUpdate(selectedMails, false)}>\r\n                    <Mail size={18} />\r\n                  </span>\r\n                </li>\r\n                <li className='list-inline-item'>\r\n                  <span className='action-icon' onClick={() => handleMailToTrash(selectedMails)}>\r\n                    <Trash size={18} />\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <PerfectScrollbar className='email-user-list' options={{ wheelPropagation: false }}>\r\n          {mails.length ? (\r\n            <ul className='email-media-list'>{renderMails()}</ul>\r\n          ) : (\r\n            <div className='no-results d-block'>\r\n              <h5>No Items Found</h5>\r\n            </div>\r\n          )}\r\n        </PerfectScrollbar>\r\n      </div>\r\n      <MailDetails\r\n        openMail={openMail}\r\n        dispatch={dispatch}\r\n        mail={store.currentMail}\r\n        labelColors={labelColors}\r\n        setOpenMail={setOpenMail}\r\n        updateMails={updateMails}\r\n        paginateMail={paginateMail}\r\n        updateMailLabel={updateMailLabel}\r\n        handleMailToTrash={handleMailToTrash}\r\n        handleFolderUpdate={handleFolderUpdate}\r\n        handleLabelsUpdate={handleLabelsUpdate}\r\n        handleMailReadUpdate={handleMailReadUpdate}\r\n        formatDateToMonthShort={formatDateToMonthShort}\r\n      />\r\n      <ComposePopUp composeOpen={composeOpen} toggleCompose={toggleCompose} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Mails\r\n","// ** React Imports\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { Mail, Send, Edit2, Star, Info, Trash } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, ListGroup, ListGroupItem, Badge } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { store, sidebarOpen, toggleCompose, dispatch, getMails, resetSelectedMail, setSidebarOpen, setOpenMail } =\r\n    props\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** Functions To Handle Folder, Label & Compose\r\n  const handleFolder = folder => {\r\n    setOpenMail(false)\r\n    dispatch(getMails({ ...store.params, folder }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  const handleLabel = label => {\r\n    setOpenMail(false)\r\n    dispatch(getMails({ ...store.params, label }))\r\n    dispatch(resetSelectedMail())\r\n  }\r\n\r\n  const handleComposeClick = () => {\r\n    toggleCompose()\r\n    setSidebarOpen(false)\r\n  }\r\n\r\n  // ** Functions To Active List Item\r\n  const handleActiveItem = value => {\r\n    if ((params.folder && params.folder === value) || (params.label && params.label === value)) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classnames('sidebar-left', {\r\n        show: sidebarOpen\r\n      })}\r\n    >\r\n      <div className='sidebar'>\r\n        <div className='sidebar-content email-app-sidebar'>\r\n          <div className='email-app-menu'>\r\n            <div className='form-group-compose text-center compose-btn'>\r\n              <Button className='compose-email' color='primary' block onClick={handleComposeClick}>\r\n                Compose\r\n              </Button>\r\n            </div>\r\n            <PerfectScrollbar className='sidebar-menu-list' options={{ wheelPropagation: false }}>\r\n              <ListGroup tag='div' className='list-group-messages'>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/inbox'\r\n                  onClick={() => handleFolder('inbox')}\r\n                  action\r\n                  active={!Object.keys(params).length || handleActiveItem('inbox')}\r\n                >\r\n                  <Mail size={18} className='me-75' />\r\n                  <span className='align-middle'>Inbox</span>\r\n                  {store.emailsMeta.inbox ? (\r\n                    <Badge className='float-end' color='light-primary' pill>\r\n                      {store.emailsMeta.inbox}\r\n                    </Badge>\r\n                  ) : null}\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/sent'\r\n                  onClick={() => handleFolder('sent')}\r\n                  action\r\n                  active={handleActiveItem('sent')}\r\n                >\r\n                  <Send size={18} className='me-75' />\r\n                  <span className='align-middle'>Sent</span>\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/draft'\r\n                  onClick={() => handleFolder('draft')}\r\n                  action\r\n                  active={handleActiveItem('draft')}\r\n                >\r\n                  <Edit2 size={18} className='me-75' />\r\n                  <span className='align-middle'>Draft</span>\r\n                  {store.emailsMeta.draft ? (\r\n                    <Badge className='float-end' color='light-warning' pill>\r\n                      {store.emailsMeta.draft}\r\n                    </Badge>\r\n                  ) : null}\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/starred'\r\n                  onClick={() => handleFolder('starred')}\r\n                  action\r\n                  active={handleActiveItem('starred')}\r\n                >\r\n                  <Star size={18} className='me-75' />\r\n                  <span className='align-middle'>Starred</span>\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/spam'\r\n                  onClick={() => handleFolder('spam')}\r\n                  action\r\n                  active={handleActiveItem('spam')}\r\n                >\r\n                  <Info size={18} className='me-75' />\r\n                  <span className='align-middle'>Spam</span>\r\n                  {store.emailsMeta.spam ? (\r\n                    <Badge className='float-end' color='light-danger' pill>\r\n                      {store.emailsMeta.spam}\r\n                    </Badge>\r\n                  ) : null}\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/trash'\r\n                  onClick={() => handleFolder('trash')}\r\n                  action\r\n                  active={handleActiveItem('trash')}\r\n                >\r\n                  <Trash size={18} className='me-75' />\r\n                  <span className='align-middle'>Trash</span>\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n              <h6 className='section-label mt-3 mb-1 px-2'>Labels</h6>\r\n              <ListGroup tag='div' className='list-group-labels'>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/label/personal'\r\n                  onClick={() => handleLabel('personal')}\r\n                  active={handleActiveItem('personal')}\r\n                  action\r\n                >\r\n                  <span className='bullet bullet-sm bullet-success me-1'></span>\r\n                  Personal\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/label/company'\r\n                  onClick={() => handleLabel('company')}\r\n                  active={handleActiveItem('company')}\r\n                  action\r\n                >\r\n                  <span className='bullet bullet-sm bullet-primary me-1'></span>\r\n                  Company\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/label/important'\r\n                  onClick={() => handleLabel('important')}\r\n                  active={handleActiveItem('important')}\r\n                  action\r\n                >\r\n                  <span className='bullet bullet-sm bullet-warning me-1'></span>\r\n                  Important\r\n                </ListGroupItem>\r\n                <ListGroupItem\r\n                  tag={Link}\r\n                  to='/apps/email/label/private'\r\n                  onClick={() => handleLabel('private')}\r\n                  active={handleActiveItem('private')}\r\n                  action\r\n                >\r\n                  <span className='bullet bullet-sm bullet-danger me-1'></span>\r\n                  Private\r\n                </ListGroupItem>\r\n              </ListGroup>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","// ** React Imports\r\nimport { useParams } from 'react-router-dom'\r\nimport { Fragment, useEffect, useState } from 'react'\r\n\r\n// ** Email App Component Imports\r\nimport Mails from './Mails'\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getMails,\r\n  selectMail,\r\n  updateMails,\r\n  paginateMail,\r\n  selectAllMail,\r\n  updateMailLabel,\r\n  resetSelectedMail,\r\n  selectCurrentMail\r\n} from './store'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-email.scss'\r\n\r\nconst EmailApp = () => {\r\n  // ** States\r\n  const [query, setQuery] = useState('')\r\n  const [openMail, setOpenMail] = useState(false)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [composeOpen, setComposeOpen] = useState(false)\r\n\r\n  // ** Toggle Compose Function\r\n  const toggleCompose = () => setComposeOpen(!composeOpen)\r\n\r\n  // ** Store Variables\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.email)\r\n\r\n  // ** Vars\r\n  const params = useParams()\r\n\r\n  // ** UseEffect: GET initial data on Mount\r\n  useEffect(() => {\r\n    dispatch(getMails({ q: query || '', folder: params.folder || 'inbox', label: params.label || '' }))\r\n  }, [query, params.folder, params.label])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar\r\n        store={store}\r\n        dispatch={dispatch}\r\n        getMails={getMails}\r\n        setOpenMail={setOpenMail}\r\n        sidebarOpen={sidebarOpen}\r\n        toggleCompose={toggleCompose}\r\n        setSidebarOpen={setSidebarOpen}\r\n        resetSelectedMail={resetSelectedMail}\r\n      />\r\n      <div className='content-right'>\r\n        <div className='content-body'>\r\n          <div\r\n            className={classnames('body-content-overlay', {\r\n              show: sidebarOpen\r\n            })}\r\n            onClick={() => setSidebarOpen(false)}\r\n          ></div>\r\n          <Mails\r\n            store={store}\r\n            query={query}\r\n            setQuery={setQuery}\r\n            dispatch={dispatch}\r\n            getMails={getMails}\r\n            openMail={openMail}\r\n            selectMail={selectMail}\r\n            setOpenMail={setOpenMail}\r\n            updateMails={updateMails}\r\n            composeOpen={composeOpen}\r\n            paginateMail={paginateMail}\r\n            selectAllMail={selectAllMail}\r\n            toggleCompose={toggleCompose}\r\n            setSidebarOpen={setSidebarOpen}\r\n            updateMailLabel={updateMailLabel}\r\n            selectCurrentMail={selectCurrentMail}\r\n            resetSelectedMail={resetSelectedMail}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default EmailApp\r\n"],"sourceRoot":""}